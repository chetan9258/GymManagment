{"ast":null,"code":"import { GymService } from '../services/gym.service';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/gym.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../nav-menu/nav-menu.component\";\nimport * as i4 from \"ag-grid-angular\";\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nexport let EmployeeComponent = /*#__PURE__*/(() => {\n  class EmployeeComponent {\n    constructor(gymServices, _router, route) {\n      this.gymServices = gymServices;\n      this._router = _router;\n      this.route = route;\n      this.frameworkComponents = {\n        buttonRenderer: BtnCellRendererComponent\n      };\n      this.columnDefs = [{\n        headerName: 'Id',\n        field: 'MbrId',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        hide: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Name',\n        field: 'MbrName',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Designaion',\n        field: 'MbrType',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Mobile No',\n        field: 'MbrMob',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'DOB',\n        field: 'MbrDOB',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Email',\n        field: 'MbrEmail',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Address',\n        field: 'MbrAddr',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Member Ship',\n        field: 'MbrShipName',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Action',\n        cellRenderer: 'buttonRenderer',\n        cellRendererParams: {\n          onClick: this.onBtnClick.bind(this),\n          OnDelete: this.OnDeleteMember.bind(this)\n        }\n      }];\n    }\n    ngOnInit() {\n      this.IsSessionEnable = this.gymServices.CheckToken();\n      if (!this.IsSessionEnable) return this._router.navigate([\"\"]);\n    }\n    AddEmployee() {\n      return this._router.navigate([\"/AddEmployee\"]);\n    }\n    onBtnClick(e) {\n      /*alert(e.rowData);   */\n      return this._router.navigate([\"/AddEmployee\"], {\n        queryParams: e.rowData\n      });\n    }\n    onGridReady(params) {\n      debugger;\n      params.api.sizeColumnsToFit();\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n      let dataValue;\n      this.gymServices.GetAllMembers().subscribe(result => {\n        if (!isNull(result)) {\n          dataValue = result;\n          params.api.setRowData(dataValue);\n        } else {\n          dataValue = \"\";\n          params.api.setRowData(dataValue);\n        }\n      }, error => alert(error.message));\n    }\n    OnDeleteMember(data) {\n      this.gymServices.DeleteMember(data.MbrId).subscribe(result => {\n        if (!isNull(result)) {\n          alert('Member Deleted Successfully !');\n          this.gymServices.GetAllMembers().subscribe(result => {\n            if (!isNull(result)) {\n              this.rowData = result;\n            } else {\n              this.rowData = \"\";\n            }\n          }, error => alert(error.message));\n        } else {\n          alert(\"Error !\");\n        }\n      }, error => alert(error.message));\n    }\n  }\n  EmployeeComponent.ɵfac = function EmployeeComponent_Factory(t) {\n    return new (t || EmployeeComponent)(i0.ɵɵdirectiveInject(i1.GymService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  EmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmployeeComponent,\n    selectors: [[\"app-employee\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"wrapper\", \"fadeInDown\"], [2, \"margin-bottom\", \"5px\"], [1, \"btn-info\", 3, \"click\"], [\"domLayout\", \"autoHeight\", \"pagination\", \"true\", \"paginationPageSize\", \"20\", 1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"100%\", 3, \"animateRows\", \"rowData\", \"gridReady\"]],\n    template: function EmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function EmployeeComponent_Template_button_click_4_listener() {\n          return ctx.AddEmployee();\n        });\n        i0.ɵɵtext(5, \"Add Member\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ag-grid-angular\", 3);\n        i0.ɵɵlistener(\"gridReady\", function EmployeeComponent_Template_ag_grid_angular_gridReady_6_listener($event) {\n          return ctx.onGridReady($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"animateRows\", true)(\"rowData\", ctx.rowData);\n      }\n    },\n    directives: [i3.NavMenuComponent, i4.AgGridAngular],\n    styles: [\"\"]\n  });\n  return EmployeeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}