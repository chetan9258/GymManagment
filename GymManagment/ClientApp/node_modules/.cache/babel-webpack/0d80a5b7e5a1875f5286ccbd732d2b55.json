{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { isNull } from 'util';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/gym.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Mobile No is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_div_10_div_1_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fval.MobileNo.errors.required || ctx_r0.fval.MobileNo.errors.maxlength || ctx_r0.fval.MobileNo.errors.minlength);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(gymServices, formBuilder, _router) {\n      this.gymServices = gymServices;\n      this.formBuilder = formBuilder;\n      this._router = _router;\n    } /*, public nav: NavMenuComponent*/\n    ngOnInit() {\n      this.loginform = this.formBuilder.group({\n        MobileNo: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n        password: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.loginform.controls.MobileNo.value == undefined || this.loginform.controls.MobileNo.value.length != 10) {\n        alert(\"Please provide valid 10 digit number\");\n        return;\n      }\n      if (this.loginform.controls.password.value == undefined || this.loginform.controls.password.value.length != 5) {\n        alert(\"Invalid password\");\n        return;\n      }\n      this.gymServices.login(this.loginform.controls.MobileNo.value, this.loginform.controls.password.value).subscribe(result => {\n        if (!isNull(result.access_token)) {\n          localStorage.setItem(\"token\", result.access_token);\n          localStorage.setItem(\"isAdmin\", 'false');\n          return this._router.navigate([\"/Home\"]);\n        }\n      }, error => alert(error.message));\n    }\n    numberOnly(event) {\n      const charCode = event.which ? event.which : event.keyCode;\n      if (charCode > 31 && (charCode < 46 || charCode > 57)) {\n        return false;\n      }\n      return true;\n    }\n    get fval() {\n      return this.loginform.controls;\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.GymService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 6,\n    consts: [[1, \"bg-image\"], [1, \"loginFormDesign\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"wrapper\", \"fadeInDown\", \"m-0\"], [1, \"card\", \"m-0\"], [\"action\", \"#\", 1, \"d-flex\", \"flex-column\", 3, \"formGroup\", \"ngSubmit\"], [1, \"h3\", \"text-center\", \"text-white\"], [1, \"d-flex\", \"align-items-center\", \"input-field\", \"my-3\", \"mb-4\"], [1, \"far\", \"fa-user\", \"p-2\"], [\"type\", \"text\", \"formControlName\", \"MobileNo\", \"placeholder\", \"Mobile Number\", \"required\", \"\", \"maxlength\", \"10\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\", \"keypress\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-center\", \"input-field\", \"mb-4\"], [1, \"fas\", \"fa-lock\", \"p-2\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", \"id\", \"pwd\", \"maxlength\", \"5\", 1, \"form-control\"], [1, \"d-sm-flex\", \"align-items-sm-center\", \"justify-content-sm-between\"], [1, \"d-flex\", \"align-items-center\"], [1, \"mt-sm-0\", \"mt-3\"], [\"href\", \"#\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-primary\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelement(8, \"span\", 7);\n        i0.ɵɵelementStart(9, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.MobileNo = $event;\n        })(\"keypress\", function LoginComponent_Template_input_keypress_9_listener($event) {\n          return ctx.numberOnly($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelement(12, \"span\", 11);\n        i0.ɵɵelement(13, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 13);\n        i0.ɵɵelement(15, \"div\", 14);\n        i0.ɵɵelementStart(16, \"div\", 15);\n        i0.ɵɵelementStart(17, \"a\", 16);\n        i0.ɵɵtext(18, \"Forgot password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\");\n        i0.ɵɵelement(20, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginform);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.MobileNo)(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx.submitted && ctx.fval.MobileNo.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.fval.MobileNo.errors);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i2.MaxLengthValidator, i4.NgClass, i4.NgIf],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}