{"version":3,"sources":["./src/app/renewal-membership/renewal-membership.component.ts","./src/app/membership-history/membership-history.component.css","./src/app/employee/employee.component.css","./src/app/add-expenses/add-expenses.component.css","./src/app/all-reports/all-reports.component.html","./src/app/Renders/btn-renderer.component.ts","./src/app/gym-branches/gym-branches.component.ts","./src/app/remaining-balance/remaining-balance.component.css","./src/app/all-reports/all-reports.component.css","./src/app/send-message/send-message.component.ts","./src/app/gym-profile/gym-profile.component.css","./src/app/trainers-history/trainers-history.component.css","./src/app/ptdetails/ptdetails.component.ts","./src/app/payments/payments.component.css","./src/app/btn-cell-renderer/btn-cell-renderer.component.ts","./src/app/employee/employee.component.ts","./src/app/add-ptdetails/add-ptdetails.component.ts","./src/app/add-membership-plan/add-membership-plan.component.css","./src/app/add-gym-branches/add-gym-branches.component.css","./src/app/payments/payments.component.ts","./src/app/renewal-payments/renewal-payments.component.css","./src/app/add-remaining-balance/add-remaining-balance.component.html","./src/app/renewal-membership/renewal-membership.component.css","./src/app/add-employee/add-employee.component.ts","./src/app/renewal-payments/renewal-payments.component.html","./src/app/home/home.component.ts","./src/app/add-expenses/add-expenses.component.ts","./src/app/gym-expenses/gym-expenses.component.ts","./src/environments/environment.ts","./src/app/membership-history/membership-history.component.html","./src/app/trainers-history/trainers-history.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/home/home.component.html","./src/app/membership-history/membership-history.component.ts","./src/app/fetch-data/fetch-data.component.ts","./src/app/add-remaining-balance/add-remaining-balance.component.ts","./src/app/add-membership-plan/add-membership-plan.component.html","./src/app/gym-profile/gym-profile.component.html","./src/app/gym-expenses/gym-expenses.component.html","./src/app/all-reports/all-reports.component.ts","./src/app/gym-profile/gym-profile.component.ts","./src/app/ptdetails/ptdetails.component.css","./src/app/add-employee/add-employee.component.css","./src/app/gym-branches/gym-branches.component.css","./src/app/Renders/edit-btn-renderer.component.ts","./src/app/add-expenses/add-expenses.component.html","./src/app/remaining-balance/remaining-balance.component.ts","./src/app/counter/counter.component.ts","./src/app/home/home.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/app.component.ts","./src/app/add-ptdetails/add-ptdetails.component.html","./src/app/counter/counter.component.html","./src/app/app.component.html","./src/app/ptdetails/ptdetails.component.html","./src/app/fetch-data/fetch-data.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/forgot-password/forgot-password.component.ts","./src/app/all-invoices/all-invoices.component.ts","./src/app/gym-expenses/gym-expenses.component.css","./src/app/all-invoices/all-invoices.component.html","./src/app/app.module.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/membership-plan/membership-plan.component.css","./src/app/membership-plan/membership-plan.component.html","./src/app/add-salary/add-salary.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/add-gym-branches/add-gym-branches.component.html","./src/app/add-ptdetails/add-ptdetails.component.css","./src/app/employee/employee.component.html","./src/app/forgot-password/forgot-password.component.css","./src/app/trainers-history/trainers-history.component.html","./src/app/all-invoices/all-invoices.component.css","./src/app/membership-plan/membership-plan.component.ts","./src/app/add-remaining-balance/add-remaining-balance.component.css","./src/app/add-employee/add-employee.component.html","./src/app/renewal-payments/renewal-payments.component.ts","./src/app/send-message/send-message.component.css","./src/app/confirm-equal-validator.directive.ts.directive.ts","./src/app/login/login.component.html","./src/app/salary-master/salary-master.component.ts","./src/app/salary-master/salary-master.component.html","./src/app/support/support.component.css","./src/app/renewal-membership/renewal-membership.component.html","./src/app/add-salary/add-salary.component.ts","./src/app/login/login.component.css","./src/app/support/support.component.html","./src/app/add-gym-branches/add-gym-branches.component.ts","./src/app/remaining-balance/remaining-balance.component.html","./src/app/payments/payments.component.html","./src/app/send-message/send-message.component.html","./src/app/services/gym.service.ts","./src/app/login/login.component.ts","./src/app/add-membership-plan/add-membership-plan.component.ts","./src/app/gym-branches/gym-branches.component.html","./src/app/add-salary/add-salary.component.css","./src/main.ts","./src/app/support/support.component.ts","./src/app/salary-master/salary-master.component.css"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAkD;AAEG;AAEvB;AAC2B;AACgB;IAQ5D,0BAA0B,SAA1B,0BAA0B;IAQnC,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB;QAA9E,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAC9F,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,oFAAoB;SACvC;QAED,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aAEb;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,iBAAiB;gBAC7B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,iBAAiB;gBAC7B,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,cAAc;gBAC1B,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,mBAAmB;gBAC/B,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,kBAAkB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBACnC,KAAK,EAAE,OAAO;iBACjB;aACJ;SACJ,CAAC;IACL,CAAC;IAEF,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAGC,UAAU,CAAC,CAAC;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,WAAW,CAAC,MAAM;QACd,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,mCAAmC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBAED,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CAEJ;;YA5IQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;;AASlB,0BAA0B;IALtC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,+FAAkD;;KAEnD,CAAC;mFASmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc;GARzF,0BAA0B,CAgItC;AAhIsC;;;;;;;;;;;;;ACdvC;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;ACAxO;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;;;;;ACAhN;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;ACAxN;AAAe,ynFAA0jF,WAAW,2CAA2C,aAAa,koBAAkoB,cAAc,mlBAAmlB,E;;;;;;;;;;;;;;;;;;;ACA7zH;AAET;AAEY;IAOxC,oBAAoB,SAApB,oBAAoB;IAE7B,YAAoB,WAAuB,EAAU,OAAe;QAAhD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAGzE,MAAM,CAAC,MAAM;QACT,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,OAAO,CAAC,KAAW;QACf,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,WAAW,CAAC,MAAM;QAEd,MAAM,MAAM,GAAG;YACX,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;SAEjC;QACD,iDAAiD;QACjD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAEhC,CAAC;CAGJ;;YAjCQ,gEAAU;YAFV,sDAAM;;AASF,oBAAoB;IALhC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,0FAA0F;KAEvG,CAAC;mFAGmC,gEAAU,EAAmB,sDAAM;GAF3D,oBAAoB,CA0BhC;AA1BgC;;;;;;;;;;;;;;;;;;;;;;;;;ACXiB;AAEG;AAGZ;AACmD;IAQ/E,oBAAoB,SAApB,oBAAoB;IAS7B,YAAoB,WAAuB,EAAU,OAAe;QAAhD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAChE,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,uGAAwB;SAC3C;QACD,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACA;gBACG,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,iBAAiB,EAAE,EAElB;aAEJ;SAEJ,CAAC;IACN,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEC,WAAW;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,WAAW,CAAC,MAAM;QACd,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QAEtC,IAAI,SAAS,CAAC;QACd,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE;YACxC,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE;YACvC,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE;YACvC,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;QAEpD,yDAAyD;QACzD,iCAAiC;QACjC,kCAAkC;QAClC,OAAO;QACP,YAAY;QACZ,yCAAyC;QACzC,OAAO;QACP,mCAAmC;QAEnC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;CACJ;;YAhGQ,gEAAU;YAGV,sDAAM;;AASF,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;mFAUmC,gEAAU,EAAmB,sDAAM;GAT3D,oBAAoB,CAoFhC;AApFgC;;;;;;;;;;;;;ACdjC;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;ACAxO;AAAe,sEAAO,yBAAyB,yBAAyB,KAAK,+CAA+C,uXAAuX,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjc;AACkB;AACf;AACI;AAC3B;IASjB,oBAAoB,SAApB,oBAAoB;IAa7B,YAAmB,WAAwB,EAAU,OAAe,EAAU,WAAuB;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAY;QAXrG,oBAAoB;QACpB,kBAAa,GAAG,EAAE,CAAC;QAInB,cAAS,GAAG,KAAK,CAAC;QAClB,aAAQ,GAAsB,EAAE,CAAC;IAOjC,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAGtC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAExC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,gBAAgB,GAAG;YACpB,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,SAAS;YACpB,aAAa,EAAE,YAAY;YAC3B,eAAe,EAAE,cAAc;YAC/B,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,IAAI;SAC1B,CAAC;IACN,CAAC;IAED,QAAQ;QACJ,QAAQ,CAAC;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACzE,KAAK,CAAC,cAAc,CAAC,CAAC;YAE1B,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACpC;IACL,CAAC;IAED,YAAY,CAAC,IAAS;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IACD,WAAW,CAAC,KAAU;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,aAAa;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC;aAEhE;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACrC,CAAC;CACJ;;YAtFQ,0DAAW;YAEX,sDAAM;YADN,gEAAU;;AAWN,oBAAoB;IALhC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE/C,CAAC;mFAckC,0DAAW,EAAmB,sDAAM,EAAuB,gEAAU;GAb5F,oBAAoB,CA0EhC;AA1EgC;;;;;;;;;;;;;ACbjC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;ACAxN;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlL;AAEG;AAEvB;AAC2B;AACmC;AAC5F,6EAA6E;IAOhE,kBAAkB,SAAlB,kBAAkB;IAW3B,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB;QAA9E,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAC9F,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,uGAAwB;SAC3C;QACD,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aAEb;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,kBAAkB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBACnC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;iBAE3C;aAEJ;SAEJ,CAAC;IAAK,CAAC;IAEZ,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE7C,CAAC;IAEC,KAAK;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,CAAC;QACR,wBAAwB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,WAAW,CAAC,MAAM;QACd,QAAQ,CAAC;QACT,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBAED,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,KAAK,CAAC,+BAA+B,CAAC,CAAC;gBACvC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAClD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;qBACzB;yBACI;wBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;qBAErB;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI;gBACD,KAAK,CAAC,SAAS,CAAC,CAAC;aACpB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CACJ;;YAjNQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;;AASlB,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;;KAE1C,CAAC;mFAYmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc;GAXzF,kBAAkB,CAqM9B;AArM8B;;;;;;;;;;;;;ACd/B;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;ACA9J;AAET;AAEY;IAOxC,wBAAwB,SAAxB,wBAAwB;IAEjC,YAAoB,WAAuB,EAAU,OAAe;QAAhD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAGzE,MAAM,CAAC,MAAM;QACT,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,OAAO,CAAC,KAAW;QACf,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,WAAW,CAAC,MAAM;QAEd,MAAM,MAAM,GAAG;YACX,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;SAEjC;QACD,iDAAiD;QACjD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAEhC,CAAC;IAED,QAAQ,CAAC,MAAM;QAEX,MAAM,MAAM,GAAG;YACX,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;SAEjC;QAED,IAAI,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/C;IAEL,CAAC;CACJ;;YA7CQ,gEAAU;YAFV,sDAAM;;AASF,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QAC/B,QAAQ,EAAE,wLAAwL;KAErM,CAAC;mFAGmC,gEAAU,EAAmB,sDAAM;GAF3D,wBAAwB,CAsCpC;AAtCoC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AAEG;AAEvB;AAC2B;AACmC;AAC5F,6EAA6E;IAQhE,iBAAiB,SAAjB,iBAAiB;IAS1B,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB;QAA9E,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAC9F,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,uGAAwB;SAC3C;QACD,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,kBAAkB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBACnC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;iBAE3C;aAEJ;SAEJ,CAAC;IAAI,CAAC;IAEX,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE7C,CAAC;IACC,WAAW;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,CAAC;QACR,wBAAwB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,WAAW,CAAC,MAAM;QACd,QAAQ,CAAC;QACT,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACrC,IAAI,SAAS,CAAC;QACf,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBAED,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,KAAK,CAAC,+BAA+B,CAAC,CAAC;gBAEvC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;qBACzB;yBACI;wBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;qBAErB;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAGpC;iBACI;gBACD,KAAK,CAAC,SAAS,CAAC,CAAC;aACpB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CAEJ;;YApKQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;;AAUlB,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;mFAUmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc;GATzF,iBAAiB,CAuJ7B;AAvJ6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdoB;AACkB;AACf;AAEvB;AAC2B;AAQf;IAO7B,qBAAqB,SAArB,qBAAqB;IA2B9B,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB,EAAS,QAAkB;QAA1I,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAxB9J,eAAU,GAAsB,EAAE,CAAC;QACnC,eAAU,GAAsB,EAAE,CAAC;QACnC,cAAS,GAAuB,EAAE,CAAC;QACnC,cAAS,GAAG,KAAK,CAAC;QAelB,mBAAc,GAAW,IAAI,CAAC;IAQ9B,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAGvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;QAEtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEpC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,qBAAqB,EAAE,CAAC,EAAE,CAAC;YAC3B,cAAc,EAAE,CAAC,EAAE,CAAC;SAEvB,CAAC,CAAC;QAIH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,SAAS,EAAE;gBAE/C,8BAA8B;gBAC9B,uBAAuB;gBAEvB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,sCAAsC;gBACtC,kDAAkD;gBAClD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAE3B,4DAA4D;gBAC5D,yCAAyC;gBAEzC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;aAIzC;QACL,CAAC,CAAC;QACF,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;IAGzB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YACzB,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;gBAEvB,QAAQ,CAAC;gBACT,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACnE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;qBAChD;gBAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI,EAAE,UAAU;gBACb,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACtE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;qBAChD;gBAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC;YAAA,CAAC;YACxE,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE;gBAC7B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,SAAS,CAAC;aACjD;QAEL,CAAC,EACG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,YAAY,CAAC,KAAK;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAGD,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC;gBAC/D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,cAAc,IAAI,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC;gBAE5F,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE;oBAC7B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC;iBAC5C;aAEJ;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,yBAAyB,CAAC,KAAK;QAE3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE;IAEpG,CAAC;IAGD,oBAAoB,CAAC,KAAK;QAEtB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,YAAY;IAEzF,CAAC;CAEJ;;YAtMQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAAE,8DAAc;YAQtB,wDAAQ;;AAOJ,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,0FAA6C;;KAE9C,CAAC;mFA4BmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc,EAAmB,wDAAQ;GA3BrJ,qBAAqB,CAoLjC;AApLiC;;;;;;;;;;;;;ACrBlC;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;ACA5O;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;;;;;;;;;;;;;;ACAlL;AAEG;AAEvB;AAC2B;AAEzD,6EAA6E;IAOhE,iBAAiB,SAAjB,iBAAiB;IAQ1B,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB;QAA9E,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAE9F,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aAEb;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,oBAAoB;aAG/B;SAEJ,CAAC;IACN,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE3C,CAAC;IAGD,WAAW,CAAC,MAAM;QACd,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACpD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBAED,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CAEJ;;YAzHQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;;AASlB,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;mFASmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc;GARzF,iBAAiB,CA6G7B;AA7G6B;;;;;;;;;;;;;ACd9B;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;ACApO;AAAe,i8HAAk4H,E;;;;;;;;;;;;ACAj5H;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCtL;AACkB;AACf;AAEvB;AAC2B;AAQf;AAE1C,kCAAkC;IAOrB,oBAAoB,SAApB,oBAAoB;IAqE7B,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB,EAAS,QAAkB;QAA1I,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAlE9J,cAAS,GAAuB,EAAE,CAAC;QACnC,aAAQ,GAAsB,EAAE,CAAC;QACjC,eAAU,GAAsB,EAAE,CAAC;QACnC,eAAU,GAAsB,EAAE,CAAC;QACnC,cAAS,GAAG,KAAK,CAAC;IAgElB,CAAC;IAED,QAAQ;QAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACtD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAGvC,YAAY;QACZ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;QAGnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAErC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,MAAM,EAAC,CAAC,EAAE,CAAC;YACX,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxF,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAEpC,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,YAAY,EAAE,CAAC,EAAE,CAAC;YAElB,QAAQ,EAAE,CAAC,EAAE,CAAC;YAGd,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,qBAAqB,EAAE,CAAC,EAAE,CAAC;YAC3B,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,UAAU,EAAE,CAAC,EAAE,CAAC;SAEnB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,SAAS,EAAE;gBAC/C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;gBACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;gBACjC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACnC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;gBAChD,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;gBACpD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;gBACpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,qBAAqB,CAAC;gBAChD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;gBAClC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAGhC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;gBAC1D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBAGpC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;aAEzC;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC1B,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAClE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC/C;gBAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI,EAAE,UAAU;gBACb,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACpE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC/C;gBAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,sCAAsC;QAC1C,CAAC,EACG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC;gBAC/D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,cAAc,IAAI,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC;aAE/F;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,eAAe,CAAC,KAAK;QACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,kBAAkB,CAAC,KAAK;QAEpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACvF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE;IAEtG,CAAC;IAED,yBAAyB,CAAC,KAAK;QAE3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE;IAEpG,CAAC;IAED,YAAY,CAAC,KAAK;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAED,WAAW,CAAC,KAAK;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1D,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;QAC/D,IAAI,GAAG,GAAG,EAAE,EAAE;YACV,KAAK,CAAC,6BAA6B,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SACpB;IACL,CAAC;IAGD,oBAAoB,CAAC,KAAK;QAEtB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,YAAY;IAEzF,CAAC;IAED,UAAU,CAAC,KAAK;QACZ,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7D,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE;YACnD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAEhB,CAAC;CAEJ;;YA/TQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAAE,8DAAc;YAQtB,wDAAQ;;AASJ,oBAAoB;IALhC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE/C,CAAC;mFAsEmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc,EAAmB,wDAAQ;GArErJ,oBAAoB,CA2ShC;AA3SgC;;;;;;;;;;;;;ACvBjC;AAAe,41DAA6xD,mDAAmD,2MAA2M,gBAAgB,mCAAmC,kBAAkB,KAAK,4BAA4B,0sCAA0sC,iDAAiD,kmBAAkmB,gDAAgD,88BAA88B,gDAAgD,0sCAA0sC,E;;;;;;;;;;;;;;;;;;;;;;;;;ACAnrM;AAEG;AAEvB;AAC2B;IAO5C,aAAa,SAAb,aAAa;IAiBtB,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB;QAA9E,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAPlG,cAAS,GAAM,CAAC,CAAC;QACjB,YAAO,GAAQ,CAAC,CAAC;QACjB,OAAE,GAAQ,CAAC,CAAC;QACZ,YAAO,GAAQ,CAAC,CAAC;QACjB,oBAAe,GAAM,CAAC,CAAC;QAkLvB,aAAQ,GAAG,EAAE,CAAC;QA9KV,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,wBAAwB;gBACpC,KAAK,EAAE,kBAAkB;gBACzB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,cAAc;gBAC1B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,gBAAgB;gBAC5B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;SACJ,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG;YACf;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,IAAI,EAAE,IAAI;aAEb;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;SACJ,CAAC;IAEN,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE3C,CAAC;IAED,WAAW,CAAC,MAAM;QACd,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,QAAQ,CAAC;gBACT,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE;oBAE3B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,qIAAqI;oBACxN,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC9E,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBACpE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC9E,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC9F,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;iBAErB;gBACD,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC;gBAChC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;gBAEjC,IAAI,MAAM,CAAC,UAAU,EAAE;oBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;wBAC/C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;qBAC1G;iBACJ;gBACD,iEAAiE;gBACjE,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtC;iBACI;gBAED,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAGD,YAAY,CAAC,MAAM;QACf,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC;QAEvC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aAEjC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CAGJ;;YA3MQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;;AAOlB,aAAa;IALzB,+DAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,iFAAoC;;KAEvC,CAAC;mFAkBmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc;GAjBzF,aAAa,CAiMzB;AAjMyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwB;AACkB;AACf;AAEvB;AAC2B;IAY5C,oBAAoB,SAApB,oBAAoB;IAc7B,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB;QAA/G,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAHnI,cAAS,GAAG,KAAK,CAAC;IAKlB,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QAEpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,WAAW,EAAE,CAAC,EAAE,CAAC;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,QAAQ,CAAC;YACT,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,UAAU,IAAI,SAAS,EAAE;gBAClD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBAEtC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;aAE3C;QACL,CAAC,CAAC;IAEN,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;YAC/B,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC1E,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBAClD;yBACI;wBACD,KAAK,CAAC,QAAQ,CAAC,CAAC;qBACnB;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI,EAAE,UAAU;gBACb,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC1E,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;qBAClD;yBACI;wBACD,KAAK,CAAC,QAAQ,CAAC,CAAC;qBACnB;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,KAAK;QACZ,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7D,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE;YACnD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAEhB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;IACzC,CAAC;CAEJ;;YAjHQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAAE,8DAAc;;AAYlB,oBAAoB;IALhC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE/C,CAAC;mFAemC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc;GAd1H,oBAAoB,CAkGhC;AAlGgC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBiB;AAEG;AAEvB;AAC2B;AACmC;AAC5F,6EAA6E;IAQhE,oBAAoB,SAApB,oBAAoB;IAS7B,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB;QAA9E,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAC9F,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,uGAAwB;SAC3C;QACD,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aAEb;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,CAAC,MAAM,EAAE,EAAE;oBACrB,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACpC,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC;oBAC5G,OAAO,aAAa,CAAC;gBACzB,CAAC;gBACD,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,kBAAkB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBACnC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;iBAE3C;gBACD,MAAM,EAAE,oBAAoB;aAG/B;SAEJ,CAAC;IAEN,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEC,UAAU;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CAAC,CAAC;QAER,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED,WAAW,CAAC,MAAM;QACd,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,MAAM;QACjB,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAChC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;aAClD;iBACI;gBACD,KAAK,CAAC,SAAS,CAAC,CAAC;aACpB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CACJ;;YA1IQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;;AAUlB,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;mFAUmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc;GATzF,oBAAoB,CA6HhC;AA7HgC;;;;;;;;;;;;;ACfjC;AAAA;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF,oDAAoD;AACpD,sGAAsG;AAC/F,MAAM,OAAO,GAAG,0BAA0B,CAAC;AAElD;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;AClBnE;AAAe,ixBAAktB,WAAW,mCAAmC,aAAa,+KAA+K,cAAc,2mBAA2mB,E;;;;;;;;;;;;;;;;;;;;;ACAlhD;IAOrC,wBAAwB,SAAxB,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6FAAgD;;KAEjD,CAAC;;GACW,wBAAwB,CAOpC;AAPoC;;;;;;;;;;;;;ACPrC;AAAe,g6BAAi2B,E;;;;;;;;;;;;ACAh3B;AAAe,wsBAAyoB,KAAK,WAAW,+yBAA+yB,MAAM,SAAS,g0BAAg0B,KAAK,MAAM,q/BAAq/B,KAAK,SAAS,0zBAA0zB,MAAM,mBAAmB,ozBAAozB,KAAK,UAAU,02BAA02B,6BAA6B,s1EAAs1E,eAAe,qnCAAqnC,eAAe,qtBAAqtB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA79T;AACkB;AACf;AAEvB;AAC2B;AACmC;IAU/E,0BAA0B,SAA1B,0BAA0B;IAanC,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB,EAAS,WAAwB;QAA/G,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAHnI,aAAQ,GAAsB,EAAE,CAAC;QAI7B,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,uGAAwB;SAC3C;QAED,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,iBAAiB;gBAC7B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,gBAAgB;gBAC5B,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,oBAAoB;aAE/B;SAEJ,CAAC;IAEN,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEzC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAE7D,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE,CAAC;IAEzB,CAAC;IAED,WAAW,CAAC,MAAM;QACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;aAC1B;QAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,yBAAyB,CAAC,KAAK;QAE3B,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;aACzB;iBACI;gBAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAErC,CAAC;CACJ;;YApKQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;YAJtB,0DAAW;;AAeP,0BAA0B;IALtC,+DAAS,CAAC;QACP,QAAQ,EAAE,wBAAwB;QAClC,+FAAkD;;KAErD,CAAC;mFAcmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc,EAAsB,0DAAW;GAb1H,0BAA0B,CAsJtC;AAtJsC;;;;;;;;;;;;;;;;;;;;;AChBW;AACA;IAMrC,kBAAkB,SAAlB,kBAAkB;IAG7B,YAAY,IAAgB,EAAsB,OAAe;QAC/D,IAAI,CAAC,GAAG,CAAoB,OAAO,GAAG,iBAAiB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1E,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAC1B,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;CACF;;YAdQ,+DAAU;yCASc,oDAAM,SAAC,UAAU;;AAHrC,kBAAkB;IAJ9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;KAC3C,CAAC;mFAIkB,+DAAU;GAHjB,kBAAkB,CAQ9B;AAR8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmB;AACkB;AACf;AAEvB;AAC2B;IAc5C,4BAA4B,SAA5B,4BAA4B;IAsBrC,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB;QAA/G,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAnBnI,eAAU,GAAsB,EAAE,CAAC;QACnC,eAAU,GAAsB,EAAE,CAAC;QACnC,cAAS,GAAuB,EAAE,CAAC;QACnC,cAAS,GAAG,KAAK,CAAC;IAkBlB,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAExC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1C,CAAC,CAAC;QAIH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,SAAS,EAAE;gBAE/C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;aAC3C;QACL,CAAC,CAAC;QACF,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAEhC,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACvC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,QAAQ,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC7B,4CAA4C;YAC5C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;YACxD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACvE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;oBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;oBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;iBACvD;YAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAEpC;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QAEzB,CAAC,EACG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACvC,CAAC;CAiBJ;;YAnIQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAAE,8DAAc;;AAclB,4BAA4B;IALxC,+DAAS,CAAC;QACP,QAAQ,EAAE,2BAA2B;QACrC,kGAAqD;;KAExD,CAAC;mFAuBmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc;GAtB1H,4BAA4B,CAkHxC;AAlHwC;;;;;;;;;;;;;ACnBzC;AAAe,mOAAoK,gBAAgB,olBAAolB,qDAAqD,6lBAA6lB,oDAAoD,wnBAAwnB,+DAA+D,m9CAAm9C,QAAQ,0JAA0J,E;;;;;;;;;;;;ACAzwH;AAAe,izBAAkvB,iDAAiD,inKAAinK,qDAAqD,okBAAokB,qDAAqD,ilBAAilB,yDAAyD,uhBAAuhB,E;;;;;;;;;;;;ACAlvP;AAAe,2LAA4H,8JAA8J,cAAc,ojBAAojB,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzzB;AACkB;AACf;AAEvB;AAC2B;AAU5B;IAQhB,mBAAmB,SAAnB,mBAAmB;IAY5B,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe;QAAjF,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAHrG,gBAAW,GAAY,KAAK,CAAC;QAC7B,aAAQ,GAAsB,EAAE,CAAC;QAG7B,IAAI,CAAC,UAAU,GAAG;YAEd;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,gBAAgB;gBAC5B,KAAK,EAAE,kBAAkB;gBACzB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,iBAAiB;gBAC7B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,qBAAqB;gBACjC,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,mBAAmB;gBAC/B,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,eAAe;gBAC3B,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,eAAe;gBAC3B,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,cAAc;gBAC1B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,oBAAoB;aAC/B;SAEJ,CAAC;IAEN,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAGvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAE3D,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE,CAAC;IAEzB,CAAC;IAED,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;aAC1B;QAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,eAAe,CAAC,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAE9B,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,cAAc,EAAE;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;;YAEG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,MAAM;QACd,QAAQ,CAAC;QACT,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;IAE1C,CAAC;IAED,QAAQ;QAEJ,QAAQ,CAAC;QACT,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,gBAAgB,EAAE,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC;QAEjX,IAAI,IAAI,CAAC,OAAO,IAAI,cAAc,EAAE;YAEhC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACrE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;wBACtB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,aAAa,EAAE,gBAAgB,EAAE,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC;qBACvU;yBACI;wBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;qBAErB;gBAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI;gBACD,KAAK,CAAC,uBAAuB,CAAC;aACjC;SAEJ;aACI,IAAI,IAAI,CAAC,OAAO,IAAI,iBAAiB,EAAE;YAExC,2CAA2C;YAC3C,4BAA4B;YAC5B,wBAAwB;YACxB,uDAAuD;YACvD,OAAO;YAEP,mCAAmC;SACtC;aACI,IAAI,IAAI,CAAC,OAAO,IAAI,SAAS,EAAE;YAChC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACnD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;oBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;oBACtB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,aAAa,EAAE,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;iBAE9H;qBACI;oBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;iBAErB;YAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACpC;aACI,IAAI,IAAI,CAAC,OAAO,IAAI,eAAe,EAAE;YACtC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACtD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;oBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;oBAEtB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,aAAa,EAAE,gBAAgB,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;iBAG9H;qBACI;oBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;iBAErB;YAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACpC;aACI,IAAI,IAAI,CAAC,OAAO,IAAI,kBAAkB,EAAE;YACzC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC9C,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;oBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;oBACtB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;iBAE1E;qBACI;oBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;iBAErB;YAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACpC;IACL,CAAC;IAED,aAAa;QACT,oBAAoB;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAE7B,wBAAwB;QACxB,MAAM,QAAQ,GAAG,0CAAU,CAAC,QAAQ,EAAE,CAAC;QAEvC,yBAAyB;QACzB,MAAM,SAAS,GAAG,0CAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAEpD,oCAAoC;QACpC,0CAAU,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;QAE1D,0BAA0B;QAC1B,8CAAc,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IAC1C,CAAC;CAEJ;;YAjUQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;;AAkBF,mBAAmB;IAL/B,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE9C,CAAC;mFAamC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM;GAZ5F,mBAAmB,CA4S/B;AA5S+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBkB;AACkB;AACf;AAEvB;AAC2B;AAQzD,kCAAkC;IAOrB,mBAAmB,SAAnB,mBAAmB;IA4B5B,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB;QAA/G,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAzBnI,cAAS,GAAG,KAAK,CAAC;QAuBlB,YAAO,GAAY,KAAK,CAAC,CAAC,oBAAoB;IAEyF,CAAC;IAExI,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,OAAO,EAAE;YACvF,IAAI,CAAC,QAAQ,GAAG,wBAAwB,CAAC;SAC5C;aACI;YACD,IAAI,CAAC,QAAQ,GAAG,2BAA2B,CAAC;SAC/C;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEzC,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,QAAQ,EAAE,CAAC,EAAE,CAAC;SACjB,CAAC,CAAC;QAGH,IAAI,CAAC,aAAa,EAAE,CAAC;IAEzB,CAAC;IAED,QAAQ,CAAC,KAAK;QACV,QAAQ,CAAC;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,gBAAgB,EAAE;YACxC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;YAE1D,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC9B,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACnF,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,eAAe,CAAC,CAAC;wBACvB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;wBACrD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;wBACrD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;wBACzD,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;qBACjD;yBACI;wBAED,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;wBACrD,KAAK,CAAC,SAAS,CAAC,CAAC;qBACpB;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;aACI,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,wBAAwB,EAAE;YACrD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;YAE1D,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;SACJ;aACI,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,2BAA2B,EAAE;YACxD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,OAAO,EAAE,CAAC;YAE1D,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,wBAAwB,CAAC;gBACzC,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBACzC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAE3C;SACJ;aACI,EAAE,UAAU;YACb,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC9B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC1E,IAAI,mDAAM,CAAC,MAAM,CAAC,EAAE;wBAChB,KAAK,CAAC,mBAAmB,CAAC,CAAC;wBAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;qBACjD;yBACI;wBACD,KAAK,CAAC,uBAAuB,CAAC,CAAC;qBAClC;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAEpC;SACJ;IAEL,CAAC;IAED,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;gBAC1C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;aACjC;QAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,UAAU,CAAC,KAAK;QACZ,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7D,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE;YACnD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAEhB,CAAC;IAED,SAAS,CAAC,KAAK;QAEX,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE;YAEjC,qBAAqB;YACrB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;gBAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACrE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,IAAI,MAAM,EAAE;4BACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,IAAI,CAAC,QAAQ,GAAG,2BAA2B,CAAC;4BAC5C,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;4BACxC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;yBAE3C;6BACI;yBAEJ;qBACJ;yBACI;wBACD,KAAK,CAAC,eAAe,CAAC,CAAC;qBAC1B;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACxC,CAAC;CAEJ;;YA3NQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAAE,8DAAc;;AAelB,mBAAmB;IAL/B,+DAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE9C,CAAC;mFA6BmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc;GA5B1H,mBAAmB,CAyM/B;AAzM+B;;;;;;;;;;;;;ACpBhC;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;ACAhN;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;ACAxN;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;ACAtK;AAET;AAEY;IAOxC,wBAAwB,SAAxB,wBAAwB;IAEjC,YAAoB,WAAuB,EAAU,OAAe;QAAhD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAGzE,MAAM,CAAC,MAAM;QACT,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,OAAO,CAAC,KAAW;QACf,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,WAAW,CAAC,MAAM;QAEd,MAAM,MAAM,GAAG;YACX,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;SAEjC;QACD,iDAAiD;QACjD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAEhC,CAAC;CAGJ;;YAjCQ,gEAAU;YAFV,sDAAM;;AASF,wBAAwB;IALpC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,6FAA6F;KAE1G,CAAC;mFAGmC,gEAAU,EAAmB,sDAAM;GAF3D,wBAAwB,CA0BpC;AA1BoC;;;;;;;;;;;;;ACXrC;AAAe,mOAAoK,gBAAgB,4qBAA4qB,qDAAqD,0iBAA0iB,kDAAkD,25CAA25C,gDAAgD,yrBAAyrB,QAAQ,sJAAsJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACChvH;AAEG;AAEvB;AAC2B;AACyB;IASrE,yBAAyB,SAAzB,yBAAyB;IASlC,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB;QAA9E,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAE9F,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,6FAAwB;SAC3C;QAED,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aAEb;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,iBAAiB;gBAC7B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,kBAAkB;gBAC9B,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,mBAAmB;gBAC/B,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,cAAc;gBAC1B,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,mBAAmB;gBAC/B,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,oBAAoB;gBAChC,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,kBAAkB;gBAC9B,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,gBAAgB;gBACvB,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,kBAAkB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;iBAEtC;aACJ;SAEJ,CAAC;IACN,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEC,UAAU,CAAC,CAAC;QACR,wBAAwB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,WAAW,CAAC,MAAM;QACd,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC3D,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBAEjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBAED,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CAEJ;;YAnKQ,gEAAU;YAGV,sDAAM;YAAE,8DAAc;;AAUlB,yBAAyB;IALrC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,8FAAiD;;KAElD,CAAC;mFAUmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc;GATzF,yBAAyB,CAsJrC;AAtJqC;;;;;;;;;;;;;;;;;;;;AChBI;IAM7B,gBAAgB,SAAhB,gBAAgB;;QACpB,iBAAY,GAAG,CAAC,CAAC;IAK1B,CAAC;IAHQ,gBAAgB;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;CACF;AANY,gBAAgB;IAJ5B,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,oFAAuC;KACxC,CAAC;GACW,gBAAgB,CAM5B;AAN4B;;;;;;;;;;;;;ACN7B;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA1J;AACe;AAC3B;AACuB;IAOxC,gBAAgB,SAAhB,gBAAgB;IAIzB,YAAoB,OAAe,EAAU,WAAuB;QAAhD,YAAO,GAAP,OAAO,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAY;QAHpE,YAAO,GAAY,IAAI,CAAC;QAMxB,YAAO,GAAG,KAAK,CAAC;IADhB,CAAC;IAGD,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEH,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,MAAM;QACF,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IAED,IAAI,KAAK,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;IAEhC,IAAI,KAAK,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;IAE/B,MAAM;QACD,IAAI,OAAO,CAAC,0BAA0B,CAAC,EAAE;YACtC,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACtC;IACL,CAAC;IAED,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBAChB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;aAClC;QAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CACJ;;YAnDQ,sDAAM;YAEN,gEAAU;;AAON,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;mFAK+B,sDAAM,EAAuB,gEAAU;GAJ3D,gBAAgB,CA0C5B;AA1C4B;;;;;;;;;;;;;;;;;;;;ACVa;IAM7B,YAAY,SAAZ,YAAY;;QACvB,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;CAAA;AAFY,YAAY;IAJxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;KACpC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;ACNzB;AAAe,mOAAoK,gBAAgB,4rCAA4rC,+CAA+C,uNAAuN,WAAW,2CAA2C,aAAa,62BAA62B,mDAAmD,+MAA+M,gBAAgB,uCAAuC,kBAAkB,KAAK,4BAA4B,kgCAAkgC,mDAAmD,oNAAoN,YAAY,uCAAuC,cAAc,69BAA69B,iDAAiD,okBAAokB,gDAAgD,wmCAAwmC,gDAAgD,y3DAAy3D,QAAQ,sJAAsJ,E;;;;;;;;;;;;ACA5hS;AAAe,yMAA0I,gBAAgB,6GAA6G,E;;;;;;;;;;;;ACAtR;AAAe,4NAA6J,E;;;;;;;;;;;;ACA5K;AAAe,2LAA4H,mKAAmK,cAAc,qjBAAqjB,E;;;;;;;;;;;;ACAj3B;AAAe,ojBAAqf,iBAAiB,qBAAqB,yBAAyB,qBAAqB,yBAAyB,qBAAqB,oBAAoB,iDAAiD,E;;;;;;;;;;;;ACA3sB;AAAe,0VAA2R,SAAS,4JAA4J,mBAAmB,m8GAAm8G,mBAAmB,waAAwa,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9yI;AACkB;AAC3B;AACX;AACuB;IAOxC,uBAAuB,SAAvB,uBAAuB;IAGhC,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe;QAAjF,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAE1G,QAAQ;QACJ,oBAAoB;QAEpB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,8CAA8C;QAE9C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChG,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;gBAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAC5C;QAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CACJ;;YA9BQ,gEAAU;YAHV,0DAAW;YACX,sDAAM;;AASF,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4FAA+C;;KAEhD,CAAC;mFAImC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM;GAH5F,uBAAuB,CAuBnC;AAvBmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACkB;AACf;AAEvB;AAC2B;AAQf;IAO7B,oBAAoB,SAApB,oBAAoB;IAmB7B,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAU,QAAkB;QAA7G,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAhBjI,iBAAY,GAAsB,EAAE,CAAC;QACrC,qBAAgB,GAA2B,EAAE,CAAC;QAa9C,kBAAa,GAAQ,KAAK,CAAC;IAE0G,CAAC;IAEtI,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEzC,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,SAAS,EAAE,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,iBAAiB,CAAC,IAAI;QAClB,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC;gBACpD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,CAAC;aAC1H;iBACI;gBACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC5B;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,SAAS,GAAG,WAAW;QAE5B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;aAClC;iBACI;gBACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAEhC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,WAAW,CAAC,SAAS;QACjB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;gBACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;gBACjC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC;gBACvC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC7B;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CACJ;;YAtGQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAQN,wDAAQ;;AAOJ,oBAAoB;IALhC,+DAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE/C,CAAC;mFAoBmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAoB,wDAAQ;GAnBxH,oBAAoB,CAoFhC;AApFgC;;;;;;;;;;;;;ACrBjC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;ACAxN;AAAe,i8CAAk4C,WAAW,mCAAmC,aAAa,wlBAAwlB,eAAe,mCAAmC,oBAAoB,yUAAyU,eAAe,8JAA8J,SAAS,iCAAiC,YAAY,iCAAiC,cAAc,oKAAoK,QAAQ,oSAAoS,WAAW,uCAAuC,SAAS,8MAA8M,SAAS,yGAAyG,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt9G;AACjB;AACyB;AACS;AAC5B;AACA;AACA;AACkB;AACX;AACS;AACQ;AACS;AACd;AACT;AACkC;AACd;AACS;AACT;AACH;AACuB;AACT;AACtB;AACX;AACwB;AACF;AACA;AACkB;AACH;AACG;AACN;AACA;AACc;AACL;AACvD;AAC0B;AACU;AACP;AACS;AACJ;AACd;AACc;AACP;AACI;AACH;AACe;AAGtF,2DAA2D;IAwF9C,SAAS,SAAT,SAAS;CAAI;AAAb,SAAS;IAtFrB,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,2DAAY;YACZ,6EAAgB;YAChB,kEAAa;YACb,4EAAgB;YAChB,oFAAkB;YAClB,6FAAqB;YACrB,+EAAiB;YACjB,sEAAc;YACd,wGAAwB;YACxB,qFAAoB;YACpB,8FAAwB;YACxB,0FAAoB;YACpB,mGAAuB;YACvB,0FAAoB;YACpB,uFAAmB;YACnB,8GAA0B;YAC1B,qGAAuB;YACvB,+EAAiB;YACjB,0FAAoB;YACpB,0FAAoB;YACpB,4GAA0B;YAC1B,yGAAyB;YACzB,4GAA0B;YAC1B,sGAAwB;YACxB,sGAAwB;YACxB,oHAA4B;YAC5B,+GAA8B;YAC9B,kFAAkB;YAClB,6FAAqB;YACrB,0FAAoB;YACpB,4EAAgB;YAChB,0FAAoB;YACpB,uFAAmB;YACnB,oFAAkB;YAClB,mGAAuB;SAC1B;QACD,OAAO,EAAE;YACL,uEAAa,CAAC,oBAAoB,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;YACjE,qEAAgB;YAChB,0DAAW;YACX,6FAAuB;YACvB,qEAAe;YACf,kEAAmB;YACnB,YAAY;YACZ,4DAAY,CAAC,cAAc,CAAC,CAAC,wGAAwB,EAAE,qFAAoB,EAAE,8FAAwB,CAAC,CAAC;YACvG,4DAAY,CAAC,OAAO,CAAC;gBACjB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sEAAc,EAAE;gBACvC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;gBAC1C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;gBAClD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0FAAoB,EAAE;gBACxD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mGAAuB,EAAE;gBACxD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,8GAA0B,EAAE;gBAC9D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0FAAoB,EAAE;gBACxD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,qGAAuB,EAAE;gBAC3D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uFAAmB,EAAE;gBACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;gBAClD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0FAAoB,EAAE;gBACxD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0FAAoB,EAAE;gBACxD,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,4GAA0B,EAAE;gBACpE,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,sGAAwB,EAAE;gBAChE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,yGAAyB,EAAE;gBAClE,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,oHAA4B,EAAE;gBACxE,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,4GAA0B,EAAE;gBACpE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kFAAkB,EAAE;gBACpD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,6FAAqB,EAAE;gBAC1D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0FAAoB,EAAE;gBACxD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,4EAAgB,EAAE;gBACnD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,0FAAoB,EAAE;gBACxD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uFAAmB,EAAE;gBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oFAAkB,EAAE;gBACpD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,6FAAqB,EAAE;gBAC3D,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,mGAAuB,EAAE;aAGjE,CAAC;YACF,oFAA2B,CAAC,OAAO,EAAE;SAIxC;QACD,SAAS,EAAE,CAAC,yDAAQ,CAAC;QACrB,eAAe,EAAE,CAAC,wGAAwB,EAAE,qFAAoB,EAAE,8FAAwB,CAAC;QAC3F,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC5B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;ACvItB;AAAe,gFAAiB,gCAAgC,4BAA4B,KAAK,cAAc,sBAAsB,KAAK,mCAAmC,YAAY,wBAAwB,OAAO,KAAK,qBAAqB,qDAAqD,KAAK,mBAAmB,oCAAoC,kCAAkC,SAAS,yBAAyB,2BAA2B,yBAAyB,yBAAyB,kBAAkB,KAAK,6BAA6B,6CAA6C,KAAK,+CAA+C,+xCAA+xC,E;;;;;;;;;;;;ACAx6D;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;ACAhO;AAAe,gWAAiS,cAAc,ojBAAojB,E;;;;;;;;;;;;ACAl3B;AAAe,mOAAoK,gBAAgB,moBAAmoB,+CAA+C,4NAA4N,WAAW,2CAA2C,aAAa,6jCAA6jC,kDAAkD,0pDAA0pD,mDAAmD,63BAA63B,iDAAiD,qpCAAqpC,QAAQ,sJAAsJ,E;;;;;;;;;;;ACAjrM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;ACZA;AAAe,g2FAAiyF,E;;;;;;;;;;;;ACAhzF;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;;ACA5N;AAAe,2LAA4H,8JAA8J,cAAc,ojBAAojB,E;;;;;;;;;;;;ACA32B;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;ACAhO;AAAe,mGAAoC,E;;;;;;;;;;;;ACAnD;AAAe,0EAAW,uCAAuC,qBAAqB,uBAAuB,2BAA2B,+BAA+B,KAAK,iBAAiB,oCAAoC,sBAAsB,2BAA2B,KAAK,oBAAoB,sBAAsB,SAAS,oBAAoB,sBAAsB,4BAA4B,wBAAwB,SAAS,yBAAyB,uBAAuB,yBAAyB,KAAK,4BAA4B,yBAAyB,SAAS,2BAA2B,wBAAwB,SAAS,0BAA0B,uBAAuB,0BAA0B,KAAK,6BAA6B,wBAAwB,aAAa,4BAA4B,wBAAwB,SAAS,wBAAwB,oBAAoB,kCAAkC,KAAK,qDAAqD,oCAAoC,0BAA0B,SAAS,2BAA2B,wCAAwC,6BAA6B,SAAS,gBAAgB,uBAAuB,0BAA0B,KAAK,mBAAmB,sBAAsB,SAAS,mDAAmD,ukFAAukF,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh0H;AAEG;AAEvB;AACW;AACmD;IAO/E,uBAAuB,SAAvB,uBAAuB;IAQhC,YAAoB,WAAuB,EAAU,OAAe;QAAhD,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAChE,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,uGAAwB;SAC3C;QACD,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,MAAM;gBAClB,KAAK,EAAE,uBAAuB;gBAC9B,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,YAAY;gBACxB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,UAAU,EAAE,kBAAkB;gBAC9B,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,WAAW,EAAE,UAAU,MAAM;oBACzB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;wBAC5B,OAAO,QAAQ;qBAClB;yBAAM;wBACH,OAAO,WAAW;qBACrB;gBACL,CAAC;gBACD,MAAM,EAAE,oBAAoB;aAC/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,kBAAkB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBACnC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;iBAEzC;aAEJ;SAEJ,CAAC;IACN,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,UAAU,CAAC,CAAC;QACR,IAAI,CAAC,IAAI,SAAS;YACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;;YAE/C,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,WAAW,CAAC,MAAM;QACd,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBACD,SAAS,GAAG,mBAAmB,CAAC;gBAChC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,YAAY,CAAC,KAAK;QACd,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,KAAK,CAAC,+BAA+B,CAAC,CAAC;gBACvC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aAC/C;iBACI;gBACD,KAAK,CAAC,SAAS,CAAC,CAAC;aACpB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;CACJ;;YA9IQ,gEAAU;YAGV,sDAAM;;AAQF,uBAAuB;IALnC,+DAAS,CAAC;QACP,QAAQ,EAAE,qBAAqB;QAC/B,4FAA+C;;KAElD,CAAC;mFASmC,gEAAU,EAAmB,sDAAM;GAR3D,uBAAuB,CAmInC;AAnImC;;;;;;;;;;;;;ACbpC;AAAe,6GAA8C,mLAAmL,E;;;;;;;;;;;;ACAhP;AAAe,mOAAoK,gBAAgB,28BAA28B,iDAAiD,6/CAA6/C,iDAAiD,mmBAAmmB,mDAAmD,83CAA83C,gDAAgD,yoNAAyoN,gBAAgB,uCAAuC,kBAAkB,KAAK,4BAA4B,0+JAA0+J,WAAW,2CAA2C,aAAa,otBAAotB,gBAAgB,uCAAuC,kBAAkB,KAAK,4BAA4B,q5BAAq5B,YAAY,uCAAuC,cAAc,mnFAAmnF,QAAQ,sJAAsJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApkqB;AACkB;AACf;AAEvB;AAC2B;AAQf;IAQ7B,wBAAwB,SAAxB,wBAAwB;IAqBjC,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB,EAAS,QAAkB;QAA1I,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAlB9J,cAAS,GAAuB,EAAE,CAAC;QAcnC,cAAS,GAAG,KAAK,CAAC;IAIgJ,CAAC;IAEnK,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE7C,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,cAAc,EAAE,CAAC,EAAE,CAAC;SAIvB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,QAAQ,CAAC;YACT,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,SAAS,EAAE;gBAC/C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;aAEjC;QACL,CAAC,CAAC;IACN,CAAC;IAED,YAAY,CAAC,KAAK;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACzE,CAAC;IAGD,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YAClC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,eAAe,CAAC;YAClE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC5E,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;oBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;oBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;iBACxD;qBACI;oBACD,KAAK,CAAC,uBAAuB,CAAC,CAAC;iBAClC;YACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACpC;IACL,CAAC;IACD,QAAQ;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAED,oBAAoB;QAChB,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,sCAAsC;QAC1C,CAAC,EACG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,kBAAkB,CAAC,KAAK;QAEpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC3F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE;IAE/F,CAAC;IAED,UAAU,CAAC,KAAK;QACZ,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7D,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE;YACnD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAEhB,CAAC;CAEJ;;YAvIQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAAE,8DAAc;YAQtB,wDAAQ;;AAQJ,wBAAwB;IALpC,+DAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,6FAAgD;;KAEnD,CAAC;mFAsBmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc,EAAmB,wDAAQ;GArBrJ,wBAAwB,CAoHpC;AApHoC;;;;;;;;;;;;;ACrBrC;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;ACA7I;AAC1B;IAWpC,8BAA8B,4CAA9B,8BAA8B;IAGvC,QAAQ,CAAC,OAAwB;QAC7B,MAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC3E,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE;YAC9D,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE;SAC9B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;;uCATI,mDAAK;;AADG,8BAA8B;IAT1C,+DAAS,CAAC;QACP,QAAQ,EAAE,4BAA4B;QACtC,SAAS,EAAE,CAAC;gBACR,OAAO,EAAE,4DAAa;gBACtB,WAAW,EAAE,gCAA8B;gBAC3C,KAAK,EAAE,IAAI;aACd,CAAC;KACL,CAAC;GAEW,8BAA8B,CAU1C;AAV0C;;;;;;;;;;;;;ACZ3C;AAAe,+0BAAgxB,kDAAkD,80CAA80C,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7mE;AACkB;AACX;AAC3B;AAC8D;AAEvC;IAOxC,qBAAqB,SAArB,qBAAqB;IAiB9B,YAAoB,WAAuB,EAAU,OAAe,EAAS,KAAqB,EAAS,WAAwB;QAA/G,gBAAW,GAAX,WAAW,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QALnI,aAAQ,GAAsB,EAAE,CAAC;QACjC,YAAO,GAAY,KAAK,CAAC,CAAC,oBAAoB;QAK1C,IAAI,CAAC,mBAAmB,GAAG;YACvB,cAAc,EAAE,uGAAwB;SAC3C;QACD,IAAI,CAAC,UAAU,GAAG;YACd;gBACI,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aAEb;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAI/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAI/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAI/B;YACD;gBACI,UAAU,EAAE,WAAW;gBACvB,KAAK,EAAE,WAAW;gBAClB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,UAAU;gBACtB,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,aAAa;gBACzB,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI;gBACnB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,oBAAoB;aAE/B;YACD;gBACI,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,oBAAoB;aAG/B;YACD;gBACI,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,gBAAgB;gBAC9B,kBAAkB,EAAE;oBAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBACnC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;iBAE9C;aAEJ;SAEJ,CAAC;IACN,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,MAAM,EAAE,CAAC,EAAE,EAAE;YACb,QAAQ,EAAE,CAAC,EAAE,EAAE;SAGlB,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACL,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,UAAU,CAAC,CAAC;QACR,wBAAwB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7E,CAAC;IAGD,WAAW,CAAC,MAAM;QACd,QAAQ,CAAC;QACT,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,SAAS,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,SAAS,GAAG,MAAM,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;iBACI;gBAED,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aACpC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,iBAAiB,CAAC,IAAI;QAClB,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACnD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;qBACzB;yBACI;wBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;qBAErB;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI;gBACD,KAAK,CAAC,SAAS,CAAC,CAAC;aACpB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,OAAO,CAAC,GAAG;QACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YACpE,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;aACI;YACD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;YACnE,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SAExB;IAEL,CAAC;IAED,YAAY;QACR,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACnD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;aACzB;iBACI;gBAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,iBAAiB,CAAC,KAAK;QAInB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7D,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;aACzB;iBACI;gBAED,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;aACrB;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC;aAEhE;QAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,SAAS;QACL,IAAI,IAAI,CAAC,MAAM;YACX,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;YAEpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YACpE,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;aACI;YACD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;YACnE,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACxB;IACL,CAAC;CAEJ;;YA1RQ,gEAAU;YAJM,sDAAM;YAAtB,8DAAc;YADd,0DAAW;;AAYP,qBAAqB;IALjC,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,0FAA6C;;KAEhD,CAAC;mFAkBmC,gEAAU,EAAmB,sDAAM,EAAgB,8DAAc,EAAsB,0DAAW;GAjB1H,qBAAqB,CAmRjC;AAnRiC;;;;;;;;;;;;;ACblC;AAAe,gSAAiO,s1BAAs1B,WAAW,mCAAmC,aAAa,yKAAyK,gLAAgL,cAAc,2mBAA2mB,E;;;;;;;;;;;;ACAnlE;AAAe,6GAA8C,+IAA+I,E;;;;;;;;;;;;ACA5M;AAAe,oNAAqJ,cAAc,ihBAAihB,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjpB;AACkB;AACX;AAC3B;AAEuB;IAOxC,kBAAkB,SAAlB,kBAAkB;IAoB3B,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB;QAA/G,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAjBnI,gBAAW,GAAsB,EAAE,CAAC;QAEpC,cAAS,GAAG,KAAK,CAAC;IAeqH,CAAC;IAExI,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;QAEtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAExC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,cAAc,EAAE,CAAC,EAAE,EAAE;YACrB,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE;YACf,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,OAAO,EAAE,CAAC,EAAE,EAAE;SAEjB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,SAAS,EAAE;gBAC/C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBAC5C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAE9B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC;aAGzC;QACL,CAAC,CAAC;QAGF,IAAI,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAEC,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACvC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC7B,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;gBAEvB,QAAQ,CAAC;gBACT,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACxE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;qBAChD;gBAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI,EAAE,UAAU;gBACb,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAC1E,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;qBAChD;gBAEL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,aAAa;QACT,QAAQ,CAAC;QACT,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChD,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;gBACjB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC;gBAChE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAErC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,gBAAgB,CAAC,KAAK;QAElB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACtF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;IAEtF,CAAC;CAEJ;;YA9HQ,gEAAU;YAJV,0DAAW;YACK,sDAAM;YAAtB,8DAAc;;AAUV,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;;KAE3C,CAAC;mFAqBmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc;GApB1H,kBAAkB,CAuH9B;AAvH8B;;;;;;;;;;;;;ACZ/B;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;;ACAxM;AAAe,0lCAA2hC,qDAAqD,8pBAA8pB,wDAAwD,4pBAA4pB,wDAAwD,glCAAglC,qDAAqD,gfAAgf,E;;;;;;;;;;;;;;;;;;;;;ACA5kI;IAOrC,uBAAuB,SAAvB,uBAAuB;IAElC,gBAAgB,CAAC;IAEf,QAAQ;IAEV,CAAC;CAEF;;AARY,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6FAAgD;;KAEjD,CAAC;;GACW,uBAAuB,CAQnC;AARmC;;;;;;;;;;;;;ACPpC;AAAe,qPAAsL,cAAc,kgBAAkgB,E;;;;;;;;;;;;ACArtB;AAAe,4OAA6K,cAAc,ybAAyb,E;;;;;;;;;;;;ACAnoB;AAAe,mxBAAotB,iDAAiD,+9DAA+9D,qDAAqD,6tBAA6tB,E;;;;;;;;;;;;;;;;;;;;;ACA19G;AACuC;AACjC;AAEH;AAGY;IAO7C,UAAU,SAAV,UAAU;IAEnB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAED,iBAAiB;QAEb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,iCAAiC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC7F,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,oBAAoB,CAAC,YAAY;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,mDAAmD,GAAG,YAAY,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACnI,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAGD,KAAK,CAAC,QAAQ,EAAE,QAAQ;QACpB,MAAM,OAAO,GAAG;YACZ,cAAc,EAAE,kBAAkB,EAAE,6BAA6B,EAAG,GAAG,EAAE,8BAA8B,EAAG,wCAAwC;SAAG,CAAC;QAC1J,MAAM,QAAQ,GAAG,WAAW,GAAG,QAAQ,GAAG,YAAY,GAAG,QAAQ,GAAG,sBAAsB,CAAC;QAE3F,8GAA8G;QAC9G,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,OAAO,EAAE,QAAQ,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAE9G,CAAC;IAED,cAAc,CAAC,KAAK;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,kCAAkC,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAG5H,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,oBAAoB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACjG,CAAC;IAGD,cAAc,CAAC,KAAK;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAChI,CAAC;IAED,UAAU;QACN,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;YACvC,OAAO,KAAK,CAAC;SAChB;;YAEG,OAAO,IAAI,CAAC;IACpB,CAAC;IAED,SAAS,CAAC,SAAS;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,gCAAgC,GAAG,SAAS,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC7G,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;QACJ,OAAO;YACH,cAAc,EAAE,kBAAkB,EAAE,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE;SACtG,CAAC;IACN,CAAC;IAED,4BAA4B;IAE5B,YAAY,CAAC,KAAwB;QACjC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACnC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC5D;aAAM;YACH,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACT,wBAAwB,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG;gBAC7C,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;SAChD;QACD,wDAAwD;QACxD,OAAO,uDAAU,CACb,iDAAiD,CAAC,CAAC;IAC3D,CAAC;IAED,wDAAwD;IAExD,aAAa;QAET,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,0BAA0B,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACtF,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAGD,oBAAoB,CAAC,OAAO;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,qCAAqC,GAAG,OAAO,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAChH,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,IAAI;QAEX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,yBAAyB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;aAClH,IAAI,CACD,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAE7B,CAAC;IAED,YAAY,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,yBAAyB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC5H,CAAC;IAED,YAAY,CAAC,MAAM;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,iCAAiC,GAAG,MAAM,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC3G,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,4DAA4D;IAE5D,oBAAoB;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,qCAAqC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACjG,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,OAAO,CAAC,KAAK;QAET,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,qCAAqC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;aAC/H,IAAI,CACD,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAE7B,CAAC;IAED,UAAU,CAAC,KAAK;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,qCAAqC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACzI,CAAC;IAED,UAAU,CAAC,OAAO;QAEd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,6CAA6C,GAAG,OAAO,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACxH,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,iBAAiB;QAEb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,qCAAqC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACjG,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,gBAAgB;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,iCAAiC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC7F,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,oBAAoB;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,iCAAiC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC7F,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,8DAA8D;IAE9D,aAAa;QAET,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,8BAA8B,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC1F,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,aAAa,CAAC,SAAS;QAEnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,8BAA8B,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;aAC5H,IAAI,CACD,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAE7B,CAAC;IAED,aAAa,CAAC,SAAS;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,8BAA8B,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACtI,CAAC;IAED,aAAa,CAAC,UAAU;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,yCAAyC,GAAG,UAAU,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACvH,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAGD,iEAAiE;IAEjE,eAAe;QAEX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,4BAA4B,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACxF,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAGD,YAAY,CAAC,IAAI;QAEb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,yCAAyC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;aAClI,IAAI,CACD,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAE7B,CAAC;IAED,eAAe,CAAC,IAAI;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,yCAAyC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC5I,CAAC;IAED,eAAe,CAAC,UAAU;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,gDAAgD,GAAG,UAAU,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC9H,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,4DAA4D;IAE5D,mEAAmE;IAEnE,oBAAoB;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,8BAA8B,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC1F,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAGD,uBAAuB,CAAC,QAAQ;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,iCAAiC,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;aAC9H,IAAI,CACD,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAE7B,CAAC;IAED,wEAAwE;IAExE,mCAAmC;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,gDAAgD,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC5G,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,wBAAwB;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,yCAAyC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACrG,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,uBAAuB,CAAC,QAAQ;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,8CAA8C,GAAG,QAAQ,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC1H,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,cAAc,CAAC,KAAK;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,kCAAkC,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC3G,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,UAAU,CAAC,SAAS;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,kCAAkC,GAAG,SAAS,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC/G,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,qBAAqB,CAAC,MAAM;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,4CAA4C,GAAG,MAAM,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACtH,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,mBAAmB;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,mCAAmC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC/F,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW;QAEP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,2BAA2B,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACvF,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,gBAAgB;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,gCAAgC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC5F,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,gBAAgB;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,6BAA6B,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACzF,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,qBAAqB,CAAC,KAAK;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,yCAAyC,GAAG,KAAK,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAClH,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAChB,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,aAAa,CAAC,IAAI;QAEd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,0BAA0B,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;aACnH,IAAI,CACD,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAE7B,CAAC;IAED,eAAe,CAAC,IAAI;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,iEAAO,GAAG,4BAA4B,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC/H,CAAC;IAED,sBAAsB,CAAC,MAAM;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iEAAO,GAAG,2CAA2C,GAAG,MAAM,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACrH,IAAI,CACA,0DAAG,CACC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;CACJ;;YArXQ,+DAAU;;AAaN,UAAU;IAHtB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;mFAG4B,+DAAU;GAF3B,UAAU,CAwWtB;AAxWsB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb2B;AACkB;AACf;AAEvB;AACW;IAO5B,cAAc,SAAd,cAAc;IAGvB,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe;QAAjF,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC,CAAC,kCAAkC;IAE7I,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzF,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,EAAE;YAC5G,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAC9C,OAAO;SACV;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YAC3G,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAC1B,OAAO;SACV;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACtH,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;gBAC9B,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;gBACnD,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBAEzC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAC3C;QACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,UAAU,CAAC,KAAK;QACZ,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7D,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE;YACnD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,CAAC;CAEJ;;YAvDQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;;AAOF,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kFAAqC;;KAEtC,CAAC;mFAImC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM;GAH5F,cAAc,CA6C1B;AA7C0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbuB;AACkB;AACf;AAEvB;AAC2B;IAa5C,0BAA0B,SAA1B,0BAA0B;IAiBnC,YAAoB,WAAuB,EAAS,WAAwB,EAAU,OAAe,EAAS,KAAqB;QAA/G,gBAAW,GAAX,WAAW,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAdnI,cAAS,GAAG,KAAK,CAAC;IAcqH,CAAC;IAExI,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC;QAG5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,qBAAqB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,WAAW,EAAE,CAAC,EAAE,CAAC;SAEpB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,SAAS,EAAE;gBAEnD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;gBAC1D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC9B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;gBAEtC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;aAEvC;QACL,CAAC,CAAC;IACN,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC3B,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;gBACvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBAChE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC/C;yBACI;wBACD,KAAK,CAAC,uBAAuB,CAAC,CAAC;qBAClC;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;iBACI,EAAE,UAAU;gBACb,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;oBACnE,IAAI,CAAC,mDAAM,CAAC,MAAM,CAAC,EAAE;wBACjB,KAAK,CAAC,MAAM,CAAC,CAAC;wBACd,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC/C;yBACI;wBACD,KAAK,CAAC,uBAAuB,CAAC,CAAC;qBAClC;gBACL,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACpC;SACJ;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,UAAU,CAAC,KAAK;QACZ,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7D,IAAI,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,QAAQ,GAAG,EAAE,CAAC,EAAE;YACnD,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IAEhB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACrC,CAAC;CAEJ;;YAxHQ,gEAAU;YADV,0DAAW;YAIX,sDAAM;YAAE,8DAAc;;AAalB,0BAA0B;IALtC,+DAAS,CAAC;QACP,QAAQ,EAAE,yBAAyB;QACnC,gGAAmD;;KAEtD,CAAC;mFAkBmC,gEAAU,EAAsB,0DAAW,EAAmB,sDAAM,EAAgB,8DAAc;GAjB1H,0BAA0B,CAwGtC;AAxGsC;;;;;;;;;;;;;AClBvC;AAAe,yRAA0N,cAAc,kgBAAkgB,E;;;;;;;;;;;;ACAzvB;AAAe,6GAA8C,uJAAuJ,E;;;;;;;;;;;;ACApN;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAElD,SAAS,UAAU;IACxB,OAAO,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACvD,CAAC;AAED,MAAM,SAAS,GAAG;IAChB,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE;CAC1D,CAAC;AAEF,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,yDAAS,CAAC;KACzD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACnBgB;AACkB;AACf;AACI;IAQ5C,gBAAgB,SAAhB,gBAAgB;IAUzB,YAAmB,WAAwB,EAAU,OAAe,EAAU,WAAuB;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAY;QAPrG,cAAS,GAAG,KAAK,CAAC;IASlB,CAAC;IAED,QAAQ;QAEJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,CAAC,eAAe;YACrB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAExC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAEzC,CAAC,CAAC;IAEP,CAAC;IAED,QAAQ;QACJ,QAAQ,CAAC;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACpD,KAAK,CAAC,eAAe,CAAC,CAAC;YAE3B,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACpC;IAGL,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACvC,CAAC;CACJ;;YAzDQ,0DAAW;YAEX,sDAAM;YADN,gEAAU;;AASN,gBAAgB;IAL5B,+DAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,oFAAuC;;KAE1C,CAAC;mFAWkC,0DAAW,EAAmB,sDAAM,EAAuB,gEAAU;GAV5F,gBAAgB,CA+C5B;AA/C4B;;;;;;;;;;;;;ACX7B;AAAe,6GAA8C,+JAA+J,E","file":"main-es2017.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnRendererComponent } from '../Renders/btn-renderer.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-renewal-membership',\r\n  templateUrl: './renewal-membership.component.html',\r\n  styleUrls: ['./renewal-membership.component.css']\r\n})\r\nexport class RenewalMembershipComponent implements OnInit {\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnRendererComponent,\r\n        }\r\n\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Mobile No',\r\n                field: 'MbrMob',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership Plan',\r\n                field: 'MbrShipName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Batch',\r\n                field: 'MbrBatch',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership Type',\r\n                field: 'MembershipType',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Last Payment',\r\n                field: 'PaidAmt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Last Payment Date',\r\n                field: 'PaidDt',\r\n                filter: 'agTextColumnFilter'\r\n                 \r\n            },\r\n            {\r\n                headerName: 'Expire Date',\r\n                field: 'MbrshipEndDt',\r\n                filter: 'agTextColumnFilter'\r\n                 \r\n            },\r\n            {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    label: 'Click'\r\n                } \r\n            }, \r\n        ];\r\n     }\r\n\r\n    ngOnInit() {\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n  }\r\n     \r\n    \r\n    onBtnClick(e) { \r\n        return this._router.navigate([\"/RenewalPayments\"], { queryParams: e.rowData }); \r\n    }\r\n\r\n    onGridReady(params) {\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue;\r\n        this.gymServices.GetMembershipGoingtoExxpiredMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n                \r\n                dataValue = \"\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n     \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnNoaXAtaGlzdG9yeS9tZW1iZXJzaGlwLWhpc3RvcnkuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1leHBlbnNlcy9hZGQtZXhwZW5zZXMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Reports</h4>\\r\\n\\r\\n        <form [formGroup]=\\\"AllReportsForm\\\" action=\\\"#\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n            <div>\\r\\n                <hr />\\r\\n                <div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"rdEyr\\\" value=\\\"YearlyReport\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\r\\n                            <label for=\\\"rdEyr\\\">Member Yearly Report</label><br>\\r\\n                        </div>\\r\\n                        <!--<div class=\\\"form-group col-md-4\\\">\\r\\n            <input type=\\\"radio\\\" id=\\\"rdFR\\\" value=\\\"FinantialReport\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\r\\n            <label for=\\\"rdFR\\\">Finantial Report</label><br>\\r\\n        </div>-->\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"rdSummury\\\" value=\\\"Summury\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\r\\n                            <label for=\\\"rdSummury\\\">Summury</label><br>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"rdMr\\\" value=\\\"MbrShipReport\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\r\\n                            <label for=\\\"rdMr\\\">Membership Report</label><br>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <input type=\\\"radio\\\" id=\\\"edPt\\\" value=\\\"PersonalTraining\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\r\\n                            <label for=\\\"edPt\\\">Personal Training</label><br>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-row\\\" *ngIf=\\\"optionValue\\\">\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <label>Select Member</label>\\r\\n                            <select formControlName=\\\"MemberId\\\" [(ngModel)]=\\\"MemberId\\\" class=\\\"form-control\\\"  >\\r\\n                                <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                                <option *ngFor=\\\"let mbr of _Members\\\" value={{mbr.MbrId}}>\\r\\n                                    {{mbr.MbrName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Submit\\\">\\r\\n            </div>\\r\\n            <div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <h3> Report</h3><br>\\r\\n                    <img (click)=\\\"exportToExcel()\\\" src=\\\"./assets/excel-48.png\\\"   class = \\\"rptPicture\\\"/>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>\\r\\n                <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                                 class=\\\"ag-theme-alpine\\\"\\r\\n                                 [columnDefs]=\\\"columnDefs\\\"\\r\\n                                 [animateRows]=\\\"true\\\"\\r\\n                                 (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                                 [rowData]=\\\"rowData\\\"\\r\\n                                 pagination=\\\"true\\\"\\r\\n                                 paginationPageSize=\\\"20\\\">\\r\\n                </ag-grid-angular>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular'\r\nimport { Router } from '@angular/router';\r\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n    selector: 'app-btn-renderer',\r\n    template: '<img (click)=\"OnEditClick($event)\" src=\"./assets/renew.png\" alt=\"\" class = \"picture1\" />',\r\n    /*styleUrls: ['./btn-cell-renderer.component.css']*/\r\n})\r\nexport class BtnRendererComponent implements ICellRendererAngularComp {\r\n    params;\r\n    constructor(private gymServices: GymService, private _router: Router) { }\r\n    _MbrPlans: any;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n    }\r\n\r\n    refresh(param?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    OnEditClick($event) {\r\n\r\n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data,\r\n            // ...something\r\n        }\r\n        //return this._router.navigate([\"/AddEmployee\"]);\r\n        this.params.onClick(params);\r\n\r\n    }\r\n\r\n     \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-gym-branches',\r\n  templateUrl: './gym-branches.component.html',\r\n  styleUrls: ['./gym-branches.component.css']\r\n})\r\nexport class GymBranchesComponent implements OnInit {\r\n\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    constructor(private gymServices: GymService, private _router: Router) {\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Name',\r\n                field: 'test2',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Address',\r\n                field: 'test3',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Contact No',\r\n                field: 'test3',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n             {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParam: {\r\n\r\n                }\r\n\r\n            },\r\n\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n  }\r\n\r\n    AddEmployee() {\r\n        return this._router.navigate([\"/AddBranches\"]);\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n\r\n        let dataValue;\r\n        dataValue = [{ \"test2\": \"Branch 1\", \"test3\": \"002\" },\r\n                    { \"test2\": \"Branch 2\", \"test3\": \"004\" },\r\n                    { \"test2\": \"Branch 3\", \"test3\": \"006\" },\r\n                    { \"test2\": \"Branch 4\", \"test3\": \"008\" }]\r\n\r\n        //this.gymServices.GetAllEmployee().subscribe(result => {\r\n        //    if (!isNull(result.data)) {\r\n        //        dataValue = result.data;\r\n        //    }\r\n        //    else {\r\n        //        alert(\"Incorrect Creiditials\");\r\n        //    }\r\n        //}, error => alert(error.message))\r\n\r\n        params.api.setRowData(dataValue);\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbWFpbmluZy1iYWxhbmNlL3JlbWFpbmluZy1iYWxhbmNlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"label{\\r\\n    margin-left:10px;\\r\\n    font-size:medium;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxsLXJlcG9ydHMvYWxsLXJlcG9ydHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hbGwtcmVwb3J0cy9hbGwtcmVwb3J0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWx7XHJcbiAgICBtYXJnaW4tbGVmdDoxMHB4O1xyXG4gICAgZm9udC1zaXplOm1lZGl1bTtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \r\nimport { GymService } from '../services/gym.service';\r\nimport { Router, ActivatedRoute } from '@angular/router'; \r\nimport { isNull } from 'util';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport {  IDropdownSettings } from 'ng-multiselect-dropdown';\r\n\r\n@Component({\r\n    selector: 'app-send-message',\r\n    templateUrl: './send-message.component.html',\r\n    styleUrls: ['./send-message.component.css']\r\n})\r\nexport class SendMessageComponent implements OnInit {\r\n\r\n    //dropdownList = [];\r\n    selectedItems = []; \r\n    dropdownSettings: IDropdownSettings;\r\n\r\n    SendMsgForm: FormGroup;\r\n    submitted = false;\r\n    _Members: GymMembersClass[] = [];\r\n    IsSessionEnable: any;\r\n   \r\n    MbrType: any;\r\n    MbrMessage: any;\r\n    constructor(public formBuilder: FormBuilder, private _router: Router, private gymServices: GymService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.SendMsgForm = this.formBuilder.group({\r\n\r\n           \r\n            MbrType: ['', Validators.required],\r\n            MbrMessage: ['', Validators.required],\r\n           \r\n        });\r\n\r\n        this.GetAllMembers();\r\n         \r\n        this.dropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'MbrId',\r\n            textField: 'MbrName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        }; \r\n    }\r\n     \r\n    onSubmit() {\r\n        debugger;\r\n        this.submitted = true;\r\n        if (!this.SendMsgForm.invalid) {\r\n            this.gymServices.SendPromotionMessage(this.selectedItems).subscribe(result => {\r\n                alert('Message Send');\r\n\r\n            }, error => alert(error.message))\r\n        }\r\n    }\r\n\r\n    onItemSelect(item: any) {\r\n        this.selectedItems.push(item.MbrId);\r\n    }\r\n    onSelectAll(items: any) {\r\n         this.selectedItems.push(items.map(x => x.MbrId));\r\n    }\r\n\r\n    GetAllMembers() {\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this._Members = result.filter(x => x.MbrType == \"GymMember\");\r\n                  \r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    get fval() {\r\n        return this.SendMsgForm.controls;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d5bS1wcm9maWxlL2d5bS1wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWluZXJzLWhpc3RvcnkvdHJhaW5lcnMtaGlzdG9yeS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-ptdetails',\r\n  templateUrl: './ptdetails.component.html',\r\n  styleUrls: ['./ptdetails.component.css']\r\n})\r\nexport class PTDetailsComponent implements OnInit {\r\n\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    private rowData;\r\n\r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n\r\n            },\r\n            {\r\n                headerName: 'MbrUserId',\r\n                field: 'MbrUserId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'MbrShipId',\r\n                field: 'MbrShipId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'TrainerId',\r\n                field: 'TrainerId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            }, \r\n            {\r\n                headerName: 'Mobile No',\r\n                field: 'MbrMob',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },  \r\n            {\r\n                headerName: 'Member Ship',\r\n                field: 'MbrType',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid Amount',\r\n                field: 'PaidAmt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid By',\r\n                field: 'PaidBy',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            }, \r\n            {\r\n                headerName: 'Paid Dt',\r\n                field: 'PaidDt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Start Dt',\r\n                field: 'MbrshipStartDt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'End sDt',\r\n                field: 'MbrshipEndDt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    OnDelete: this.OnDeleteMember.bind(this),\r\n\r\n                }\r\n\r\n            },\r\n\r\n        ];     }\r\n\r\n    ngOnInit() {\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n  }\r\n\r\n    AddPT() {\r\n        return this._router.navigate([\"/AddPTDetails\"]);\r\n    }\r\n\r\n    onBtnClick(e) {\r\n        /*alert(e.rowData);   */\r\n        return this._router.navigate([\"/AddPTDetails\"], { queryParams: e.rowData });\r\n    }\r\n\r\n    onGridReady(params) {\r\n        debugger;\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue;\r\n        this.gymServices.GetAllPTMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n\r\n                dataValue = \"\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    OnDeleteMember(data) {\r\n        this.gymServices.DeletePTMembers(data.MbrUserId).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                alert('Member Deleted Successfully !');\r\n                this.gymServices.GetAllPTMembers().subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        this.rowData = result;\r\n                    }\r\n                    else {\r\n\r\n                        this.rowData = \"\";\r\n\r\n                    }\r\n                }, error => alert(error.message)) \r\n            }\r\n            else {\r\n                alert(\"Error !\");\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnRzL3BheW1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular'\r\nimport { Router } from '@angular/router';\r\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n  selector: 'app-btn-cell-renderer',\r\n    template: '<img (click)=\"OnEditClick($event)\" src=\"./assets/Edit_img.png\" alt=\"\" class = \"picture1\" /> <img (click)=\"OnDelete($event)\" src=\"./assets/Delete_img.png\" alt=\"\" class = \"picture1\" />',\r\n  /*styleUrls: ['./btn-cell-renderer.component.css']*/\r\n})\r\nexport class BtnCellRendererComponent implements ICellRendererAngularComp {\r\n    params;\r\n    constructor(private gymServices: GymService, private _router: Router) { }\r\n    _MbrPlans: any;\r\n\r\n    agInit(params): void {\r\n        this.params = params; \r\n    }\r\n     \r\n    refresh(param?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    OnEditClick($event) {\r\n         \r\n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data, \r\n            // ...something\r\n        }\r\n        //return this._router.navigate([\"/AddEmployee\"]);\r\n        this.params.onClick(params);\r\n        \r\n    }\r\n\r\n    OnDelete($event) {\r\n\r\n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data,\r\n            // ...something\r\n        }\r\n\r\n        if (window.confirm(\"Are you sure to delete ? \")) {\r\n            this.params.OnDelete(this.params.node.data);\r\n        }\r\n\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent implements OnInit {\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    private rowData;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n  \r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) { /*, private modalService: NgbModal */\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n                \r\n            },\r\n            {\r\n                headerName: 'Designaion',\r\n                field: 'MbrType',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Mobile No',\r\n                field: 'MbrMob',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'DOB',\r\n                field: 'MbrDOB',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            }, \r\n            {\r\n                headerName: 'Email',\r\n                field: 'MbrEmail',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Address',\r\n                field: 'MbrAddr',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            }, \r\n            {\r\n                headerName: 'Member Ship',\r\n                field: 'MbrShipName',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            }, \r\n            {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer', \r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    OnDelete: this.OnDeleteMember.bind(this),\r\n\r\n                }\r\n\r\n            },\r\n             \r\n        ];    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n  }\r\n    AddEmployee() {\r\n        return this._router.navigate([\"/AddEmployee\"]);\r\n    }\r\n\r\n    onBtnClick(e) {\r\n        /*alert(e.rowData);   */\r\n        return this._router.navigate([\"/AddEmployee\"], { queryParams: e.rowData });\r\n    }\r\n\r\n    onGridReady(params) {\r\n        debugger;\r\n        params.api.sizeColumnsToFit(); \r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n         let dataValue; \r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n                 \r\n                dataValue = \"\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))      \r\n    }\r\n\r\n    OnDeleteMember(data) {\r\n        this.gymServices.DeleteMember(data.MbrId).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                alert('Member Deleted Successfully !');\r\n\r\n                this.gymServices.GetAllMembers().subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        this.rowData = result; \r\n                    }\r\n                    else {\r\n\r\n                        this.rowData = \"\";\r\n                        \r\n                    }\r\n                }, error => alert(error.message))\r\n\r\n                 \r\n            }\r\n            else {\r\n                alert(\"Error !\");\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n     \r\n}\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { DatePipe } from '@angular/common'\r\n\r\n@Component({\r\n  selector: 'app-add-ptdetails',\r\n  templateUrl: './add-ptdetails.component.html',\r\n  styleUrls: ['./add-ptdetails.component.css']\r\n})\r\nexport class AddPTDetailsComponent implements OnInit {\r\n\r\n    AddPTForm: FormGroup;\r\n    _PTMembers: GymMembersClass[] = [];\r\n    _PTTrainer: GymMembersClass[] = [];\r\n    _MbrPlans: MbrShipPlanClass[] = [];\r\n    submitted = false;\r\n\r\n    MbrId: string;\r\n    MbrUserId: string;\r\n    MbrShipId: string;\r\n    TrainerId: string; \r\n    MbrPtDays: string;\r\n    MbrPTChargesofTrainer: string;\r\n    PaidAmt: string;\r\n    PaidBy: string;\r\n    PaidDt: string;\r\n    MbrshipStartDt: string;\r\n    MbrshipEndDt: string;\r\n    Discription: string;\r\n    PTSessions: string;\r\n    MembershipType: string = 'PT';\r\n    date: Date;\r\n    btnVal: any;\r\n    modelheaderval: any;\r\n    IsSessionEnable: any;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute, public datepipe: DatePipe) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n\r\n        this.btnVal = 'Save';\r\n        this.modelheaderval = 'Add PT Member';\r\n\r\n        this.AddPTForm = this.formBuilder.group({\r\n              \r\n            MbrId: ['', Validators.required],\r\n            MbrUserId: [''],\r\n            MbrShipId: ['', Validators.required],\r\n            TrainerId: ['', Validators.required],\r\n            MbrPtDays: [''],  \r\n            PaidAmt: ['', Validators.required],\r\n            PaidBy: ['', Validators.required],\r\n            PaidDt: ['', Validators.required],\r\n            MbrshipStartDt: [''],\r\n            MbrshipEndDt: [''],\r\n            Discription: [''],\r\n            PTSessions: [''],\r\n            MbrPTChargesofTrainer: [''],\r\n            MembershipType: [''],\r\n            \r\n        });\r\n\r\n        \r\n\r\n        this.route.queryParams.subscribe((params) => {\r\n            if (params != null && params.MbrName != undefined) {\r\n\r\n                //this.GetAllMemberShipPlan();\r\n                //this.GetAllMembers();\r\n\r\n                this.MbrId = params.MbrId;\r\n                this.MbrUserId = params.MbrUserId;\r\n                this.MbrShipId = params.MbrShipId;\r\n                this.TrainerId = params.TrainerId; \r\n                //this.MbrPtDays = params.MbrPtDays;  \r\n                //this.showPersonalTrainingPlans(params.MbrShipId)\r\n                this.PaidAmt = params.PaidAmt;\r\n                this.PaidBy = params.PaidBy;\r\n                this.PaidDt = params.PaidDt;\r\n                this.MbrshipStartDt = params.MbrshipStartDt;\r\n                this.MbrshipEndDt = params.MbrshipEndDt;\r\n                this.Discription = params.Discription;\r\n                this.PTSessions = params.PTSessions;\r\n                this.MembershipType = 'PT';\r\n                \r\n                //this.MbrPTChargesofTrainer = params.MbrPTChargesofTrainer;\r\n                //this.showPTTrainerCharges(params.MbrId)\r\n\r\n                this.btnVal = 'update';\r\n                this.modelheaderval = 'Update Member';\r\n\r\n\r\n\r\n            }\r\n        })\r\n        this.GetAllMemberShipPlan();\r\n        this.GetAllMembers();\r\n       \r\n\r\n    }\r\n\r\n    get fval() {\r\n        return this.AddPTForm.controls;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        if (!this.AddPTForm.invalid) {\r\n            if (this.btnVal == \"Save\") {\r\n                 \r\n                debugger;\r\n                this.gymServices.AddPTMembers(this.AddPTForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/PTDetails\"]);\r\n                    }\r\n\r\n                }, error => alert(error.message))\r\n            }\r\n            else { // Update \r\n                this.gymServices.UpdatePTMembers(this.AddPTForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/PTDetails\"]);\r\n                    }\r\n\r\n                }, error => alert(error.message))\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        return this._router.navigate([\"/PTDetails\"]);\r\n    }\r\n  \r\n    GetAllMemberShipPlan() {\r\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\r\n            this._MbrPlans = this._PTMembers = res.filter(x => x.PlanType == \"PT\");;\r\n            if (this.MbrShipId != undefined) {\r\n                this.showPersonalTrainingPlans(this.MbrShipId)\r\n            }\r\n             \r\n        },\r\n            error => alert(error.message));\r\n    }\r\n\r\n    onDateChange(value) {\r\n        this.date = new Date(value.srcElement.value);\r\n        this.date.setDate(this.date.getDate() + +this.MbrPtDays);\r\n        this.MbrshipEndDt = this.datepipe.transform(this.date, 'yyyy-MM-dd');\r\n    }\r\n\r\n\r\n    GetAllMembers() {\r\n        debugger;\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this._PTMembers = result.filter(x => x.MbrType == \"GymMember\");\r\n                this._PTTrainer = result.filter(x => x.MbrType == \"FloorManager\" || x.MbrType == \"Trainer\");\r\n\r\n                if (this.TrainerId != undefined) {\r\n                    this.showPTTrainerCharges(this.TrainerId)\r\n                }\r\n\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    showPersonalTrainingPlans(value) {\r\n\r\n        this.MbrPtDays = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\r\n\r\n    }\r\n     \r\n\r\n    showPTTrainerCharges(value) {\r\n         \r\n        this.MbrPTChargesofTrainer = this._PTTrainer.find(x => x.MbrId == value).MbrPTCharges\r\n\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1tZW1iZXJzaGlwLXBsYW4vYWRkLW1lbWJlcnNoaXAtcGxhbi5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1neW0tYnJhbmNoZXMvYWRkLWd5bS1icmFuY2hlcy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-payments',\r\n  templateUrl: './payments.component.html',\r\n  styleUrls: ['./payments.component.css']\r\n})\r\nexport class PaymentsComponent implements OnInit {\r\n\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs; \r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) { /*, private modalService: NgbModal */\r\n         \r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Designaion',\r\n                field: 'MbrType',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Plan',\r\n                field: 'MbrShipName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Amount',\r\n                field: 'MbrShipAmt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid Amt',\r\n                field: 'PaidAmt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid Dt',\r\n                field: 'PaidDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Member Ship',\r\n                field: 'MembershipType',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            }, \r\n\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n    }\r\n    \r\n\r\n    onGridReady(params) {\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue;\r\n        this.gymServices.GetPaymentDetails().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n                \r\n                dataValue = \"\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbmV3YWwtcGF5bWVudHMvcmVuZXdhbC1wYXltZW50cy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Remaining Balance</h4>\\r\\n\\r\\n        <form [formGroup]=\\\"AddRemBalForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MembershipType\\\" formControlName=\\\"MembershipType\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\" style=\\\"display:none\\\">\\r\\n            </div>\\r\\n             \\r\\n            <div>\\r\\n                <hr /> \\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Member Name</label> \\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrName\\\" formControlName=\\\"MbrName\\\" disabled>\\r\\n                            \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Remaining Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"RemBalance\\\" formControlName=\\\"RemBalance\\\" disabled>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Paid Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PaidAmt\\\" [(ngModel)]=\\\"PaidAmt\\\"> <!--(keypress)=\\\"BalanceAmount($event)\\\"-->\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Balance Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"BalRemaining\\\" [(ngModel)]=\\\"BalRemaining\\\" >\\r\\n                    </div>\\r\\n                      \\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidDt\\\" formControlName=\\\"PaidDt\\\">\\r\\n\\r\\n                    </div>\\r\\n                     \\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid By</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PaidBy\\\" [(ngModel)]=\\\"PaidByddl\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                            <option value=\\\"Cash\\\">Cash</option>\\r\\n                            <option value=\\\"Card\\\">Card</option>\\r\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\r\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\r\\n\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Discription\\\" [(ngModel)]=\\\"Discription\\\"> \\r\\n                    </div> \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        \\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Submit\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbmV3YWwtbWVtYmVyc2hpcC9yZW5ld2FsLW1lbWJlcnNoaXAuY29tcG9uZW50LmNzcyJ9 */\";","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { DatePipe } from '@angular/common'\r\n\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n    selector: 'app-add-employee',\r\n    templateUrl: './add-employee.component.html',\r\n    styleUrls: ['./add-employee.component.css']\r\n})\r\nexport class AddEmployeeComponent implements OnInit {\r\n\r\n    AddEmpForm: FormGroup;\r\n    _MbrPlans: MbrShipPlanClass[] = [];\r\n    _Members: GymMembersClass[] = [];\r\n    _PTMembers: GymMembersClass[] = [];\r\n    _PTTrainer: GymMembersClass[] = [];\r\n    submitted = false;\r\n\r\n    MbrTypeddl: any;\r\n    MbrCityddl: any;\r\n    MbrStateddl: any;\r\n    MbrPaidByddl: any;\r\n   \r\n    MbrGenderddl: any;\r\n    MbrPlansddl: any;\r\n\r\n\r\n    MbrId: string;\r\n    sal_Id: string;\r\n    MbrShipId: string;\r\n    MbrUserId: string;\r\n    MbrType: string;\r\n    MbrshipAmt: string;\r\n    MbrshipDays: string;\r\n    MbrName: string;\r\n    MbrMob: string\r\n    MbrMob2: string;\r\n    MbrDOB: string;\r\n    MbrGender: string; \r\n    MbrDOE: string;  \r\n    MbrEmail: string;\r\n    MbrAddr: string;\r\n    MbrCity: string;\r\n    MbrState: string;\r\n    MbrPincode: string;\r\n    MbrSalary: string;\r\n    SalDesc: string;\r\n    GeneralDesc: string;\r\n    MbrCertificationDt: string;\r\n    EmpName: string;\r\n    RemBalance: string;\r\n    MbrCertification: string;\r\n    MbrPlans: string;\r\n    MbrshipPaidAmt: string;\r\n    MbrPTCharges: string;\r\n    MbrBatch: string;\r\n    MbrshipStartDt: string;\r\n    MbrshipEndDt: string;\r\n    MbrshipDesc: string;\r\n    MbrPaidBy: string;\r\n    PaidDt: string;\r\n    btnVal: any;\r\n    modelheaderval: any;\r\n\r\n    MbrPTPlanId: string;\r\n    MbrPtDays: string;\r\n    MbrPtTrainerId: string;\r\n    MbrPTChargesofTrainer: string;\r\n    MbrPTAmt: string;\r\n    MbrPTAmtPaidBy: string;\r\n    MbrPTStartDt: string;\r\n    MbrPTEndDt: string;\r\n    MbrPTDesc: string;\r\n    PtMemberId: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    date: Date;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute, public datepipe: DatePipe  ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n         this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n\r\n        //debugger; \r\n        this.btnVal = 'Save';\r\n        this.modelheaderval = 'Add Member';\r\n\r\n\r\n        this.AddEmpForm = this.formBuilder.group({\r\n             \r\n            MbrType: ['', Validators.required],\r\n            MbrId: [''],\r\n            sal_Id:[''],\r\n            MbrName: ['', Validators.required], \r\n            MbrMob: ['', [Validators.required,  Validators.minLength(10), Validators.maxLength(10)]],\r\n            MbrMob2: [''],\r\n            MbrDOB: [''],\r\n            MbrGender: ['', Validators.required],\r\n            \r\n            MbrDOE: [''], \r\n            MbrEmail: [''],\r\n            MbrAddr: [''],\r\n            MbrCity: [''],\r\n            MbrState: [''],\r\n            MbrPincode: [''],\r\n            MbrSalary: [''],\r\n            SalDesc: [''],\r\n            GeneralDesc: [''], \r\n            MbrCertification: [''],\r\n            MbrCertificationDt: [''],\r\n            EmpName: [''],\r\n            RemBalance: [''],\r\n            MbrPlans: [''],\r\n            MbrshipAmt: [''],\r\n            MbrshipPaidAmt: [''],\r\n            MbrshipDays: [''],\r\n            MbrshipStartDt: [''],\r\n            MbrshipEndDt: [''],\r\n            MbrshipDesc: [''],\r\n            MbrPaidBy: [''],\r\n            PaidDt: [''],\r\n            MbrShipId: [''],\r\n            MbrUserId: [''],\r\n            MbrPTCharges: [''],\r\n\r\n            MbrBatch: [''],\r\n\r\n\r\n            MbrPTPlanId: [''],\r\n            MbrPtDays: [''],\r\n            MbrPtTrainerId: [''],\r\n            MbrPTChargesofTrainer: [''],\r\n            MbrPTAmt: [''],\r\n            MbrPTAmtPaidBy: [''],\r\n            MbrPTStartDt: [''],\r\n            MbrPTEndDt: [''],\r\n            MbrPTDesc: [''],\r\n            PtMemberId: [''],\r\n\r\n        });\r\n\r\n        this.route.queryParams.subscribe((params) => {\r\n            if (params != null && params.MbrName != undefined) {\r\n                this.MbrId = params.MbrId;\r\n                this.sal_Id = params.sal_Id;\r\n                this.MbrShipId = params.MbrShipId;\r\n                this.MbrUserId = params.MbrUserId;\r\n                this.MbrName = params.MbrName;\r\n                this.MbrTypeddl = params.MbrType;\r\n                this.MbrMob = params.MbrMob;\r\n                this.MbrMob2 = params.MbrMob2;\r\n                this.MbrDOB = params.MbrDOB;\r\n                this.MbrGender = params.MbrGender;\r\n                this.MbrDOE = params.MbrDOE;  \r\n                this.MbrEmail = params.MbrEmail;\r\n                this.MbrAddr = params.MbrAddr;\r\n                this.MbrCityddl = params.MbrCity;\r\n                this.MbrStateddl = params.MbrState;\r\n                this.MbrPincode = params.MbrPincode;\r\n                this.MbrSalary = params.MbrSalary;\r\n                this.SalDesc = params.SalDesc;\r\n                this.GeneralDesc = params.GeneralDesc;\r\n                this.MbrCertification = params.MbrCertification;\r\n                this.MbrCertificationDt = params.MbrCertificationDt;\r\n                this.EmpName = params.EmpName;\r\n                this.RemBalance = params.RemBalance; \r\n                this.MbrPlansddl = params.MbrShipId;\r\n                this.MbrshipAmt = params.MbrShipAmt;\r\n                this.MbrshipPaidAmt = params.PaidAmt;\r\n                this.MbrshipDays = params.MbrShipDurationInDays;\r\n                this.MbrshipStartDt = params.MbrshipStartDt;\r\n                this.MbrshipEndDt = params.MbrshipEndDt;\r\n                this.MbrshipDesc = params.Description;\r\n                this.MbrPaidByddl = params.PaidBy;\r\n                this.MbrPTCharges = params.MbrPTCharges;\r\n                this.MbrBatch = params.MbrBatch;\r\n\r\n\r\n                this.MbrPTPlanId = params.MbrPTPlanId;\r\n                this.MbrPtDays = params.MbrPtDays;\r\n                this.MbrPtTrainerId = params.MbrPtTrainerId;\r\n                this.MbrPTChargesofTrainer = params.MbrPTChargesofTrainer;\r\n                this.MbrPTAmt = params.MbrPTAmt;\r\n                this.MbrPTAmtPaidBy = params.MbrPTAmtPaidBy;\r\n                this.MbrPTStartDt = params.MbrPTStartDt;\r\n                this.MbrPTEndDt = params.MbrPTEndDt;\r\n                this.MbrPTDesc = params.MbrPTDesc;\r\n                this.PtMemberId = params.PtMemberId;\r\n\r\n\r\n                this.btnVal = 'update';\r\n                this.modelheaderval = 'Update Member';\r\n\r\n            }\r\n        })\r\n\r\n        this.GetAllMemberShipPlan();\r\n        this.GetAllMembers();\r\n    }\r\n\r\n    get fval() {\r\n        return this.AddEmpForm.controls;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        if (!this.AddEmpForm.invalid) {\r\n            if (this.btnVal == \"Save\") {\r\n                this.gymServices.AddMembers(this.AddEmpForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/Employee\"]);\r\n                    }\r\n\r\n                }, error => alert(error.message))\r\n            }\r\n            else { // Update \r\n                this.gymServices.UpdateMember(this.AddEmpForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/Employee\"]);\r\n                    }\r\n\r\n                }, error => alert(error.message))\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        return this._router.navigate([\"/Employee\"]);\r\n    }\r\n\r\n    GetAllMemberShipPlan() {\r\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\r\n            this._MbrPlans = res;\r\n            // data contains actual array of users\r\n        },\r\n            error => alert(error.message));\r\n    }\r\n\r\n    GetAllMembers() {\r\n        debugger;\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this._Members = result;\r\n                this._PTMembers = result.filter(x => x.MbrType == \"GymMember\");\r\n                this._PTTrainer = result.filter(x => x.MbrType == \"FloorManager\" || x.MbrType == \"Trainer\");\r\n\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    filterForeCasts(value) {\r\n        this.MbrTypeddl = value;\r\n    }\r\n\r\n    showMemberShipPlan(value) {\r\n\r\n        this.MbrshipAmt = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipAmt.toString();\r\n        this.MbrshipDays = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\r\n\r\n    }\r\n\r\n    showPersonalTrainingPlans(value) {\r\n\r\n        this.MbrPtDays = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\r\n\r\n    }\r\n\r\n    onDateChange(value) { \r\n        this.date = new Date(value.srcElement.value);\r\n        this.date.setDate(this.date.getDate() + +this.MbrshipDays);\r\n        this.MbrshipEndDt = this.datepipe.transform(this.date, 'yyyy-MM-dd'); \r\n    }\r\n\r\n    onDOBSelect(value) {\r\n        this.date = new Date(value.srcElement.value);\r\n        let timeDiff = Math.abs(Date.now() - this.date.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        if (age < 18) {\r\n            alert('Age must be greater than 18');\r\n            this.MbrDOB = '';\r\n        }\r\n    }\r\n    \r\n\r\n    showPTTrainerCharges(value) {\r\n\r\n        this.MbrPTChargesofTrainer = this._PTTrainer.find(x => x.MbrId == value).MbrPTCharges\r\n\r\n    }\r\n     \r\n    numberOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n}\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Renewal Payment</h4>\\r\\n        <hr />\\r\\n        <form [formGroup]=\\\"RenewalPaymentForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MembershipType\\\" formControlName=\\\"MembershipType\\\" style=\\\"display:none\\\">\\r\\n                \\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Member Name </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrName\\\" formControlName=\\\"MbrName\\\" disabled>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Batch</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"MbrBatch\\\" [(ngModel)]=\\\"MbrBatch\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option value=\\\"Morning\\\">Morning</option>\\r\\n                        <option value=\\\"Afternoon\\\">Afternoon</option>\\r\\n                        <option value=\\\"Evening\\\">Evening</option>\\r\\n\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Plan Name</label>\\r\\n\\r\\n                    <select formControlName=\\\"MbrShipId\\\" [(ngModel)]=\\\"MbrShipId\\\" class=\\\"form-control\\\" (change)=\\\"showMemberShipPlan($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipId.errors }\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\r\\n                            {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\r\\n                        </option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"submitted && fval.MbrShipId.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.MbrShipId.errors.required\\\">\\r\\n                            Plan is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Charges </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrShipCharges\\\" formControlName=\\\"MbrShipCharges\\\" disabled>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Days </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Days\\\" formControlName=\\\"Days\\\" disabled>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Paid Amount </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidAmt\\\" formControlName=\\\"PaidAmt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidAmt.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.PaidAmt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.PaidAmt.errors.required\\\">\\r\\n                            Paid Amount is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Paid By</label>\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"PaidBy\\\" [(ngModel)]=\\\"PaidBy\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidBy.errors }\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option value=\\\"Cash\\\">Cash</option>\\r\\n                        <option value=\\\"Card\\\">Card</option>\\r\\n                        <option value=\\\"Gpay\\\">Gpay</option>\\r\\n                        <option value=\\\"PhonePay\\\">PhonePay</option>\\r\\n                    </select>\\r\\n\\r\\n                    <div *ngIf=\\\"submitted && fval.PaidBy.errors\\\" class=\\\"invalid-feedback\\\" >\\r\\n                        <div *ngIf=\\\"fval.PaidBy.errors.required\\\">\\r\\n                            Paid By is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Paid Date </label>\\r\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidDt\\\" formControlName=\\\"PaidDt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidDt.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.PaidDt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.PaidDt.errors.required\\\">\\r\\n                            Paid Date is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Start Date </label>\\r\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\" (change)=\\\"onDateChange($event)\\\" >\\r\\n                </div> \\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                  \\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Expire Date</label>\\r\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Renewed\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    private gridApi1;\r\n    private gridColumnApi1;\r\n    private columnDefs1;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n    GymMember: any=0;\r\n    Trainer: any = 0;\r\n    PT: any = 0;\r\n    Enquiry: any = 0;\r\n    MbrShipExpiring: any=0;\r\n    Events: any;\r\n    \r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Enquiry for',\r\n                field: 'EnquiryFor',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Expected date to join ',\r\n                field: 'ExpectedDtToJoin',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Enquiry Date',\r\n                field: 'enquiryDate',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Last follow up',\r\n                field: 'enquiryDate',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n        ];\r\n\r\n        this.columnDefs1 = [\r\n            {\r\n                headerName: 'MbrId',\r\n                field: 'Id',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                hide: true,\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Designaion',\r\n                field: 'MbrType',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Mobile No',\r\n                field: 'MbrMob',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'BIRTHDAY',\r\n                field: 'BIRTHDAY',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'AGE',\r\n                field: 'AGE_NOW',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n    }\r\n\r\n    onGridReady(params) {\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue;\r\n        this.gymServices.GetDashboardData().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                debugger;\r\n                if (result.countModel != null) {\r\n                    \r\n                    this.GymMember = result.countModel.filter(x => x.MbrType == \"GymMember\")[0].count; //(result.countModel['GymMember'] == undefined || result.countModel['GymMember'] == null) ? 0 : result.countModel['GymMember'].count;\r\n                    this.Trainer = result.countModel.filter(x => x.MbrType == \"Trainer\")[0].count;\r\n                    this.PT = result.countModel.filter(x => x.MbrType == \"PT\")[0].count;\r\n                    this.Enquiry = result.countModel.filter(x => x.MbrType == \"Enquiry\")[0].count;\r\n                    this.MbrShipExpiring = result.countModel.filter(x => x.MbrType == \"MbrShipExpiring\")[0].count;\r\n                    this.Events = '0';\r\n\r\n                }\r\n                dataValue = result.enquiryModel;\r\n                params.api.setRowData(dataValue);\r\n\r\n                if (result.salesModel) {\r\n                    for (let n = 0; n < result.salesModel.length; ++n) {\r\n                        this.saleData.push({ \"name\": result.salesModel[n].Months, \"value\": Number(result.salesModel[n].Amt) });\r\n                    }\r\n                }\r\n                // ngs chart does not detect the data change sp we add below line\r\n                this.saleData = [...this.saleData];\r\n            }\r\n            else {\r\n\r\n                dataValue = \"\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n\r\n    onGridReady1(params) {\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi1 = params.api;\r\n        this.gridColumnApi1 = params.columnApi;\r\n         \r\n        this.gymServices.GetUpcomingBirthdays().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                params.api.setRowData(result);\r\n\r\n            } \r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    saleData = [];\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass'; \r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\n\r\n@Component({\r\n    selector: 'app-add-expenses',\r\n    templateUrl: './add-expenses.component.html',\r\n    styleUrls: ['./add-expenses.component.css']\r\n})\r\nexport class AddExpensesComponent implements OnInit {\r\n\r\n    AddExpensesForm: FormGroup;\r\n    ExpensesId: string;\r\n    ExpenseDate: string;\r\n    Category: string;\r\n    SubCategory: string;\r\n    Amount: string;\r\n    Description: string;\r\n    btnVal: any;\r\n    modelheaderval: any;\r\n    submitted = false;\r\n    IsSessionEnable : boolean;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.btnVal = 'Save';\r\n        this.modelheaderval = 'Add Expense';\r\n\r\n        this.AddExpensesForm = this.formBuilder.group({\r\n            ExpensesId: [''],\r\n            ExpenseDate: ['', Validators.required],\r\n            Category: ['', Validators.required],\r\n            Amount: ['', Validators.required], \r\n            Description: [''],\r\n        });\r\n\r\n        this.route.queryParams.subscribe((params) => {\r\n            debugger;\r\n            if (params != null && params.ExpensesId != undefined) {\r\n                this.ExpensesId = params.ExpensesId;\r\n                this.ExpenseDate = params.ExpenseDate;\r\n                this.Category = params.Category;\r\n                this.SubCategory = params.SubCategory;\r\n                this.Amount = params.Amount;\r\n                this.Description = params.Description;\r\n\r\n                this.btnVal = 'update';\r\n                this.modelheaderval = 'Update Expenses';\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        if (!this.AddExpensesForm.invalid) {\r\n            if (this.btnVal == \"Save\") {\r\n                this.gymServices.CreateExpense(this.AddExpensesForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/GymExpenses\"]);\r\n                    }\r\n                    else {\r\n                        alert(\"Error.\");\r\n                    }\r\n                }, error => alert(error.message))\r\n            }\r\n            else { // Update \r\n                this.gymServices.UpdateExpense(this.AddExpensesForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/GymExpenses\"]);\r\n                    }\r\n                    else {\r\n                        alert(\"Error.\");\r\n                    }\r\n                }, error => alert(error.message))\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        return this._router.navigate([\"/GymExpenses\"]);\r\n    }\r\n\r\n    numberOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    get fval() {\r\n        return this.AddExpensesForm.controls;\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-gym-expenses',\r\n  templateUrl: './gym-expenses.component.html',\r\n  styleUrls: ['./gym-expenses.component.css']\r\n})\r\nexport class GymExpensesComponent implements OnInit {\r\n\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n    private rowData;\r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'ExpensesId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n\r\n            },\r\n            {\r\n                headerName: 'Date',\r\n                field: 'ExpenseDate',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                cellRenderer: (params) => {\r\n                    const date = new Date(params.value);\r\n                    const formattedDate = date.toLocaleDateString('en-GB', { year: 'numeric', month: 'short', day: 'numeric' });\r\n                    return formattedDate;\r\n                },\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Category',\r\n                field: 'Category',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Amount',\r\n                field: 'Amount',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Description',\r\n                field: 'Description',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            }, \r\n            {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    OnDelete: this.OnDeleteMember.bind(this),\r\n\r\n                },\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n\r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n  }\r\n\r\n    AddExpense() {\r\n        return this._router.navigate([\"/AddExpenses\"]);\r\n    }\r\n\r\n    onBtnClick(e) {\r\n        \r\n        return this._router.navigate([\"/AddExpenses\"], { queryParams: e.rowData });\r\n    }\r\n\r\n    onGridReady(params) {\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue;\r\n        this.gymServices.GetAllExpense().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n                this.rowData = null;\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    OnDeleteMember(params) {\r\n        alert(params.ExpensesId);\r\n        this.gymServices.DeleteExpense(params.ExpensesId).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                alert('Deleted Successfully !');\r\n                return this._router.navigate([\"/GymExpenses\"]);\r\n            }\r\n            else {\r\n                alert(\"Error !\");\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n//export const baseUrl = \"https://localhost:44314/\";\r\n//export const sgMailAPIKey = \"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\";\r\nexport const baseUrl = \"http://192.168.0.159:81/\";\r\n \r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n\\r\\n        <h3>Members Hisory</h3>\\r\\n        <form [formGroup]=\\\"MbrHistoryForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Select Member</label>\\r\\n                    <select formControlName=\\\"PtMemberId\\\" [(ngModel)]=\\\"PtMemberId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                        <option *ngFor=\\\"let mbr of _Members\\\" value={{mbr.MbrId}}>\\r\\n                            {{mbr.MbrName}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                             class=\\\"ag-theme-alpine\\\"\\r\\n                             [columnDefs]=\\\"columnDefs\\\"\\r\\n                             (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                             [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                             [animateRows]=\\\"true\\\"\\r\\n                             pagination=\\\"true\\\"\\r\\n                             [rowData]=\\\"rowData\\\"\\r\\n                             paginationPageSize=\\\"20\\\">\\r\\n            </ag-grid-angular>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-trainers-history',\r\n  templateUrl: './trainers-history.component.html',\r\n  styleUrls: ['./trainers-history.component.css']\r\n})\r\nexport class TrainersHistoryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"loginFormDesign d-flex align-items-center justify-content-center \\\">\\r\\n    <div class=\\\"wrapper fadeInDown m-0\\\">\\r\\n        <div class=\\\"card m-0\\\">\\r\\n            <form [formGroup]=\\\"ForgotPasswordform\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\" class=\\\"d-flex flex-column\\\">\\r\\n                <div class=\\\"h3 text-center text-white\\\">Forgot Password</div>\\r\\n                <div class=\\\"d-flex align-items-center input-field my-3 mb-4\\\">\\r\\n                    <span class=\\\"far fa-user p-2\\\"></span>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"EmailAdr\\\" placeholder=\\\"Email Address\\\" required class=\\\"form-control\\\" >\\r\\n                </div>\\r\\n                 \\r\\n                <div> <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary\\\"> </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n        <!-- Main content -->\\r\\n        <section class=\\\"content\\\">\\r\\n            <div class=\\\"container-fluid\\\">\\r\\n                <!-- Small boxes (Stat box) -->\\r\\n                <div class=\\\"row text-center\\\">\\r\\n                    <div class=\\\"col-lg-4 col-6\\\">\\r\\n                        <!-- small box -->\\r\\n                        <div class=\\\"small-box bg-info\\\">\\r\\n                            <div class=\\\"inner topPadding\\\">\\r\\n                                <h3>Gym Members</h3>\\r\\n\\r\\n                                <p style=\\\"font-size:20px;\\\">{{GymMember}}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"icon\\\">\\r\\n                                <i class=\\\"ion ion-bag\\\"></i>\\r\\n                            </div>\\r\\n                            <a href=\\\"#\\\" [routerLink]=\\\"['/Employee']\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ./col -->\\r\\n                    <div class=\\\"col-lg-4 col-6\\\">\\r\\n                        <!-- small box -->\\r\\n                        <div class=\\\"small-box bg-success\\\">\\r\\n                            <div class=\\\"inner topPadding\\\">\\r\\n                                <h3>Trainer's</h3>\\r\\n                                <p style=\\\"font-size:20px;\\\"> {{Trainer}}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"icon\\\">\\r\\n                                <i class=\\\"ion ion-stats-bars\\\"></i>\\r\\n                            </div>\\r\\n                            <a href=\\\"#\\\" [routerLink]=\\\"['/Employee']\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ./col -->\\r\\n                    <div class=\\\"col-lg-4 col-6\\\">\\r\\n                        <!-- small box -->\\r\\n                        <div class=\\\"small-box bg-warning\\\">\\r\\n                            <div class=\\\"inner topPadding\\\">\\r\\n                                <h3>Profetinal Trainers</h3>\\r\\n                                <p style=\\\"font-size:20px;\\\">{{ PT }}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"icon\\\">\\r\\n                                <i class=\\\"ion ion-person-add\\\"></i>\\r\\n                            </div>\\r\\n                            <a href=\\\"#\\\" [routerLink]=\\\"['/Employee']\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ./col -->\\r\\n                </div>\\r\\n                <!-- /.row -->\\r\\n                <!-- Small boxes (Stat box) -->\\r\\n                <div class=\\\"row text-center\\\" style=\\\"margin-top:5px\\\">\\r\\n                    <div class=\\\"col-lg-4 col-6\\\">\\r\\n                        <!-- small box -->\\r\\n                        <div class=\\\"small-box bg-danger\\\">\\r\\n                            <div class=\\\"inner topPadding\\\">\\r\\n                                <h3>Month Enqiries</h3>\\r\\n                                <p style=\\\"font-size:20px;\\\">{{Enquiry}}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"icon\\\">\\r\\n                                <i class=\\\"ion ion-bag\\\"></i>\\r\\n                            </div>\\r\\n                            <a href=\\\"#\\\" [routerLink]=\\\"['/Employee']\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ./col -->\\r\\n                    <div class=\\\"col-lg-4 col-6\\\">\\r\\n                        <!-- small box -->\\r\\n                        <div class=\\\"small-box bg-primary\\\">\\r\\n                            <div class=\\\"inner topPadding\\\">\\r\\n                                <h3>Membership expiring </h3>\\r\\n                                <p style=\\\"font-size:20px;\\\"> {{ MbrShipExpiring }}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"icon\\\">\\r\\n                                <i class=\\\"ion ion-stats-bars\\\"></i>\\r\\n                            </div>\\r\\n                            <a href=\\\"#\\\" [routerLink]=\\\"['/Employee']\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ./col -->\\r\\n                    <div class=\\\"col-lg-4 col-6\\\">\\r\\n                        <!-- small box -->\\r\\n                        <div class=\\\"small-box bg-secondary\\\">\\r\\n                            <div class=\\\"inner topPadding\\\">\\r\\n                                <h3>Event</h3>\\r\\n                                <p style=\\\"font-size:20px;\\\">{{ Events }}</p>\\r\\n                            </div>\\r\\n                            <div class=\\\"icon\\\">\\r\\n                                <i class=\\\"ion ion-person-add\\\"></i>\\r\\n                            </div>\\r\\n                            <a href=\\\"#\\\" [routerLink]=\\\"['/Employee']\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- ./col -->\\r\\n                </div>\\r\\n                <!-- /.row -->\\r\\n                <!-- Main row -->\\r\\n                <div class=\\\"row\\\">\\r\\n                    <!-- Left col -->\\r\\n                    <section class=\\\"col-lg-12 connectedSortable\\\">\\r\\n                        <!-- Custom tabs (Charts with tabs)-->\\r\\n                        <div class=\\\"card\\\" style=\\\"max-width:100% !important;margin:10px 0 0 0 !important;padding:0px !important\\\">\\r\\n                            <div class=\\\"card-header\\\">\\r\\n                                <h3 class=\\\"card-title\\\">\\r\\n                                    <i class=\\\"fas fa-chart-pie mr-1\\\"></i>\\r\\n                                    Sales\\r\\n                                </h3>\\r\\n                            </div><!-- /.card-header -->\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <div class=\\\"tab-content p-0\\\">\\r\\n                                    <ngx-charts-bar-vertical [view]=\\\"[1000,400]\\\"\\r\\n                                                             [results]=\\\"saleData\\\"\\r\\n                                                             [xAxisLabel]=\\\"'Months'\\\"\\r\\n                                                             [legendTitle]=\\\"'Sale Chart'\\\"\\r\\n                                                             [yAxisLabel]=\\\"'Sales'\\\"\\r\\n                                                             [legend]=\\\"true\\\"\\r\\n                                                             [showXAxisLabel]=\\\"true\\\"\\r\\n                                                             [showYAxisLabel]=\\\"true\\\"\\r\\n                                                             [xAxis]=\\\"true\\\"\\r\\n                                                             [yAxis]=\\\"true\\\"\\r\\n                                                             [gradient]=\\\"true\\\">\\r\\n                                    </ngx-charts-bar-vertical>\\r\\n                                </div>\\r\\n                            </div><!-- /.card-body -->\\r\\n                        </div>\\r\\n                        <!-- /.card -->\\r\\n                    </section>\\r\\n                    <!-- /.Left col -->\\r\\n                </div>\\r\\n                <!-- /.row (main row) -->\\r\\n                <div class=\\\"row\\\">\\r\\n                    <section class=\\\"col-lg-12 connectedSortable\\\">\\r\\n                        <div>\\r\\n                            <div class=\\\"card-header\\\">\\r\\n                                <h3 class=\\\"card-title\\\">\\r\\n                                    <i class=\\\"fas fa-chart-pie mr-1\\\"></i>\\r\\n                                    New Member's Enqiry\\r\\n                                </h3>\\r\\n                            </div>\\r\\n                            <ag-grid-angular style=\\\"width: 100%; height: 300px;\\\"\\r\\n                                             class=\\\"ag-theme-alpine\\\"\\r\\n                                             [columnDefs]=\\\"columnDefs\\\"\\r\\n                                             (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                                             [animateRows]=\\\"true\\\"\\r\\n                                             pagination=\\\"true\\\"\\r\\n                                             paginationPageSize=\\\"20\\\">\\r\\n                            </ag-grid-angular>\\r\\n                        </div>\\r\\n                    </section>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <section class=\\\"col-lg-12 connectedSortable\\\">\\r\\n                        <div>\\r\\n                            <div class=\\\"card-header\\\">\\r\\n                                <h3 class=\\\"card-title\\\">\\r\\n                                    <i class=\\\"fas fa-chart-pie mr-1\\\"></i>\\r\\n                                   Upcoming Birthdays\\r\\n                                </h3>\\r\\n                            </div>\\r\\n                            <ag-grid-angular style=\\\"width: 100%; height: 300px;\\\"\\r\\n                                             class=\\\"ag-theme-alpine\\\"\\r\\n                                             [columnDefs]=\\\"columnDefs1\\\"\\r\\n                                             (gridReady)=\\\"onGridReady1($event)\\\"\\r\\n                                             [animateRows]=\\\"true\\\"\\r\\n                                             pagination=\\\"true\\\"\\r\\n                                             paginationPageSize=\\\"20\\\">\\r\\n                            </ag-grid-angular>\\r\\n                        </div>\\r\\n                    </section>\\r\\n                </div>\\r\\n            </div><!-- /.container-fluid -->\\r\\n        </section>\\r\\n        <!-- /.content -->\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\n\r\n\r\n@Component({\r\n    selector: 'app-membership-history',\r\n    templateUrl: './membership-history.component.html',\r\n    styleUrls: ['./membership-history.component.css']\r\n})\r\nexport class MembershipHistoryComponent implements OnInit {\r\n\r\n    MbrHistoryForm: FormGroup;\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    private rowData;\r\n    PtMemberId: string;\r\n    _Members: GymMembersClass[] = [];\r\n    IsSessionEnable: boolean;\r\n\r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute, public formBuilder: FormBuilder) {\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\r\n\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Batch',\r\n                field: 'MbrBatch',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership Name',\r\n                field: 'MbrShipName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership Amt',\r\n                field: 'MbrShipAmt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid Amt',\r\n                field: 'PaidAmt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid By',\r\n                field: 'PaidBy',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid Dt',\r\n                field: 'PaidDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Start Dt',\r\n                field: 'MbrshipStartDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'End Dt',\r\n                field: 'MbrshipEndDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Type',\r\n                field: 'MembershipType',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n\r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.MbrHistoryForm = this.formBuilder.group({\r\n\r\n            PtMemberId: ['', [Validators.required, Validators.min(1)]],\r\n             \r\n        });\r\n\r\n        this.GetAllMembers();\r\n\r\n    }\r\n\r\n    onGridReady(params) {\r\n        this.rowData = '';\r\n    }\r\n\r\n    GetAllMembers() {\r\n        debugger;\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this._Members = result;\r\n            }\r\n\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    showPersonalTrainingPlans(value) {\r\n        \r\n        let MemberId = value;\r\n        this.gymServices.GetGymMemberHistoryById(MemberId).subscribe(result => {\r\n            if (!isNull(result)) { \r\n                this.rowData = result;\r\n            }\r\n            else {\r\n                 \r\n                this.rowData = null;\r\n            }\r\n        }, error => alert(error.message))\r\n\r\n    }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\n\r\n@Component({\r\n    selector: 'app-add-remaining-balance',\r\n    templateUrl: './add-remaining-balance.component.html',\r\n    styleUrls: ['./add-remaining-balance.component.css']\r\n})\r\nexport class AddRemainingBalanceComponent implements OnInit {\r\n\r\n    AddRemBalForm: FormGroup;\r\n    _PTMembers: GymMembersClass[] = [];\r\n    _PTTrainer: GymMembersClass[] = [];\r\n    _MbrPlans: MbrShipPlanClass[] = [];\r\n    submitted = false;\r\n\r\n    MbrId: string;\r\n    MbrName: string;\r\n    MbrShipId: string;\r\n    RemBalance: string;\r\n    MembershipType: string;\r\n    Discription: string;\r\n    BalRemaining: string;\r\n    PaidDt: string;\r\n    PaidBy: string;\r\n    PaidAmt: string;\r\n    MbrshipStartDt: string;\r\n    MbrshipEndDt: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.AddRemBalForm = this.formBuilder.group({\r\n\r\n            MbrId: ['', Validators.required],\r\n            MbrName: ['', Validators.required],\r\n            MbrShipId: ['', Validators.required],\r\n            RemBalance: ['', Validators.required],\r\n            MembershipType: ['', Validators.required],\r\n            PaidDt: ['', Validators.required],\r\n            PaidBy: ['', Validators.required],\r\n            PaidAmt: ['', Validators.required],\r\n            BalRemaining: [''],\r\n            Discription: [''],\r\n            MbrshipStartDt: ['', Validators.required],\r\n            MbrshipEndDt: ['', Validators.required],\r\n        });\r\n\r\n\r\n\r\n        this.route.queryParams.subscribe((params) => {\r\n            if (params != null && params.MbrName != undefined) {\r\n\r\n                this.MbrId = params.MbrId;\r\n                this.MbrName = params.MbrName;\r\n                this.MbrShipId = params.MbrShipId;\r\n                this.RemBalance = params.RemBalance;\r\n                this.MembershipType = params.MembershipType;\r\n                this.MbrshipStartDt = params.MbrshipStartDt;\r\n                this.MbrshipEndDt = params.MbrshipEndDt;\r\n            }\r\n        })\r\n        this.GetAllMemberShipPlan();\r\n\r\n    }\r\n\r\n    get fval() {\r\n        return this.AddRemBalForm.controls;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        debugger;\r\n        if (!this.AddRemBalForm.invalid) {\r\n            // adding new remaining balance to existing \r\n            this.AddRemBalForm.value.RemBalance = this.BalRemaining;\r\n            this.gymServices.AddPTMembers(this.AddRemBalForm.value).subscribe(result => {\r\n                if (!isNull(result)) {\r\n                    alert(result);\r\n                    return this._router.navigate([\"/RemainingBalance\"]);\r\n                }\r\n\r\n            }, error => alert(error.message))\r\n\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        return this._router.navigate([\"/RemainingBalance\"]);\r\n    }\r\n\r\n    GetAllMemberShipPlan() {\r\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\r\n            this._MbrPlans = res;\r\n\r\n        },\r\n            error => alert(error.message));\r\n    }\r\n\r\n    //BalanceAmount(event): boolean {\r\n\r\n    //    let amt;\r\n    //    if (this.PaidAmt != undefined)\r\n    //        amt = this.PaidAmt + event.key;\r\n    //    else\r\n    //        amt = event.key;\r\n\r\n    //    if (JSON.parse(amt) > 0) {\r\n    //        let valu = JSON.parse(this.RemBalance) - JSON.parse(amt);\r\n    //        this.BalRemaining = JSON.parse(valu.toString());\r\n    //    }\r\n    //    return true;\r\n\r\n    //}\r\n}\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\r\\n        <hr />\\r\\n\\r\\n        <form [formGroup]=\\\"AddPlanForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n            <div style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\"> \\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label for=\\\"name\\\">Plan Name</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipName\\\" class=\\\"form-control\\\" formControlName=\\\"MbrShipName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipName.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.MbrShipName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.MbrShipName.errors.required\\\">\\r\\n                            Plan Name is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Amount </label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipAmt\\\" class=\\\"form-control\\\" formControlName=\\\"MbrShipAmt\\\" (keypress)=\\\"numberOnly($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipAmt.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.MbrShipAmt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.MbrShipAmt.errors.required\\\">\\r\\n                            Please enter amount.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Duration (Days) </label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipDurationInDays\\\" class=\\\"form-control\\\" formControlName=\\\"MbrShipDurationInDays\\\" (keypress)=\\\"numberOnly($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipDurationInDays.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.MbrShipDurationInDays.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.MbrShipDurationInDays.errors.required\\\">\\r\\n                            Enter Plan Duration.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label for=\\\"name\\\">Start Date</label>\\r\\n                    <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"StartDt\\\" formControlName=\\\"StartDt\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> End Date</label>\\r\\n                    <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"EndDt\\\" formControlName=\\\"EndDt\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Description </label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"Description\\\" class=\\\"form-control\\\" formControlName=\\\"Description\\\" >\\r\\n                </div>\\r\\n            </div>\\r\\n              \\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Profile</h4>\\r\\n        <hr />\\r\\n        <form [formGroup]=\\\"GymProfileForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n            <div style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"GymProfileId\\\" formControlName=\\\"GymProfileId\\\" style=\\\"display:none\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Gym Name</label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"GymName\\\" formControlName=\\\"GymName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.GymName.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.GymName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.GymName.errors.required\\\">\\r\\n                            Gym Name is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>First Name</label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"FName\\\" formControlName=\\\"FName\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Last Name </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"LName\\\" formControlName=\\\"LName\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Mobile No</label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MobileNumber\\\" formControlName=\\\"MobileNumber\\\" maxlength=\\\"10\\\" (keypress)=\\\"numberOnly($event)\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Address</label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Address\\\" formControlName=\\\"Address\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Email Id</label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"EMailId\\\" formControlName=\\\"EMailId\\\">\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> MemberShip Plan </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrShipName\\\" formControlName=\\\"MbrShipName\\\" disabled>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Amount Paid </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidAmt\\\" formControlName=\\\"PaidAmt\\\" disabled>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Start Date</label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\" disabled>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Expired </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\" disabled>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> MemberShip Status </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mbrShipStatus\\\" formControlName=\\\"mbrShipStatus\\\" disabled>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> GST No </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"GSTNo\\\" formControlName=\\\"GSTNo\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Website </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Website\\\" formControlName=\\\"Website\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" value=\\\"Update Profile\\\" (click)=\\\"onSubmit($event)\\\">\\r\\n\\r\\n            <div class=\\\"form-row \\\">\\r\\n                <h5 class=\\\"mb-2\\\">Admin Profile</h5>\\r\\n            </div>\\r\\n            <hr />\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" [value]=\\\"btnValue\\\"  (click)=\\\"onSubmit($event)\\\"><!--Activate Admin Profile-->\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\"  *ngIf=\\\"isShown\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Enter OTP </label><br />\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"OTPValue\\\" formControlName=\\\"OTPValue\\\" maxlength=\\\"6\\\" (keypress)=\\\"VerifyOTP($event)\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row \\\">\\r\\n                <h5 class=\\\"mb-2\\\">Change Password</h5>\\r\\n            </div>\\r\\n            <hr />\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Old Password</label>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"OldPassword\\\" formControlName=\\\"OldPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.OldPassword.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.OldPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.OldPassword.errors.required\\\">\\r\\n                            Old password is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>New Password</label>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"NewPassword\\\" formControlName=\\\"NewPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.NewPassword.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.NewPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.NewPassword.errors.required\\\">\\r\\n                            New password is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Conform password</label>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ConfirmPassword\\\" formControlName=\\\"ConfirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.ConfirmPassword.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.ConfirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.ConfirmPassword.errors.required\\\">\\r\\n                            Conformed password is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" value=\\\"Update Password\\\" (click)=\\\"onSubmit($event)\\\">\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n        <div style=\\\"margin-bottom:5px;\\\">\\r\\n            <button class=\\\"btn-info\\\" (click)=\\\"AddExpense()\\\">Add Expense</button>\\r\\n        </div>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                         class=\\\"ag-theme-alpine\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                         [animateRows]=\\\"true\\\"\\r\\n                         pagination=\\\"true\\\"\\r\\n                         [rowData]=\\\"rowData\\\"\\r\\n                         paginationPageSize=\\\"20\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { DatePipe } from '@angular/common'\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport * as XLSX from 'xlsx';\r\n\r\n\r\n@Component({\r\n    selector: 'app-all-reports',\r\n    templateUrl: './all-reports.component.html',\r\n    styleUrls: ['./all-reports.component.css']\r\n})\r\nexport class AllReportsComponent implements OnInit {\r\n    IsSessionEnable: any;\r\n    AllReportsForm: FormGroup;\r\n    rdValue: any;\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    private rowData;\r\n    MemberId: string;\r\n    optionValue: boolean = false;\r\n    _Members: GymMembersClass[] = [];\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router) {\r\n        this.columnDefs = [\r\n\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Mobile No',\r\n                field: 'MbrMob',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'DOB',\r\n                field: 'MbrDOB',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Marrial Status',\r\n                field: 'MbrMarrialStatus',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Email',\r\n                field: 'MbrEmail',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Addr',\r\n                field: 'MbrAddr',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'City',\r\n                field: 'MbrCity',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'State',\r\n                field: 'MbrState',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Pincode',\r\n                field: 'MbrPincode',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'PT Charges',\r\n                field: 'MbrPTCharges',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Batch',\r\n                field: 'MbrBatch',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Desciption',\r\n                field: 'GeneralDesc',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Gender',\r\n                field: 'MbrGender',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership Name',\r\n                field: 'MbrShipName',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'MemberShip Start Dt',\r\n                field: 'MbrshipStartDt',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'MemberShip End Dt',\r\n                field: 'MbrshipEndDt',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Paid Amt',\r\n                field: 'PaidAmt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid Dt',\r\n                field: 'PaidDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Paid By',\r\n                field: 'PaidBy',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Membership',\r\n                field: 'MembershipType',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Remaining Bal',\r\n                field: 'RemBalance',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Total Members',\r\n                field: 'TotalMembers',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Total Earn',\r\n                field: 'TotalEarn',\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Total Amount',\r\n                field: 'TotalAmount',\r\n                filter: 'agTextColumnFilter'\r\n            }\r\n\r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n\r\n        this.AllReportsForm = this.formBuilder.group({\r\n            MemberId: ['', [Validators.required, Validators.min(1)]],\r\n\r\n        });\r\n\r\n        this.GetAllMembers();\r\n\r\n    }\r\n\r\n    GetAllMembers() {\r\n        debugger;\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this._Members = result;\r\n            }\r\n\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    OnReportChanges(e) {\r\n        this.rdValue = e.target.value;\r\n\r\n        if (e.target.value == 'YearlyReport') {\r\n            this.optionValue = true;\r\n        }\r\n        else\r\n            this.optionValue = false;\r\n    }\r\n\r\n    onGridReady(params) {\r\n        debugger;\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n        debugger;\r\n        this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrMob', 'MbrDOB', 'MbrMarrialStatus', 'MbrEmail', 'MbrAddr', 'MbrCity', 'MbrState', 'MbrPincode', 'MbrPTCharges', 'MbrBatch', 'GeneralDesc', 'MbrGender', 'MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'PaidAmt', 'PaidDt', 'PaidBy', 'MembershipType', 'RemBalance', 'TotalAmount', 'TotalEarn', 'TotalMembers'], false);\r\n\r\n        if (this.rdValue == \"YearlyReport\") {\r\n\r\n            if (this.MemberId != null) {\r\n                this.gymServices.GetMemberYearlyReport(this.MemberId).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        this.rowData = result;\r\n                        this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrMob', 'MbrDOB', 'MbrMarrialStatus', 'MbrEmail', 'MbrAddr', 'MbrCity', 'MbrState', 'MbrPincode', 'MbrPTCharges', 'MbrBatch', 'GeneralDesc', 'MbrGender', 'MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'PaidAmt', 'PaidDt', 'PaidBy', 'MembershipType', 'RemBalance'], true);\r\n                    }\r\n                    else {\r\n\r\n                        this.rowData = \"\";\r\n\r\n                    }\r\n\r\n                }, error => alert(error.message))\r\n            }\r\n            else {\r\n                alert(\"Please select Members\")\r\n            }\r\n\r\n        }\r\n        else if (this.rdValue == \"FinantialReport\") {\r\n\r\n            //this.gymServices.().subscribe(result => {\r\n            //    if (!isNull(result)) {\r\n            //        alert(result);\r\n            //        return this._router.navigate([\"/PTDetails\"]);\r\n            //    }\r\n\r\n            //}, error => alert(error.message))\r\n        }\r\n        else if (this.rdValue == \"Summury\") {\r\n            this.gymServices.GetSummaryReport().subscribe(result => {\r\n                if (!isNull(result)) {\r\n                    this.rowData = result;\r\n                    this.gridColumnApi.setColumnsVisible(['MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'TotalMembers', 'TotalEarn'], true);\r\n\r\n                }\r\n                else {\r\n\r\n                    this.rowData = \"\";\r\n\r\n                }\r\n\r\n            }, error => alert(error.message))\r\n        }\r\n        else if (this.rdValue == \"MbrShipReport\") {\r\n            this.gymServices.GetMembershipReport().subscribe(result => {\r\n                if (!isNull(result)) {\r\n                    this.rowData = result;\r\n\r\n                    this.gridColumnApi.setColumnsVisible(['MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'TotalMembers', 'TotalEarn'], true);\r\n\r\n\r\n                }\r\n                else {\r\n\r\n                    this.rowData = \"\";\r\n\r\n                }\r\n\r\n            }, error => alert(error.message))\r\n        }\r\n        else if (this.rdValue == \"PersonalTraining\") {\r\n            this.gymServices.GetPTReport().subscribe(result => {\r\n                if (!isNull(result)) {\r\n                    this.rowData = result;\r\n                    this.gridColumnApi.setColumnsVisible(['MbrName', 'TotalAmount'], true);\r\n\r\n                }\r\n                else {\r\n\r\n                    this.rowData = \"\";\r\n\r\n                }\r\n\r\n            }, error => alert(error.message))\r\n        }\r\n    }\r\n\r\n    exportToExcel(): void {\r\n        // Get the grid data\r\n        const rowData = this.rowData;\r\n\r\n        // Create a new workbook\r\n        const workbook = XLSX.utils.book_new();\r\n\r\n        // Create a new worksheet\r\n        const worksheet = XLSX.utils.json_to_sheet(rowData);\r\n\r\n        // Add the worksheet to the workbook\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\r\n\r\n        // Generate the Excel file\r\n        XLSX.writeFile(workbook, 'data.xlsx');\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\n\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\n//import { debug } from 'console';\r\n\r\n@Component({\r\n    selector: 'app-gym-profile',\r\n    templateUrl: './gym-profile.component.html',\r\n    styleUrls: ['./gym-profile.component.css']\r\n})\r\nexport class GymProfileComponent implements OnInit {\r\n\r\n    GymProfileForm: FormGroup;\r\n    submitted = false;\r\n\r\n    GymProfileId: string;\r\n    FName: string;\r\n    LName: string;\r\n    GymName: string;\r\n    Address: string;\r\n    EMailId: string;\r\n    MbrShipName: string;\r\n    MbrshipStartDt: string;\r\n    MbrshipEndDt: string;\r\n    PaidAmt: string;\r\n    mbrShipStatus: string;\r\n    MobileNumber: string;\r\n    Website: string;\r\n    GSTNo: string;\r\n    AddedBy: string;\r\n    OldPassword: string;\r\n    NewPassword: string;\r\n    ConfirmPassword: string;\r\n    IsSessionEnable: boolean;\r\n    OTPValue: string;\r\n    btnValue: string ;\r\n    isShown: boolean = false; // hidden by default\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        if (localStorage.getItem('isAdmin') != null && localStorage.getItem('isAdmin') == \"false\") {\r\n            this.btnValue = \"Activate Admin Profile\";\r\n        }\r\n        else {\r\n            this.btnValue = \"De-Activate Admin Profile\";\r\n        }\r\n\r\n        this.GymProfileForm = this.formBuilder.group({\r\n\r\n            GymProfileId: [''],\r\n            FName: [''],\r\n            LName: [''],\r\n            GymName: ['', Validators.required],\r\n            Address: [''],\r\n            EMailId: [''],\r\n            MbrShipName: [''],\r\n            PaidAmt: [''],\r\n            mbrShipStatus: [''],\r\n            MbrshipStartDt: [''],\r\n            MbrshipEndDt: [''],\r\n            GSTNo: [''],\r\n            Password: [''],\r\n            MobileNumber: [''],\r\n            Website: [''],\r\n            AddedBy: [''],\r\n            OldPassword: ['', Validators.required],\r\n            NewPassword: ['', Validators.required],\r\n            ConfirmPassword: ['', Validators.required],\r\n            OTPValue: [''],\r\n        });\r\n\r\n\r\n        this.GetGymProfile();\r\n\r\n    }\r\n\r\n    onSubmit(param) {\r\n        debugger;\r\n        this.submitted = true;\r\n         \r\n        if (param.target.value == \"Update Profile\") {\r\n            this.GymProfileForm.controls['OldPassword'].disable();\r\n            this.GymProfileForm.controls['NewPassword'].disable();\r\n            this.GymProfileForm.controls['ConfirmPassword'].disable();\r\n\r\n            if (!this.GymProfileForm.invalid) {\r\n                this.gymServices.UpdateGymProfileDetails(this.GymProfileForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(\"Data Updated.\");\r\n                        this.GymProfileForm.controls['OldPassword'].enable();\r\n                        this.GymProfileForm.controls['NewPassword'].enable();\r\n                        this.GymProfileForm.controls['ConfirmPassword'].enable();\r\n                        return this._router.navigate([\"/GymProfile\"]);\r\n                    }\r\n                    else {\r\n\r\n                        this.GymProfileForm.controls['OldPassword'].enable();\r\n                        alert(\"Error !\");\r\n                    }\r\n                }, error => alert(error.message))\r\n            }\r\n        }\r\n        else if (param.target.value == \"Activate Admin Profile\") {\r\n            this.GymProfileForm.controls['OldPassword'].disable();\r\n            this.GymProfileForm.controls['NewPassword'].disable();\r\n            this.GymProfileForm.controls['ConfirmPassword'].disable();\r\n\r\n            if (!this.GymProfileForm.invalid) {\r\n                this.isShown = true;\r\n            }\r\n        }\r\n        else if (param.target.value == \"De-Activate Admin Profile\") {\r\n            this.GymProfileForm.controls['OldPassword'].disable();\r\n            this.GymProfileForm.controls['NewPassword'].disable();\r\n            this.GymProfileForm.controls['ConfirmPassword'].disable();\r\n\r\n            if (!this.GymProfileForm.invalid) {\r\n                this.isShown = true;\r\n                this.btnValue = \"Activate Admin Profile\";\r\n                localStorage.setItem(\"isAdmin\", 'false');\r\n                return this._router.navigate([\"/Home\"]);\r\n\r\n            }\r\n        }\r\n        else { // Update \r\n            if (!this.GymProfileForm.invalid) {\r\n                this.gymServices.UpdatePassowrd(this.GymProfileForm.value).subscribe(result => {\r\n                    if (isNull(result)) {\r\n                        alert(\"Password Updated.\");\r\n                        return this._router.navigate([\"/GymProfile\"]);\r\n                    }\r\n                    else {\r\n                        alert(\"Incorrect Creiditials\");\r\n                    }\r\n                }, error => alert(error.message))\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    GetGymProfile() {\r\n        debugger;\r\n        this.gymServices.GetGymProfileDetails().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this.GymProfileId = result.GymProfileId;\r\n                this.FName = result.FName;\r\n                this.LName = result.LName;\r\n                this.GymName = result.GymName;\r\n                this.Address = result.Address;\r\n                this.EMailId = result.EMailId;\r\n                this.MbrShipName = result.MbrShipName;\r\n                this.PaidAmt = result.PaidAmt;\r\n                this.mbrShipStatus = result.mbrShipStatus;\r\n                this.MbrshipStartDt = result.MbrshipStartDt;\r\n                this.MbrshipEndDt = result.MbrshipEndDt;\r\n                this.GSTNo = result.GSTNo;\r\n                this.MobileNumber = result.MobileNumber;\r\n                this.Website = result.Website; \r\n            }\r\n\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    numberOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    VerifyOTP(event): boolean {\r\n\r\n        if ((this.OTPValue.length + 1) == 6) {\r\n\r\n            // Verify OTP From DB\r\n            if (!this.GymProfileForm.invalid) {\r\n                this.gymServices.VerifyOTP(this.OTPValue + event.key).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        if (result) {\r\n                            this.isShown = false;\r\n                            this.btnValue = \"De-Activate Admin Profile\";\r\n                            localStorage.setItem(\"isAdmin\", 'true');\r\n                            return this._router.navigate([\"/Home\"]);\r\n\r\n                        }\r\n                        else {\r\n\r\n                        }\r\n                    }\r\n                    else {\r\n                        alert(\"Incorrect OTP\");\r\n                    }\r\n                }, error => alert(error.message))\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get fval() {\r\n        return this.GymProfileForm.controls;\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B0ZGV0YWlscy9wdGRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d5bS1icmFuY2hlcy9neW0tYnJhbmNoZXMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular'\r\nimport { Router } from '@angular/router';\r\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n    selector: 'app-btn-renderer',\r\n    template: '<img (click)=\"OnEditClick($event)\" src=\"./assets/Edit_img.png\" alt=\"\" class = \"picture1\" />',\r\n    /*styleUrls: ['./btn-cell-renderer.component.css']*/\r\n})\r\nexport class EditBtnRendererComponent implements ICellRendererAngularComp {\r\n    params;\r\n    constructor(private gymServices: GymService, private _router: Router) { }\r\n    _MbrPlans: any;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n    }\r\n\r\n    refresh(param?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    OnEditClick($event) {\r\n\r\n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data,\r\n            // ...something\r\n        }\r\n        //return this._router.navigate([\"/AddEmployee\"]);\r\n        this.params.onClick(params);\r\n\r\n    }\r\n\r\n\r\n}\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\r\\n        <hr />\\r\\n        <form [formGroup]=\\\"AddExpensesForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"ExpensesId\\\" formControlName=\\\"ExpensesId\\\" style=\\\"display:none\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Date </label>\\r\\n                    <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ExpenseDate\\\" formControlName=\\\"ExpenseDate\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.ExpenseDate.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.ExpenseDate.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.ExpenseDate.errors.required\\\">\\r\\n                            Date is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Expense Type</label>\\r\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"Category\\\" formControlName=\\\"Category\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.Category.errors }\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option value=\\\"Travel\\\">Travel</option>\\r\\n                        <option value=\\\"Cleaning\\\">Cleaning</option>\\r\\n                        <option value=\\\"Equipments\\\">Equipments</option>\\r\\n                        <option value=\\\"Others\\\">Others</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"submitted && fval.Category.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.Category.errors.required\\\">\\r\\n                            Expense Type is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                 \\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Sub Category</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"SubCategory\\\" formControlName=\\\"SubCategory\\\" maxlength=\\\"10\\\">\\r\\n                </div>\\r\\n                 \\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Amount</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Amount\\\" formControlName=\\\"Amount\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.Amount.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.Amount.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.Amount.errors.required\\\">\\r\\n                            Amount is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Description</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Description\\\" formControlName=\\\"Description\\\" maxlength=\\\"10\\\">\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";"," \r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EditBtnRendererComponent } from '../Renders/edit-btn-renderer.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-remaining-balance',\r\n  templateUrl: './remaining-balance.component.html',\r\n  styleUrls: ['./remaining-balance.component.css']\r\n})\r\nexport class RemainingBalanceComponent implements OnInit {\r\n\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\r\n\r\n        this.frameworkComponents = {\r\n            buttonRenderer: EditBtnRendererComponent,\r\n        }\r\n\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n\r\n            },\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Mobile',\r\n                field: 'MbrMob',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership Plan',\r\n                field: 'MbrShipName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            }, \r\n            {\r\n                headerName: 'Batch',\r\n                field: 'MbrBatch',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Last Paid Amount',\r\n                field: 'lastPaidAmt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Last Payment Date',\r\n                field: 'PaidDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Last Paid By',\r\n                field: 'LastPaidBy',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Remaining Balance',\r\n                field: 'RemBalance',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership StartDt',\r\n                field: 'MbrshipStartDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Membership EndDt',\r\n                field: 'MbrshipEndDt',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Payment of',\r\n                field: 'MembershipType',\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n\r\n                } \r\n            },\r\n\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n  }\r\n\r\n    onBtnClick(e) {\r\n        /*alert(e.rowData);   */\r\n        return this._router.navigate([\"/AddRemainingBalance\"], { queryParams: e.rowData });\r\n    }\r\n\r\n    onGridReady(params) {\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue; \r\n        this.gymServices.GetAllMemberShipPlanUser().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                \r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n                \r\n                dataValue = \"\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { isNull } from 'util';\r\nimport { GymService } from '../services/gym.service'; \r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n    isShown: boolean = true;\r\n    GymName: string;\r\n\r\n    constructor(private _router: Router, private gymServices: GymService) {\r\n\r\n    }\r\n    visible = false;\r\n\r\n    ngOnInit() {\r\n        this.isShown = JSON.parse(localStorage.getItem('isAdmin'));\r\n        this.GetGymProfile();\r\n    }\r\n\r\n  collapse() {\r\n      this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n      this.visible = !this.visible;\r\n    }\r\n\r\n    hide() { this.visible = false; }\r\n\r\n    show() { this.visible = true; }\r\n\r\n    logout() {\r\n         if (confirm(\"Are you sure to logout ?\")) {\r\n            localStorage.clear();\r\n            return this._router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    GetGymProfile() {\r\n        debugger;\r\n        this.gymServices.GetGymProfileDetails().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                 this.GymName = result.GymName;\r\n            }\r\n\r\n        }, error => alert(error.message))\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\r\\n\\r\\n        <form [formGroup]=\\\"AddPTForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrUserId\\\" formControlName=\\\"MbrUserId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"TrainerId\\\" formControlName=\\\"TrainerId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MembershipType\\\" formControlName=\\\"MembershipType\\\" style=\\\"display:none\\\" value=\\\"PT\\\">\\r\\n\\r\\n            </div>\\r\\n            <hr />\\r\\n\\r\\n            <div>\\r\\n\\r\\n                <div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <label>Select Member</label>\\r\\n                            <select formControlName=\\\"MbrId\\\" [(ngModel)]=\\\"MbrId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrId.errors }\\\">\\r\\n                                <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                                <option *ngFor=\\\"let mbr of _PTMembers\\\" value={{mbr.MbrId}}>\\r\\n                                    {{mbr.MbrName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"submitted && fval.MbrId.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"fval.MbrId.errors.required\\\">\\r\\n                                    Member is required.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <hr />\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>PT Traning Plan</label>\\r\\n                        <select formControlName=\\\"MbrShipId\\\" [(ngModel)]=\\\"MbrShipId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipId.errors }\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                            <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\r\\n                                {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && fval.MbrShipId.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.MbrShipId.errors.required\\\">\\r\\n                                Membership Plan is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Training Days</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPtDays\\\" formControlName=\\\"MbrPtDays\\\" disabled>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>PT Trainer Name</label>\\r\\n                        <select formControlName=\\\"TrainerId\\\" [(ngModel)]=\\\"TrainerId\\\" class=\\\"form-control\\\" (change)=\\\"showPTTrainerCharges($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.TrainerId.errors }\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                            <option *ngFor=\\\"let plan of _PTTrainer\\\" value={{plan.MbrId}}>\\r\\n                                {{plan.MbrName}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && fval.TrainerId.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.TrainerId.errors.required\\\">\\r\\n                                Trainer Name is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>PT Charges</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTChargesofTrainer\\\" formControlName=\\\"MbrPTChargesofTrainer\\\" disabled>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Paid Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PaidAmt\\\" [(ngModel)]=\\\"PaidAmt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidAmt.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && fval.PaidAmt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.PaidAmt.errors.required\\\">\\r\\n                                Paid amount is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid By</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PaidBy\\\" [(ngModel)]=\\\"PaidBy\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidBy.errors }\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                            <option value=\\\"Cash\\\">Cash</option>\\r\\n                            <option value=\\\"Card\\\">Card</option>\\r\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\r\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\r\\n\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && fval.PaidBy.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.PaidBy.errors.required\\\">\\r\\n                                Paid by is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidDt\\\" formControlName=\\\"PaidDt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidDt.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && fval.PaidDt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.PaidDt.errors.required\\\">\\r\\n                                Paid Date is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Start Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" (change)=\\\"onDateChange($event)\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> End Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>PT Sessions</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PTSessions\\\" [(ngModel)]=\\\"PTSessions\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Discription\\\" [(ngModel)]=\\\"Discription\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!--<input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">-->\\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\";","export default \"<body>\\r\\n  <!--<app-nav-menu></app-nav-menu>-->\\r\\n  <div class=\\\"container-fluid p-0\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n        <div style=\\\"margin-bottom:5px;\\\">\\r\\n            <button class=\\\"btn-info\\\" (click)=\\\"AddPT()\\\">Add Personal Training</button>\\r\\n        </div>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                         class=\\\"ag-theme-alpine\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                         [animateRows]=\\\"true\\\"\\r\\n                          [rowData]=\\\"rowData\\\"\\r\\n                         pagination=\\\"true\\\"\\r\\n                         paginationPageSize=\\\"20\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\";","export default \"<header>\\r\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"headerTitle\\\">\\r\\n                <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/Home']\\\">Welcome {{GymName}}</a>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n                 [ngClass]=\\\"{ show: isExpanded }\\\" style=\\\"width:70%\\\">\\r\\n                <ul class=\\\"navbar-nav mr-auto horizontal\\\">\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link\\\">Gym Details</a>\\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/MbrPlans']\\\">MemberShip Plans</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/MembershipHistory']\\\"> Attendend</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link \\\">Gym Member</a> \\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/Employee']\\\">Members</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/PTDetails']\\\">Personal Training</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/RenewalMembership']\\\">Renewal Memberships</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/RemainingBalance']\\\">Remaining Balance</a>\\r\\n                                <div>\\r\\n                                    <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/MembershipHistory']\\\"> Members History</a>\\r\\n                                </div>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link\\\">Account</a>\\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/GymExpenses']\\\">Expenses</a>\\r\\n                                <!--<div *ngIf=\\\"isShown\\\">-->\\r\\n                                    <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/SalaryDetails']\\\">Salary</a>\\r\\n                                <!--</div>-->\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/AllInvoices']\\\">All Invoices</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/AllReports']\\\">Reports</a>\\r\\n\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link\\\">Profile</a>\\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/GymProfile']\\\">Gym Profile</a> \\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/AppSupport']\\\">Support</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/SendMessage']\\\">Send Message</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n                 [ngClass]=\\\"{ show: isExpanded }\\\">\\r\\n                <ul class=\\\"navbar-nav mr-auto horizontal\\\" style=\\\"text-align:center\\\"> \\r\\n                    <li class=\\\"rightli\\\" [routerLinkActive]=\\\"['link-active']\\\" > \\r\\n                        <img   src=\\\"./assets/shutdown.png\\\" class=\\\"picture1\\\" (click)=\\\"logout()\\\" />\\r\\n\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { isNull } from 'util';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n    ForgotPasswordform: FormGroup;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router) { }\r\n\r\n    ngOnInit() {\r\n        /*this.nav.hide();*/\r\n\r\n        this.ForgotPasswordform = this.formBuilder.group({\r\n            EmailAdr: ['', Validators.required],\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        //return this._router.navigate([\"/Employee\"]);\r\n\r\n        this.gymServices.ForgotPassword(this.ForgotPasswordform.controls.EmailAdr.value).subscribe(result => {\r\n            if (!isNull(result.access_token)) { \r\n                return this._router.navigate([\"/Login\"]);\r\n            }\r\n\r\n        }, error => alert(error.message))\r\n    }\r\n}\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { DatePipe } from '@angular/common' \r\n\r\n@Component({\r\n    selector: 'app-all-invoices',\r\n    templateUrl: './all-invoices.component.html',\r\n    styleUrls: ['./all-invoices.component.css']\r\n})\r\nexport class AllInvoicesComponent implements OnInit {\r\n\r\n    AddInvoiceForm: FormGroup;\r\n    _InvoiceMbrs: GymMembersClass[] = [];\r\n    _InvoiceMbrsList: MbrShipPlanUserClass[] = [];\r\n     \r\n    IsSessionEnable: any;\r\n    InvoiceNumber: any;\r\n    GymName: any;\r\n    GymAddress: any;\r\n    GymContactNo: any;\r\n    PaidDt: any;\r\n    Serivice1: any;\r\n    PaidAmt: any;\r\n    InvoiceYear: any;\r\n    MbrId: any;\r\n    MbrUserId: any;\r\n    DispayInvoice: any = false;\r\n     \r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, private datePipe: DatePipe) { }\r\n\r\n    ngOnInit() {\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.AddInvoiceForm = this.formBuilder.group({\r\n\r\n            InvoiceNumber: [''],\r\n            MbrUGymNameserId: [''],\r\n            GymAddress: [''],\r\n            GymContactNo: [''],\r\n            PaidDt: [''],\r\n            Serivice1: [''],\r\n            PaidAmt: [''],\r\n            InvoiceYear: [''],\r\n            MbrId: [''],\r\n            MbrUserId: [''],\r\n        });\r\n\r\n        this.DispayInvoice = false;\r\n    }\r\n\r\n    ShowMembersByYear(Year) {\r\n        debugger;\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                result = result.filter(x => x.MbrType != \"Enquiry\");\r\n                this._InvoiceMbrs = result.filter(x => x.LastUpdatedDt == null ? \"\" : new Date(x.LastUpdatedDt).getFullYear() == Year);\r\n            }\r\n            else {\r\n                this._InvoiceMbrs = null;\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    GetInvoiceList(MbrId) {\r\n        this.MbrUserId = 'undefined'\r\n\r\n        this.gymServices.GetInvoiceList(MbrId).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this._InvoiceMbrsList = result;\r\n            }\r\n            else {\r\n                this._InvoiceMbrsList = null;\r\n\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    ShowInvoice(MbrUserId) {\r\n        this.gymServices.GetInvoice(MbrUserId).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this.InvoiceNumber = result.InvoiceId;\r\n                this.GymName = result.GymName;\r\n                this.GymAddress = result.Address;\r\n                this.GymContactNo = result.MobileNumber;\r\n                this.Serivice1 = result.MembershipType;\r\n                this.PaidAmt = result.PaidAmt; \r\n                this.PaidDt = result.PaidDt;\r\n                this.DispayInvoice = true;\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d5bS1leHBlbnNlcy9neW0tZXhwZW5zZXMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"AddInvoiceForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Select Year</label>\\r\\n                    <select formControlName=\\\"InvoiceYear\\\" (change)=\\\"ShowMembersByYear($event.target.value)\\\" [(ngModel)]=\\\"InvoiceYear\\\" class=\\\"form-control\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option value=\\\"2023\\\">2023</option>\\r\\n                        <option value=\\\"2022\\\">2022</option>\\r\\n                        <option value=\\\"2021\\\">2021</option>\\r\\n                        <option value=\\\"2020\\\">2020</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Select Member</label>\\r\\n                    <select formControlName=\\\"MbrId\\\" [(ngModel)]=\\\"MbrId\\\" class=\\\"form-control\\\" (change)=\\\"GetInvoiceList($event.target.value)\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option *ngFor=\\\"let mbr of _InvoiceMbrs\\\" value={{mbr.MbrId}}>\\r\\n                            {{mbr.MbrName}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                     \\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Select Invoice</label>\\r\\n                    <select formControlName=\\\"MbrUserId\\\" [(ngModel)]=\\\"MbrUserId\\\" class=\\\"form-control\\\" (change)=\\\"ShowInvoice($event.target.value)\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option *ngFor=\\\"let mbr of _InvoiceMbrsList\\\" value={{mbr.MbrUserId}}>\\r\\n                            {{mbr.MembershipType}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                   \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"invoice\\\"  *ngIf=\\\"DispayInvoice\\\">\\r\\n                <div class=\\\"header\\\">\\r\\n                    <h1>INVOICE</h1>\\r\\n                    <h2>Number: {{InvoiceNumber}}</h2>\\r\\n                </div>\\r\\n                <div class=\\\"client-details\\\">\\r\\n                    <h3>Client Details:</h3>\\r\\n                    <p>{{GymName}}</p>\\r\\n                    <p>{{GymAddress}}</p>\\r\\n                    <p>{{GymContactNo}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"invoice-details\\\">\\r\\n                    <h3>Invoice Details</h3>\\r\\n                    <p>Date: {{PaidDt}}</p> \\r\\n                </div>\\r\\n                <table class=\\\"invoice-table\\\">\\r\\n                    <tr>\\r\\n                        <th>Service Name</th>\\r\\n                        <th>Price</th>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td>{{Serivice1}}</td>\\r\\n                        <td>{{PaidAmt}}</td>\\r\\n                    </tr>\\r\\n                    <!-- Add additional services as needed -->\\r\\n                </table>\\r\\n                <div class=\\\"total\\\">\\r\\n                    <h3>Total: {{PaidAmt}}</h3>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core'; \r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { SalaryMasterComponent } from './salary-master/salary-master.component';\r\nimport { EmployeeComponent } from './employee/employee.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BtnCellRendererComponent } from './btn-cell-renderer/btn-cell-renderer.component';\r\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\r\nimport { MembershipPlanComponent } from './membership-plan/membership-plan.component';\r\nimport { GymBranchesComponent } from './gym-branches/gym-branches.component';\r\nimport { GymProfileComponent } from './gym-profile/gym-profile.component';\r\nimport { AddMembershipPlanComponent } from './add-membership-plan/add-membership-plan.component';\r\nimport { AddGymBranchesComponent } from './add-gym-branches/add-gym-branches.component';\r\nimport { PaymentsComponent } from './payments/payments.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GymExpensesComponent } from './gym-expenses/gym-expenses.component';\r\nimport { AddExpensesComponent } from './add-expenses/add-expenses.component';\r\nimport { RenewalMembershipComponent } from './renewal-membership/renewal-membership.component';\r\nimport { RemainingBalanceComponent } from './remaining-balance/remaining-balance.component';\r\nimport { MembershipHistoryComponent } from './membership-history/membership-history.component';\r\nimport { TrainersHistoryComponent } from './trainers-history/trainers-history.component';\r\nimport { RenewalPaymentsComponent } from './renewal-payments/renewal-payments.component';\r\nimport { AddRemainingBalanceComponent } from './add-remaining-balance/add-remaining-balance.component';\r\nimport { ConfirmEqualValidatorDirective } from './confirm-equal-validator.directive.ts.directive';\r\nimport { DatePipe } from '@angular/common';\r\nimport { PTDetailsComponent } from './ptdetails/ptdetails.component';\r\nimport { AddPTDetailsComponent } from './add-ptdetails/add-ptdetails.component'\r\nimport { BtnRendererComponent } from './Renders/btn-renderer.component';\r\nimport { EditBtnRendererComponent } from './Renders/edit-btn-renderer.component';\r\nimport { AllInvoicesComponent } from './all-invoices/all-invoices.component';\r\nimport { SupportComponent } from './support/support.component';\r\nimport { SendMessageComponent } from './send-message/send-message.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { AllReportsComponent } from './all-reports/all-reports.component';\r\nimport { AddSalaryComponent } from './add-salary/add-salary.component';  \r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\n\r\n  \r\n/*import { NgbModule } from '@ng-bootstrap/ng-bootstrap';*/\r\n \r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        CounterComponent,\r\n        FetchDataComponent,\r\n        SalaryMasterComponent,\r\n        EmployeeComponent,\r\n        LoginComponent,\r\n        BtnCellRendererComponent,\r\n        BtnRendererComponent,\r\n        EditBtnRendererComponent,\r\n        AddEmployeeComponent,\r\n        MembershipPlanComponent,\r\n        GymBranchesComponent,\r\n        GymProfileComponent,\r\n        AddMembershipPlanComponent,\r\n        AddGymBranchesComponent,\r\n        PaymentsComponent,\r\n        GymExpensesComponent,\r\n        AddExpensesComponent,\r\n        RenewalMembershipComponent,\r\n        RemainingBalanceComponent,\r\n        MembershipHistoryComponent,\r\n        TrainersHistoryComponent,\r\n        RenewalPaymentsComponent,\r\n        AddRemainingBalanceComponent,\r\n        ConfirmEqualValidatorDirective,\r\n        PTDetailsComponent,\r\n        AddPTDetailsComponent,\r\n        AllInvoicesComponent,\r\n        SupportComponent,\r\n        SendMessageComponent,\r\n        AllReportsComponent,\r\n        AddSalaryComponent, \r\n        ForgotPasswordComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        BrowserAnimationsModule,\r\n        NgxChartsModule,\r\n        ReactiveFormsModule, \r\n        //NgbModule,\r\n        AgGridModule.withComponents([BtnCellRendererComponent, BtnRendererComponent, EditBtnRendererComponent]),\r\n        RouterModule.forRoot([\r\n            { path: '', component: LoginComponent },\r\n            { path: 'Home', component: HomeComponent },\r\n            { path: 'Employee', component: EmployeeComponent },\r\n            { path: 'AddEmployee', component: AddEmployeeComponent },\r\n            { path: 'MbrPlans', component: MembershipPlanComponent },\r\n            { path: 'AddMbrPlans', component: AddMembershipPlanComponent },\r\n            { path: 'GymBranches', component: GymBranchesComponent },\r\n            { path: 'AddBranches', component: AddGymBranchesComponent },\r\n            { path: 'GymProfile', component: GymProfileComponent },\r\n            { path: 'Payments', component: PaymentsComponent },\r\n            { path: 'GymExpenses', component: GymExpensesComponent },\r\n            { path: 'AddExpenses', component: AddExpensesComponent },\r\n            { path: 'RenewalMembership', component: RenewalMembershipComponent },\r\n            { path: 'RenewalPayments', component: RenewalPaymentsComponent },\r\n            { path: 'RemainingBalance', component: RemainingBalanceComponent },\r\n            { path: 'AddRemainingBalance', component: AddRemainingBalanceComponent },\r\n            { path: 'MembershipHistory', component: MembershipHistoryComponent },\r\n            { path: 'PTDetails', component: PTDetailsComponent },\r\n            { path: 'AddPTDetails', component: AddPTDetailsComponent },\r\n            { path: 'AllInvoices', component: AllInvoicesComponent },\r\n            { path: 'AppSupport', component: SupportComponent },\r\n            { path: 'SendMessage', component: SendMessageComponent },\r\n            { path: 'AllReports', component: AllReportsComponent },\r\n            { path: 'AddSalary', component: AddSalaryComponent },\r\n            { path: 'SalaryDetails', component: SalaryMasterComponent },\r\n            { path: 'ForgotPassword', component: ForgotPasswordComponent },\r\n\r\n             \r\n        ]),\r\n        NgMultiSelectDropDownModule.forRoot()\r\n\r\n        \r\n\r\n    ],\r\n    providers: [DatePipe],\r\n    entryComponents: [BtnCellRendererComponent, BtnRendererComponent, EditBtnRendererComponent],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }      \r\n","export default \"a.navbar-brand {\\r\\n   \\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n.container{\\r\\n    margin-left:20px !important;\\r\\n    max-width:100% !important;\\r\\n\\r\\n}\\r\\n\\r\\n.headerTitle\\r\\n{\\r\\n    margin-right:110px;\\r\\n    margin-left:20px;\\r\\n    font-weight:bold;\\r\\n    width:15%;\\r\\n}\\r\\n\\r\\nul li ul li a:hover {\\r\\n    background-color: #87AFC7 !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLHlCQUF5Qjs7QUFFN0I7O0FBQ0E7O0lBRUksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsU0FBUztBQUNiOztBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICAgXHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIGh0bWwge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gIH1cclxufVxyXG5cclxuLmJveC1zaGFkb3cge1xyXG4gIGJveC1zaGFkb3c6IDAgLjI1cmVtIC43NXJlbSByZ2JhKDAsIDAsIDAsIC4wNSk7XHJcbn1cclxuXHJcbi5jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tbGVmdDoyMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBtYXgtd2lkdGg6MTAwJSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG4uaGVhZGVyVGl0bGVcclxue1xyXG4gICAgbWFyZ2luLXJpZ2h0OjExMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6MjBweDtcclxuICAgIGZvbnQtd2VpZ2h0OmJvbGQ7XHJcbiAgICB3aWR0aDoxNSU7XHJcbn1cclxudWwgbGkgdWwgbGkgYTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODdBRkM3ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnNoaXAtcGxhbi9tZW1iZXJzaGlwLXBsYW4uY29tcG9uZW50LmNzcyJ9 */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n        <div style=\\\"margin-bottom:5px\\\">\\r\\n            <button class=\\\"btn-info\\\" (click)=\\\"onBtnClick()\\\">Add MemberShip Plan</button>\\r\\n        </div>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                         class=\\\"ag-theme-alpine\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                         [animateRows]=\\\"true\\\"\\r\\n                         pagination=\\\"true\\\"\\r\\n                         [rowData]=\\\"rowData\\\"\\r\\n                         paginationPageSize=\\\"20\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\r\\n        <form [formGroup]=\\\"AddSalaryForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div>\\r\\n                <hr />\\r\\n                <div class=\\\"form-row \\\">\\r\\n                    <h5 class=\\\"mb-2\\\">Add Salary</h5>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <label> Member Name </label>\\r\\n                            <select formControlName=\\\"MbrId\\\" [(ngModel)]=\\\"MbrId\\\" class=\\\"form-control\\\" (change)=\\\"ShowDesignations($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrId.errors }\\\">\\r\\n                                <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                                <option *ngFor=\\\"let mbr of _SalMembers\\\" value={{mbr.MbrId}}>\\r\\n                                    {{mbr.MbrName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"submitted && fval.MbrId.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"fval.MbrId.errors.required\\\">\\r\\n                                    Member is required.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Designation</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrDesignation\\\" formControlName=\\\"MbrDesignation\\\" disabled> \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Salary Motnh</label>\\r\\n                        <select formControlName=\\\"SalMonth\\\" [(ngModel)]=\\\"SalMonth\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SalMonth.errors }\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                            <option value=\\\"Jan\\\">January</option>\\r\\n                            <option value=\\\"Feb\\\">Febrary</option>\\r\\n                            <option value=\\\"Mar\\\">March</option>\\r\\n                            <option value=\\\"Apr\\\">April</option>\\r\\n                            <option value=\\\"May\\\">May</option>\\r\\n                            <option value=\\\"Jun\\\">Jun</option>\\r\\n                            <option value=\\\"Jul\\\">July</option>\\r\\n                            <option value=\\\"Aug\\\">Augst</option>\\r\\n                            <option value=\\\"Sep\\\">September</option>\\r\\n                            <option value=\\\"Oct\\\">October</option>\\r\\n                            <option value=\\\"Nov\\\">November</option>\\r\\n                            <option value=\\\"Dec\\\">December</option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && fval.SalMonth.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.SalMonth.errors.required\\\">\\r\\n                                Salary Month is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"SalPaidDt\\\" formControlName=\\\"SalPaidDt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SalPaidDt.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && fval.SalPaidDt.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.SalPaidDt.errors.required\\\">\\r\\n                                Paid Date sis required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Total Salary</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"TotalSal\\\" formControlName=\\\"TotalSal\\\" disabled >\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Paid Salary</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidSal\\\" formControlName=\\\"PaidSal\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidSal.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && fval.PaidSal.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.PaidSal.errors.required\\\">\\r\\n                                Paid Salary is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Total Leaves</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"TotalLeaves\\\" formControlName=\\\"TotalLeaves\\\" value=\\\"0\\\">\\r\\n                        \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Comment</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Comment\\\" formControlName=\\\"Comment\\\" >\\r\\n                        \\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!--<input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">-->\\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"p-2\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Branch</h4>\\r\\n    <hr />\\r\\n\\r\\n    <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n            <label for=\\\"name\\\">Branch Name</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpName\\\" class=\\\"form-control\\\" formControlName=\\\"EmpName\\\" name=\\\"EmpName\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n            <label> Contact Person Name</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpMob\\\" class=\\\"form-control\\\" formControlName=\\\"EmpMob\\\" name=\\\"EmpMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n            <label> Contact Number</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpMob\\\" class=\\\"form-control\\\" formControlName=\\\"EmpMob\\\" name=\\\"EmpMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-row\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n            <label> Address </label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpMob\\\" class=\\\"form-control\\\" formControlName=\\\"EmpMob\\\" name=\\\"EmpMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n            <label> City</label>\\r\\n            <select [(ngModel)]=\\\"EmpCity\\\" formControlName=\\\"EmpCity\\\" name=\\\"EmpCity\\\" class=\\\"form-control\\\" (change)=\\\"filterForeCasts($event.target.value)\\\">\\r\\n                <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                <option value=\\\"Pune\\\" selected>Pune</option>\\r\\n                <option value=\\\"Mumbai\\\">Mumbai</option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n            <label> State</label>\\r\\n            <select [(ngModel)]=\\\"EmpState\\\" formControlName=\\\"EmpState\\\" name=\\\"EmpState\\\" class=\\\"form-control\\\" (change)=\\\"filterForeCasts($event.target.value)\\\">\\r\\n                <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                <option value=\\\"Maharastra\\\" selected>Maharastra</option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group col-md-4\\\">\\r\\n            <label> Pincode</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpPincode\\\" class=\\\"form-control\\\" formControlName=\\\"EmpPincode\\\" name=\\\"EmpPincode\\\" (keypress)=\\\"numberOnly($event)\\\">\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">\\r\\n    <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Cancel\\\">\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1wdGRldGFpbHMvYWRkLXB0ZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n        <div style=\\\"margin-bottom:5px;\\\">\\r\\n            <button class=\\\"btn-info\\\" (click)=\\\"AddEmployee()\\\">Add Member</button>\\r\\n        </div>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                         class=\\\"ag-theme-alpine\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                         [animateRows]=\\\"true\\\"\\r\\n                         [rowData]=\\\"rowData\\\"\\r\\n                         pagination=\\\"true\\\"\\r\\n                         paginationPageSize=\\\"20\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<p>trainers-history works!</p>\\r\\n\";","export default \".invoice {\\r\\n    font-family: Arial, sans-serif;\\r\\n    width: 800px;\\r\\n    margin: 0 auto;\\r\\n    text-align: center;\\r\\n    border:2px solid black;\\r\\n}\\r\\n\\r\\n.header {\\r\\n    background-color: lightgray;\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.header h1 {\\r\\n        margin: 0;\\r\\n    }\\r\\n\\r\\n.header h2 {\\r\\n        margin: 0;\\r\\n        font-size: 14px;\\r\\n        color:black;\\r\\n    }\\r\\n\\r\\n.client-details {\\r\\n    margin: 20px 0;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.client-details h3 {\\r\\n        margin: 5px ;\\r\\n    }\\r\\n\\r\\n.client-details p {\\r\\n        margin: 5px;\\r\\n    }\\r\\n\\r\\n.invoice-details {\\r\\n    margin: 20px 0;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.invoice-details h3 {\\r\\n        margin: 5px;\\r\\n\\r\\n    }\\r\\n\\r\\n.invoice-details p {\\r\\n        margin: 5px;\\r\\n    }\\r\\n\\r\\n.invoice-table {\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.invoice-table th,\\r\\n    .invoice-table td {\\r\\n        border: 1px solid black;\\r\\n        padding: 10px;\\r\\n    }\\r\\n\\r\\n.invoice-table th {\\r\\n        background-color: lightgray;\\r\\n        text-align: left;\\r\\n    }\\r\\n\\r\\n.total {\\r\\n    margin: 20px 0;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.total h3 {\\r\\n        margin: 5;\\r\\n    }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxsLWludm9pY2VzL2FsbC1pbnZvaWNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCO0lBQzlCLFlBQVk7SUFDWixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLDJCQUEyQjtJQUMzQixhQUFhO0lBQ2Isa0JBQWtCO0FBQ3RCOztBQUVJO1FBQ0ksU0FBUztJQUNiOztBQUVBO1FBQ0ksU0FBUztRQUNULGVBQWU7UUFDZixXQUFXO0lBQ2Y7O0FBRUo7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCOztBQUVJO1FBQ0ksWUFBWTtJQUNoQjs7QUFFQTtRQUNJLFdBQVc7SUFDZjs7QUFFSjtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7QUFDckI7O0FBRUk7UUFDSSxXQUFXOztJQUVmOztBQUNBO1FBQ0ksV0FBVztJQUNmOztBQUVKO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtBQUM3Qjs7QUFFSTs7UUFFSSx1QkFBdUI7UUFDdkIsYUFBYTtJQUNqQjs7QUFFQTtRQUNJLDJCQUEyQjtRQUMzQixnQkFBZ0I7SUFDcEI7O0FBRUo7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0FBQ3JCOztBQUVJO1FBQ0ksU0FBUztJQUNiIiwiZmlsZSI6InNyYy9hcHAvYWxsLWludm9pY2VzL2FsbC1pbnZvaWNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmludm9pY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gICAgd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIGJsYWNrO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiAgICAuaGVhZGVyIGgxIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmhlYWRlciBoMiB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBjb2xvcjpibGFjaztcclxuICAgIH1cclxuXHJcbi5jbGllbnQtZGV0YWlscyB7XHJcbiAgICBtYXJnaW46IDIwcHggMDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbiAgICAuY2xpZW50LWRldGFpbHMgaDMge1xyXG4gICAgICAgIG1hcmdpbjogNXB4IDtcclxuICAgIH1cclxuXHJcbiAgICAuY2xpZW50LWRldGFpbHMgcCB7XHJcbiAgICAgICAgbWFyZ2luOiA1cHg7XHJcbiAgICB9XHJcblxyXG4uaW52b2ljZS1kZXRhaWxzIHtcclxuICAgIG1hcmdpbjogMjBweCAwO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn1cclxuXHJcbiAgICAuaW52b2ljZS1kZXRhaWxzIGgzIHtcclxuICAgICAgICBtYXJnaW46IDVweDtcclxuXHJcbiAgICB9XHJcbiAgICAuaW52b2ljZS1kZXRhaWxzIHAge1xyXG4gICAgICAgIG1hcmdpbjogNXB4O1xyXG4gICAgfVxyXG5cclxuLmludm9pY2UtdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG59XHJcblxyXG4gICAgLmludm9pY2UtdGFibGUgdGgsXHJcbiAgICAuaW52b2ljZS10YWJsZSB0ZCB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAuaW52b2ljZS10YWJsZSB0aCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcblxyXG4udG90YWwge1xyXG4gICAgbWFyZ2luOiAyMHB4IDA7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuICAgIC50b3RhbCBoMyB7XHJcbiAgICAgICAgbWFyZ2luOiA1O1xyXG4gICAgfVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n\r\n@Component({\r\n    selector: 'app-membership-plan',\r\n    templateUrl: './membership-plan.component.html',\r\n    styleUrls: ['./membership-plan.component.css']\r\n})\r\nexport class MembershipPlanComponent implements OnInit {\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n\r\n    constructor(private gymServices: GymService, private _router: Router) {\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Name',\r\n                field: 'MbrShipName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Amount',\r\n                field: 'MbrShipAmt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Days',\r\n                field: 'MbrShipDurationInDays',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Start Date',\r\n                field: 'StartDt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'End Date',\r\n                field: 'EndDt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Description',\r\n                field: 'Description',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true\r\n            },\r\n            {\r\n                headerName: 'Active/In-Active',\r\n                field: 'Active',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                valueGetter: function (params) { \r\n                    if (params.data.Active == true) {\r\n                        return \"Active\"\r\n                    } else {\r\n                        return \"In-Active\"\r\n                    } \r\n                },\r\n                filter: 'agTextColumnFilter'\r\n            },\r\n            {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    OnDelete: this.OnDeletePlan.bind(this),\r\n\r\n                }\r\n\r\n            },\r\n\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n    }\r\n\r\n    onBtnClick(e) {\r\n        if (e == undefined)\r\n            return this._router.navigate([\"/AddMbrPlans\"]);\r\n        else\r\n            return this._router.navigate([\"/AddMbrPlans\"], { queryParams: e.rowData });\r\n    }\r\n\r\n    onGridReady(params) {\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue;\r\n        this.gymServices.GetAllMemberShipPlan().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n                dataValue = \"No Data Available\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    OnDeletePlan(mbrId) {\r\n        this.gymServices.DeletePlan(mbrId).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                alert('Member Deleted Successfully !');\r\n                return this._router.navigate([\"/Employee\"]);\r\n            }\r\n            else {\r\n                alert(\"Error !\");\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1yZW1haW5pbmctYmFsYW5jZS9hZGQtcmVtYWluaW5nLWJhbGFuY2UuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\r\\n        <hr />\\r\\n\\r\\n        <form [formGroup]=\\\"AddEmpForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrUserId\\\" formControlName=\\\"MbrUserId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"sal_Id\\\" formControlName=\\\"sal_Id\\\" style=\\\"display:none\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label> Members Type</label>\\r\\n                    <select class=\\\"form-control\\\" (change)=\\\"filterForeCasts($event.target.value)\\\" [(ngModel)]=\\\"MbrTypeddl\\\" formControlName=\\\"MbrType\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrType.errors }\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                        <option value=\\\"Enquiry\\\">Enquiry</option>\\r\\n                        <option value=\\\"GymMember\\\">Gym Member</option>\\r\\n                        <option value=\\\"Trainer\\\">Trainer</option>\\r\\n                        <option value=\\\"FloorManager\\\">Floor Manager</option>\\r\\n                        <option value=\\\"Receptionist\\\">Receptionist</option>\\r\\n                        <option value=\\\"officeboy\\\">office boy</option>\\r\\n                        <!--<option value=\\\"PT\\\">PT</option>-->\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"submitted && fval.MbrType.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.MbrType.errors.required\\\">\\r\\n                            Members Type is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"MbrTypeddl != 'PT'\\\">\\r\\n                <hr />\\r\\n                <div class=\\\"form-row \\\">\\r\\n                    <h5 class=\\\"mb-2\\\">Personal Information</h5>\\r\\n                </div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label for=\\\"name\\\"> Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrName\\\" formControlName=\\\"MbrName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrName.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && fval.MbrName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.MbrName.errors.required\\\">\\r\\n                                Full Name is required and must be a valid name\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Gender</label>\\r\\n\\r\\n                        <select formControlName=\\\"MbrGender\\\" [(ngModel)]=\\\"MbrGender\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrGender.errors }\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                            <option value=\\\"Male\\\">Male</option>\\r\\n                            <option value=\\\"FeMale\\\">FeMale</option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"submitted && fval.MbrGender.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.MbrGender.errors.required\\\">\\r\\n                                Gender is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> DOB</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrDOB\\\" formControlName=\\\"MbrDOB\\\" (change)=\\\"onDOBSelect($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Mobile</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrMob\\\" formControlName=\\\"MbrMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrMob.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && fval.MbrMob.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.MbrMob.errors.required || fval.MbrMob.errors.maxlength || fval.MbrMob.errors.minlength\\\">\\r\\n                                Mobile No is required\\r\\n                            </div> \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Mobile 2</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrMob2\\\" formControlName=\\\"MbrMob2\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Email</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrEmail\\\" formControlName=\\\"MbrEmail\\\">\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Address</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrAddr\\\" formControlName=\\\"MbrAddr\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> City</label>\\r\\n                        <select formControlName=\\\"MbrCity\\\" [(ngModel)]=\\\"MbrCityddl\\\" class=\\\"form-control\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                            <option value=\\\"Pune\\\">Pune</option>\\r\\n                            <option value=\\\"Mumbai\\\">Mumbai</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> State</label>\\r\\n                        <select formControlName=\\\"MbrState\\\" [(ngModel)]=\\\"MbrStateddl\\\" class=\\\"form-control\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                            <option value=\\\"Maharastra\\\">Maharastra</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Pincode</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPincode\\\" [(ngModel)]=\\\"MbrPincode\\\" (keypress)=\\\"numberOnly($event)\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Enquiry Date </label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrDOE\\\" formControlName=\\\"MbrDOE\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"GeneralDesc\\\" [(ngModel)]=\\\"GeneralDesc\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <div *ngIf=\\\"MbrTypeddl == 'Trainer' || MbrTypeddl == 'FloorManager'\\\">\\r\\n                            <label> PT Charges </label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPTCharges\\\" [(ngModel)]=\\\"MbrPTCharges\\\" (keypress)=\\\"numberOnly($event)\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div *ngIf=\\\"MbrTypeddl != 'GymMember' && MbrTypeddl != 'PT' && MbrTypeddl != 'Enquiry'\\\">\\r\\n                <hr />\\r\\n                <div class=\\\"form-row \\\">\\r\\n                    <h5 class=\\\"mb-2\\\">Salary Information</h5>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Salary</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrSalary\\\" [(ngModel)]=\\\"MbrSalary\\\" (keypress)=\\\"numberOnly($event)\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SalDesc\\\" [(ngModel)]=\\\"SalDesc\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"MbrTypeddl == 'Trainer' || MbrTypeddl == 'FloorManager'\\\">\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <h5 class=\\\"mb-2\\\">Certification Details</h5>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Certification Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrCertification\\\" formControlName=\\\"MbrCertification\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Completion Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrCertificationDt\\\" formControlName=\\\"MbrCertificationDt\\\" name=\\\"MbrshipStartDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"MbrTypeddl == 'GymMember' ||MbrTypeddl == 'Trainer' || MbrTypeddl == 'FloorManager'\\\">\\r\\n                <hr />\\r\\n                <div class=\\\"form-row \\\">\\r\\n                    <h5 class=\\\"mb-2\\\">MemberShip Plan</h5>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Plan Name</label>\\r\\n\\r\\n                        <select formControlName=\\\"MbrPlans\\\" [(ngModel)]=\\\"MbrPlansddl\\\" class=\\\"form-control\\\" (change)=\\\"showMemberShipPlan($event.target.value)\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                            <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\r\\n                                {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\r\\n                            </option>\\r\\n                        </select>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipAmt\\\" formControlName=\\\"MbrshipAmt\\\" disabled>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Paid Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrshipPaidAmt\\\" [(ngModel)]=\\\"MbrshipPaidAmt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Remaining Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"RemBalance\\\" [(ngModel)]=\\\"RemBalance\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>MemberShip Days</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipDays\\\" formControlName=\\\"MbrshipDays\\\" disabled>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Start Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" (change)=\\\"onDateChange($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> End Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid By</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MbrPaidBy\\\" [(ngModel)]=\\\"MbrPaidByddl\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                            <option value=\\\"Cash\\\">Cash</option>\\r\\n                            <option value=\\\"Card\\\">Card</option>\\r\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\r\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\r\\n\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" (change)=\\\"onDateChange($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidDt\\\" formControlName=\\\"PaidDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrshipDesc\\\" [(ngModel)]=\\\"MbrshipDesc\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Batch</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MbrBatch\\\" [(ngModel)]=\\\"MbrBatch\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                            <option value=\\\"Morning\\\">Morning</option>\\r\\n                            <option value=\\\"Afternoon\\\">Afternoon</option>\\r\\n                            <option value=\\\"Evening\\\">Evening</option>\\r\\n\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"MbrTypeddl == 'GymMember' || MbrTypeddl == 'PT'\\\" style=\\\"display:none\\\">\\r\\n                <!--hide for time bin-->\\r\\n                <hr />\\r\\n                <div class=\\\"form-row \\\">\\r\\n                    <h5 class=\\\"mb-2\\\">Personal Training Plan</h5>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"MbrTypeddl == 'PT'\\\">\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <label>Select Member</label>\\r\\n                            <select formControlName=\\\"PtMemberId\\\" [(ngModel)]=\\\"PtMemberId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\">\\r\\n                                <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                                <option *ngFor=\\\"let mbr of _PTMembers\\\" value={{mbr.MbrId}}>\\r\\n                                    {{mbr.MbrName}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>PT Traning Plan</label>\\r\\n                        <select formControlName=\\\"MbrPTPlanId\\\" [(ngModel)]=\\\"MbrPTPlanId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                            <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\r\\n                                {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\r\\n                            </option>\\r\\n                        </select>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Training Days</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPtDays\\\" formControlName=\\\"MbrPtDays\\\" disabled>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>PT Trainer Name</label>\\r\\n                        <select formControlName=\\\"MbrPtTrainerId\\\" [(ngModel)]=\\\"MbrPtTrainerId\\\" class=\\\"form-control\\\" (change)=\\\"showPTTrainerCharges($event.target.value)\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                            <option *ngFor=\\\"let plan of _PTTrainer\\\" value={{plan.MbrId}}>\\r\\n                                {{plan.MbrName}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>PT Charges</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTChargesofTrainer\\\" formControlName=\\\"MbrPTChargesofTrainer\\\" disabled>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Paid Amount</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPTAmt\\\" [(ngModel)]=\\\"MbrPTAmt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Paid By</label>\\r\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MbrPTAmtPaidBy\\\" [(ngModel)]=\\\"MbrPTAmtPaidBy\\\">\\r\\n                            <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                            <option value=\\\"Cash\\\">Cash</option>\\r\\n                            <option value=\\\"Card\\\">Card</option>\\r\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\r\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\r\\n\\r\\n                        </select>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> Start Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTStartDt\\\" formControlName=\\\"MbrPTStartDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label> End Date</label>\\r\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTEndDt\\\" formControlName=\\\"MbrPTEndDt\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Description</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPTDesc\\\" [(ngModel)]=\\\"MbrPTDesc\\\">\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!--<input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">-->\\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\n\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { DatePipe } from '@angular/common'\r\n\r\n\r\n@Component({\r\n    selector: 'app-renewal-payments',\r\n    templateUrl: './renewal-payments.component.html',\r\n    styleUrls: ['./renewal-payments.component.css']\r\n})\r\nexport class RenewalPaymentsComponent implements OnInit {\r\n\r\n    RenewalPaymentForm: FormGroup;\r\n    _MbrPlans: MbrShipPlanClass[] = [];\r\n\r\n    MbrId: string;\r\n    MbrName: string;\r\n    MbrBatch: string;\r\n    MbrShipId: string;\r\n    MbrShipCharges: string;\r\n    Days: string;\r\n    PaidAmt: string;\r\n    PaidBy: string\r\n    PaidDt: string;\r\n    MbrshipStartDt: string;\r\n    MbrshipEndDt: string;\r\n    MembershipType: string;\r\n    submitted = false;\r\n    date: Date;\r\n    IsSessionEnable : boolean;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute, public datepipe: DatePipe) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.GetAllMemberShipPlan();\r\n\r\n        this.RenewalPaymentForm = this.formBuilder.group({\r\n\r\n            MbrId: ['', Validators.required],\r\n            MbrName: ['', Validators.required],\r\n            MbrBatch: ['', Validators.required],\r\n            MbrShipId: ['', Validators.required],\r\n            MbrShipCharges: ['', Validators.required],\r\n            Days: ['', Validators.required],\r\n            PaidAmt: ['', Validators.required],\r\n            PaidBy: ['', Validators.required],\r\n            PaidDt: ['', Validators.required],\r\n            MbrshipStartDt: ['', Validators.required],\r\n            MbrshipEndDt: ['', Validators.required],\r\n            MembershipType: [''],\r\n\r\n\r\n\r\n        });\r\n\r\n        this.route.queryParams.subscribe((params) => {\r\n            debugger;\r\n            if (params != null && params.MbrName != undefined) { \r\n                this.MbrId = params.MbrId;\r\n                this.MbrName = params.MbrName;\r\n                this.MbrBatch = params.MbrBatch;\r\n                this.MbrName = params.MbrName;\r\n                 \r\n            }\r\n        })\r\n    }\r\n\r\n    onDateChange(value) {\r\n        this.date = new Date(value.srcElement.value);\r\n        this.date.setDate(this.date.getDate() + +this.Days);\r\n        this.MbrshipEndDt = this.datepipe.transform(this.date, 'yyyy-MM-dd');\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        if (!this.RenewalPaymentForm.invalid) {\r\n            this.RenewalPaymentForm.value[\"MembershipType\"] = \"GymMembership\";\r\n            this.gymServices.AddPTMembers(this.RenewalPaymentForm.value).subscribe(result => {\r\n                if (!isNull(result)) {\r\n                    alert(result);\r\n                    return this._router.navigate([\"/RenewalMembership\"]);\r\n                }\r\n                else {\r\n                    alert(\"Incorrect Creiditials\");\r\n                }\r\n            }, error => alert(error.message))\r\n        }\r\n    }\r\n    onCancel() {\r\n        return this._router.navigate([\"/RenewalMembership\"]);\r\n    }\r\n\r\n    get fval() {\r\n        return this.RenewalPaymentForm.controls;\r\n    }\r\n\r\n    GetAllMemberShipPlan() {\r\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\r\n            this._MbrPlans = res;\r\n            // data contains actual array of users\r\n        },\r\n            error => alert(error.message));\r\n    }\r\n\r\n    showMemberShipPlan(value) {\r\n\r\n        this.MbrShipCharges = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipAmt.toString();\r\n        this.Days = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\r\n\r\n    }\r\n\r\n    numberOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQtbWVzc2FnZS9zZW5kLW1lc3NhZ2UuY29tcG9uZW50LmNzcyJ9 */\";","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appConfirmEqualValidator]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: ConfirmEqualValidatorDirective,\r\n        multi: true\r\n    }]\r\n})\r\n\r\nexport class ConfirmEqualValidatorDirective implements Validator {\r\n    @Input() appConfirmEqualValidator: string;\r\n\r\n    validate(control: AbstractControl): { [key: string]: any } | null {\r\n        const controlToCompare = control.parent.get(this.appConfirmEqualValidator);\r\n        if (controlToCompare && controlToCompare.value !== control.value) {\r\n            return { 'notEqual': true }\r\n        }\r\n        return null;\r\n    }\r\n}","export default \"<div class=\\\"bg-image\\\">\\r\\n    <div class=\\\"loginFormDesign d-flex align-items-center justify-content-center \\\">\\r\\n        <div class=\\\"wrapper fadeInDown m-0\\\">\\r\\n            <div class=\\\"card m-0\\\">\\r\\n                <form [formGroup]=\\\"loginform\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\" class=\\\"d-flex flex-column\\\">\\r\\n                    <div class=\\\"h3 text-center text-white\\\">Login</div>\\r\\n                    <div class=\\\"d-flex align-items-center input-field my-3 mb-4\\\">\\r\\n                        <span class=\\\"far fa-user p-2\\\"></span>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"MobileNo\\\" [(ngModel)]=\\\"MobileNo\\\"  placeholder=\\\"Mobile Number\\\" required class=\\\"form-control\\\" maxlength=\\\"10\\\" (keypress)=\\\"numberOnly($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MobileNo.errors }\\\">\\r\\n                        <div *ngIf=\\\"submitted && fval.MobileNo.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.MobileNo.errors.required || fval.MobileNo.errors.maxlength || fval.MobileNo.errors.minlength\\\">\\r\\n                                Mobile No is required\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"d-flex align-items-center input-field mb-4\\\">\\r\\n                        <span class=\\\"fas fa-lock p-2\\\"></span>\\r\\n                        <input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\" required class=\\\"form-control\\\" id=\\\"pwd\\\" maxlength=\\\"5\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"d-sm-flex align-items-sm-center justify-content-sm-between\\\">\\r\\n                        <div class=\\\"d-flex align-items-center\\\"> <!--<label class=\\\"option\\\"><input type=\\\"checkbox\\\" checked> <span class=\\\"checkmark\\\"></span> </label>--> </div>\\r\\n                        <div class=\\\"mt-sm-0 mt-3\\\"><a href=\\\"#\\\">Forgot password?</a></div>\\r\\n                    </div>\\r\\n                    <div> <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary\\\"> </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { isNull } from 'util';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n    selector: 'app-salary-master',\r\n    templateUrl: './salary-master.component.html',\r\n    styleUrls: ['./salary-master.component.css']\r\n})\r\nexport class SalaryMasterComponent implements OnInit {\r\n\r\n    SalaryDetailsForm: FormGroup;\r\n\r\n    private gridApi;\r\n    private gridColumnApi;\r\n    private columnDefs;\r\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n    chkMbr: any;\r\n    private rowData;\r\n    _Members: GymMembersClass[] = [];\r\n    isShown: boolean = false; // hidden by default\r\n    MemberId: string;\r\n\r\n\r\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute, public formBuilder: FormBuilder) {\r\n        this.frameworkComponents = {\r\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\r\n        this.columnDefs = [\r\n            {\r\n                headerName: 'Id',\r\n                field: 'MbrId',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n\r\n            },\r\n            {\r\n                headerName: 'SalMst_Id',\r\n                field: 'SalMst_Id',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                hide: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'MbrName',\r\n                field: 'MbrName',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'MbrType',\r\n                field: 'MbrType',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'SalMonth',\r\n                field: 'SalMonth',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'SalPaidDt',\r\n                field: 'SalPaidDt',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'TotalSal',\r\n                field: 'TotalSal',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'PaidSal',\r\n                field: 'PaidSal',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'TotalLeaves',\r\n                field: 'TotalLeaves',\r\n                Filter: true,\r\n                enableSorting: true,\r\n                sortable: true,\r\n                filter: 'agTextColumnFilter'\r\n\r\n            },\r\n            {\r\n                headerName: 'Comment',\r\n                field: 'Comment',\r\n                filter: 'agTextColumnFilter'\r\n\r\n\r\n            },\r\n            {\r\n                headerName: 'Action',\r\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    OnDelete: this.OnDeleteSalaryMst.bind(this),\r\n\r\n                }\r\n\r\n            },\r\n\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.SalaryDetailsForm = this.formBuilder.group({\r\n\r\n            chkMbr: ['',],\r\n            MemberId: ['',],\r\n\r\n\r\n        });\r\n    }\r\n\r\n    AddSalary() {\r\n        return this._router.navigate([\"/AddSalary\"]);\r\n    }\r\n\r\n    onBtnClick(e) {\r\n        /*alert(e.rowData);   */\r\n        return this._router.navigate([\"/AddSalary\"], { queryParams: e.rowData });\r\n    }\r\n\r\n\r\n    onGridReady(params) {\r\n        debugger;\r\n        params.api.sizeColumnsToFit();\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        let dataValue;\r\n        this.gymServices.GetSalaryMstList().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                dataValue = result;\r\n                params.api.setRowData(dataValue);\r\n            }\r\n            else {\r\n\r\n                dataValue = \"\";\r\n                params.api.setRowData(dataValue);\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    OnDeleteSalaryMst(data) {\r\n        this.gymServices.DeleteMembersSalaryMst(data.SalMst_Id).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                alert('Deleted Successfully !');\r\n                this.gymServices.GetSalaryMstList().subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        this.rowData = result;\r\n                    }\r\n                    else {\r\n\r\n                        this.rowData = \"\";\r\n\r\n                    }\r\n                }, error => alert(error.message))\r\n            }\r\n            else {\r\n                alert(\"Error !\");\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    changed(evt) {\r\n        this.rowData = null;\r\n\r\n        if (evt.target.checked) {\r\n            this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrType'], false);\r\n            this.GetAllMembers();\r\n            this.isShown = true;\r\n        }\r\n        else {\r\n            this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrType'], true);\r\n            this.GetSalaryMst();\r\n            this.isShown = false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    GetSalaryMst() {\r\n        this.gymServices.GetSalaryMstList().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this.rowData = result;\r\n            }\r\n            else {\r\n\r\n                this.rowData = null;\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    GetSalaryMstByMbr(value) {\r\n\r\n\r\n\r\n        this.gymServices.GetSalaryMstListByMbr(value).subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this.rowData = result;\r\n            }\r\n            else {\r\n\r\n                this.rowData = '';\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    GetAllMembers() {\r\n        debugger;\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) {\r\n                this._Members = result.filter(x => x.MbrType != \"GymMember\");\r\n                 \r\n            }\r\n\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    changeChk() {\r\n        if (this.chkMbr)\r\n            this.chkMbr = false;\r\n        else\r\n            this.chkMbr = true;\r\n\r\n        this.rowData = null;\r\n\r\n        if (this.chkMbr) {\r\n            this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrType'], false);\r\n            this.GetAllMembers();\r\n            this.isShown = true;\r\n        }\r\n        else {\r\n            this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrType'], true);\r\n            this.GetSalaryMst();\r\n            this.isShown = false;\r\n        }\r\n    }\r\n\r\n}\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n        <form [formGroup]=\\\"SalaryDetailsForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n\\r\\n            <div style=\\\"margin-bottom: 15px;\\\" class=\\\"form-check\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"chkMbr\\\" formControlName=\\\"chkMbr\\\" id=\\\"chkMbr\\\" name=\\\"chkMbr\\\" (change)=\\\"changed($event)\\\">\\r\\n                <label  class=\\\"form-check-label\\\"   (click)=\\\"changeChk()\\\">Show By Member</label>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"isShown\\\" class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Select Member</label>\\r\\n                    <select formControlName=\\\"MemberId\\\" [(ngModel)]=\\\"MemberId\\\" class=\\\"form-control\\\" (change)=\\\"GetSalaryMstByMbr($event.target.value)\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n                        <option *ngFor=\\\"let mbr of _Members\\\" value={{mbr.MbrId}}>\\r\\n                            {{mbr.MbrName}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div style=\\\"margin-bottom:5px;\\\">\\r\\n                <button class=\\\"btn-info\\\" (click)=\\\"AddSalary()\\\">Add Salary Details</button>\\r\\n            </div>\\r\\n            <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                             class=\\\"ag-theme-alpine\\\"\\r\\n                             [columnDefs]=\\\"columnDefs\\\"\\r\\n                             (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                             [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                             [animateRows]=\\\"true\\\"\\r\\n                             [rowData]=\\\"rowData\\\"\\r\\n                             pagination=\\\"true\\\"\\r\\n                             paginationPageSize=\\\"20\\\">\\r\\n            </ag-grid-angular>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBvcnQvc3VwcG9ydC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n     <h3>Renewal Membership</h3>\\r\\n    <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                     class=\\\"ag-theme-alpine\\\"\\r\\n                     [columnDefs]=\\\"columnDefs\\\"\\r\\n                     (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                     [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                     [animateRows]=\\\"true\\\"\\r\\n                     pagination=\\\"true\\\"\\r\\n                     (rowClicked)='onRowClicked($event)'\\r\\n                     paginationPageSize=\\\"20\\\">\\r\\n    </ag-grid-angular>\\r\\n</div>\\r\\n \";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { isNull } from 'util';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n  selector: 'app-add-salary',\r\n  templateUrl: './add-salary.component.html',\r\n  styleUrls: ['./add-salary.component.css']\r\n})\r\nexport class AddSalaryComponent implements OnInit {\r\n\r\n    AddSalaryForm: FormGroup;\r\n    _SalMembers: GymMembersClass[] = [];\r\n\r\n    submitted = false;\r\n     \r\n    MbrId: string;\r\n    MbrDesignation: string;\r\n    SalMonth: string;\r\n    SalPaidDt: string;\r\n    TotalSal: string;\r\n    PaidSal: string;\r\n    TotalLeaves: string;\r\n    Comment: string;\r\n\r\n    btnVal: string;\r\n    modelheaderval: any;\r\n    IsSessionEnable: any;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.btnVal = 'Save';\r\n        this.modelheaderval = 'Add PT Member';\r\n\r\n        this.AddSalaryForm = this.formBuilder.group({\r\n\r\n            MbrId: ['', Validators.required],\r\n            MbrDesignation: ['',],\r\n            SalMonth: ['', Validators.required],\r\n            SalPaidDt: ['', Validators.required],\r\n            TotalSal: ['',],\r\n            PaidSal: ['', Validators.required],\r\n            TotalLeaves: [''],\r\n            Comment: ['',],\r\n             \r\n        });\r\n\r\n        this.route.queryParams.subscribe((params) => {\r\n            if (params != null && params.MbrName != undefined) {\r\n                this.MbrId = params.MbrId;\r\n                this.MbrDesignation = params.MbrDesignation;\r\n                this.SalMonth = params.SalMonth;\r\n                this.SalPaidDt = params.SalPaidDt;\r\n                this.TotalSal = params.TotalSal;\r\n                this.PaidSal = params.PaidSal;\r\n                this.TotalLeaves = params.TotalLeaves;\r\n                this.Comment = params.Comment;\r\n                 \r\n                this.btnVal = 'update';\r\n                this.modelheaderval = 'Update Member';\r\n\r\n               \r\n            }\r\n        })\r\n\r\n\r\n        this.GetAllMembers();\r\n  }\r\n\r\n    get fval() {\r\n        return this.AddSalaryForm.controls;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        if (!this.AddSalaryForm.invalid) {\r\n            if (this.btnVal == \"Save\") {\r\n\r\n                debugger;\r\n                this.gymServices.SaveSalaryMst(this.AddSalaryForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/AddSalary\"]);\r\n                    }\r\n\r\n                }, error => alert(error.message))\r\n            }\r\n            else { // Update \r\n                this.gymServices.UpdateSalaryMst(this.AddSalaryForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/AddSalary\"]);\r\n                    }\r\n\r\n                }, error => alert(error.message))\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        return this._router.navigate([\"/SalaryDetails\"]);\r\n    }\r\n\r\n    GetAllMembers() {\r\n        debugger;\r\n        this.gymServices.GetAllMembers().subscribe(result => {\r\n            if (!isNull(result)) { \r\n                this._SalMembers = result.filter(x => x.MbrType != \"GymMember\");\r\n                this.ShowDesignations(this.MbrId);\r\n\r\n            }\r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    ShowDesignations(value) {\r\n\r\n        this.MbrDesignation = this._SalMembers.find(x => x.MbrId == value).MbrType.toString();\r\n        this.TotalSal = this._SalMembers.find(x => x.MbrId == value).MbrSalary.toString();\r\n         \r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"AppSuportForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\r\\n            <h3>Contact Form</h3>\\r\\n            <hr />\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                     \\r\\n                </div>\\r\\n                <div class=\\\"form-group col-md-4\\\" style=\\\"text-align:center\\\">\\r\\n                    <h2>Contact Info</h2> <br /><br />\\r\\n                    <label style=\\\"color:gray\\\">Email :- Chetan9258@gmail.com</label> <br />\\r\\n                    <label style=\\\"color:gray\\\">Mobile No:- 9021790408</label> \\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Your Name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SupportName\\\" [(ngModel)]=\\\"SupportName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportName.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.SupportName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.SupportName.errors.required\\\">\\r\\n                            Name is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Your Email/ Contact No</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SupportContact\\\" [(ngModel)]=\\\"SupportContact\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportContact.errors }\\\">\\r\\n                    <div *ngIf=\\\"submitted && fval.SupportContact.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.SupportContact.errors.required\\\">\\r\\n                            Email/ Contact No is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Select Subject</label>\\r\\n                    <select formControlName=\\\"SupportSubject\\\" [(ngModel)]=\\\"SupportSubject\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportSubject.errors }\\\">\\r\\n                        <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                        <option value=\\\"2021\\\">Web Loading Issue</option>\\r\\n                        <option value=\\\"2023\\\">Gym Members Issue</option>\\r\\n                        <option value=\\\"2022\\\">Report Issue</option>\\r\\n                        <option value=\\\"2020\\\">Others</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"submitted && fval.SupportSubject.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.SupportSubject.errors.required\\\">\\r\\n                            Subject is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"form-group col-md-4\\\">\\r\\n                    <label>Your Message</label>\\r\\n                    <textarea formControlName=\\\"SupportBody\\\" [(ngModel)]=\\\"SupportBody\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportBody.errors }\\\"></textarea>\\r\\n                    <div *ngIf=\\\"submitted && fval.SupportBody.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.SupportBody.errors.required\\\">\\r\\n                            Your Message is required.\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               \\r\\n            </div>\\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-gym-branches',\r\n  templateUrl: './add-gym-branches.component.html',\r\n  styleUrls: ['./add-gym-branches.component.css']\r\n})\r\nexport class AddGymBranchesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n    ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n         \\r\\n        <h3>Remaining Balances</h3>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                         class=\\\"ag-theme-alpine\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                         [animateRows]=\\\"true\\\"\\r\\n                         pagination=\\\"true\\\"\\r\\n                         paginationPageSize=\\\"20\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n         <label>Members Payment</label>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                         class=\\\"ag-theme-alpine\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\" \\r\\n                         [animateRows]=\\\"true\\\"\\r\\n                         pagination=\\\"true\\\"\\r\\n                         paginationPageSize=\\\"20\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<app-nav-menu></app-nav-menu>\\r\\n\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Send Message</h4>\\r\\n\\r\\n        <form [formGroup]=\\\"SendMsgForm\\\" action=\\\"#\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n             \\r\\n            <div>\\r\\n                <hr />\\r\\n                <div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <label>Select Member's Type'</label>\\r\\n                            <select formControlName=\\\"MbrType\\\" [(ngModel)]=\\\"MbrType\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrType.errors }\\\">\\r\\n                                <option class=\\\"dropdown-item\\\" disabled selected value=\\\"undefined\\\">-- Select --</option>\\r\\n\\r\\n                                <option>Gym Members</option>\\r\\n                                <option>PT Members</option>\\r\\n                                <option>Trainers</option>\\r\\n                                <option>Managers</option>\\r\\n                            </select>\\r\\n                            <div *ngIf=\\\"submitted && fval.MbrType.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"fval.MbrType.errors.required\\\">\\r\\n                                    Member Types is required.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <div class=\\\"form-row\\\">\\r\\n                        <div class=\\\"form-group col-md-4\\\">\\r\\n                            <label>Select Member</label>\\r\\n                            <ng-multiselect-dropdown [placeholder]=\\\"'Select Members'\\\"\\r\\n                                                     [settings]=\\\"dropdownSettings\\\"\\r\\n                                                     [data]=\\\"_Members\\\"\\r\\n                                                     [(ngModel)]=\\\"MbrId\\\"\\r\\n                                                     (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                                                     (onSelectAll)=\\\"onSelectAll($event)\\\">\\r\\n                            </ng-multiselect-dropdown>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n           \\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-4\\\">\\r\\n                        <label>Your Message</label>\\r\\n                        <textarea formControlName=\\\"MbrMessage\\\" [(ngModel)]=\\\"MbrMessage\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrMessages.errors }\\\"></textarea>\\r\\n                        <div *ngIf=\\\"submitted && fval.MbrMessage.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"fval.MbrMessage.errors.required\\\">\\r\\n                                Your Message is required.\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <!--<input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">-->\\r\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Submit\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { getLocaleDateFormat } from '@angular/common';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Token } from '../Models/token.model';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { baseUrl } from '../..//environments/environment';\r\n \r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GymService {\r\n\r\n    constructor(private http: HttpClient) {\r\n         \r\n    }\r\n\r\n    SendFeedbackEmail(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/SendFeebackEmail', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    SendPromotionMessage(_membersList): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/SendPromotionMessage?membersLists=' + _membersList + '', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n     \r\n\r\n    login(username, password): Observable<any> {\r\n        const headers = {\r\n            'Content-Type': 'application/json', 'Access-Control-Allow-Origin' : '*', 'Access-Control-Allow-Methods' : 'GET, POST, OPTIONS, PUT, PATCH, DELETE'  };\r\n        const userData = \"username=\" + username + \"&password=\" + password + \"&grant_type=password\";\r\n\r\n        /*return this.http.post<Token>(baseUrl + 'Token', userData, { 'headers': headers }).pipe(map(data => data));*/\r\n        return this.http.post<Token>(baseUrl + 'Token', userData, { 'headers': headers }).pipe(map(data => data));\r\n\r\n    }\r\n\r\n    ForgotPassword(Email): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/Common/forgotPassword?Email=' + Email + '', { 'headers': this.getToken() });\r\n\r\n\r\n    }\r\n\r\n    Logout(): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/Account/Logout', { 'headers': this.getToken() });\r\n    }\r\n\r\n\r\n    UpdatePassowrd(model): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/Account/ChangePassword', JSON.stringify(model), { 'headers': this.getToken() });\r\n    }\r\n\r\n    CheckToken() {\r\n        if (localStorage.getItem('token') == null) {\r\n            return false;\r\n        }\r\n        else\r\n            return true;\r\n    }\r\n\r\n    VerifyOTP(_OTPValue): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Common/VerifyOTP?OTPValue=' + _OTPValue + '', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    getToken() {\r\n        return {\r\n            'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('token') + ''\r\n        };\r\n    }\r\n\r\n    /** Error Handling method */\r\n\r\n    errorHandler(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            console.error('An error occurred:', error.error.message);\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            console.error(\r\n                'Backend returned code ' + error.status + ',' +\r\n                'body was: ' + error.error.message + '');\r\n        }\r\n        // return an observable with a user-facing error message\r\n        return throwError(\r\n            'Something bad happened; please try again later.');\r\n    }\r\n\r\n    //------------------------ Employee --------------------\r\n\r\n    GetAllMembers(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetAllMembers', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n\r\n    GetMemberDetailsById(_UserId): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetMemberDetails?UserId=' + _UserId + '', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    AddMembers(_Emp): Observable<any> {\r\n\r\n        return this.http.post<Token>(baseUrl + 'api/Member/CreateMember', JSON.stringify(_Emp), { 'headers': this.getToken() })\r\n            .pipe(\r\n                map(\r\n                    res => res));\r\n\r\n    }\r\n\r\n    UpdateMember(_Emp): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/Member/UpdateMember', JSON.stringify(_Emp), { 'headers': this.getToken() });\r\n    }\r\n\r\n    DeleteMember(_EmpId) {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/DeleteMember?UserId=' + _EmpId + '', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    //------------------------ End Employee --------------------\r\n\r\n    GetAllMemberShipPlan(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/GetAllMemberShipPlan', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    AddPlan(_Plan): Observable<any> {\r\n\r\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/CreateMemberShipPlan', JSON.stringify(_Plan), { 'headers': this.getToken() })\r\n            .pipe(\r\n                map(\r\n                    res => res));\r\n\r\n    }\r\n\r\n    UpdatePlan(_Plan): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateMemberShipPlan', JSON.stringify(_Plan), { 'headers': this.getToken() });\r\n    }\r\n\r\n    DeletePlan(_PlanId) {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/DeleteMembershipPlan?PlanId=' + _PlanId + '', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    GetPaymentDetails(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/GetGymPaymentDetails', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    GetDashboardData(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/GetDashboardData', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    GetUpcomingBirthdays(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetUpcomingBirthdays', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    // ------------------------ Expenses Details -----------------\r\n\r\n    GetAllExpense(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/GetAllExpense', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    CreateExpense(_Expenses): Observable<any> {\r\n\r\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/CreateExpense', JSON.stringify(_Expenses), { 'headers': this.getToken() })\r\n            .pipe(\r\n                map(\r\n                    res => res));\r\n\r\n    }\r\n\r\n    UpdateExpense(_Expenses): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateExpense', JSON.stringify(_Expenses), { 'headers': this.getToken() });\r\n    }\r\n\r\n    DeleteExpense(_expenseId) {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/DeleteExpense?expenseId=' + _expenseId + '', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n\r\n    //------------------------ Personal Training --------------------\r\n\r\n    GetAllPTMembers(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetAllPtMembers', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n\r\n    AddPTMembers(_Emp): Observable<any> {\r\n\r\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/CreateMemberShipPlanUser', JSON.stringify(_Emp), { 'headers': this.getToken() })\r\n            .pipe(\r\n                map(\r\n                    res => res));\r\n\r\n    }\r\n\r\n    UpdatePTMembers(_Emp): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateMemberShipPlanUser', JSON.stringify(_Emp), { 'headers': this.getToken() });\r\n    }\r\n\r\n    DeletePTMembers(_MbrUserId) {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/DeleteMembershipPlan?MbrUserId=' + _MbrUserId + '', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n\r\n    //------------------------ End Employee --------------------\r\n\r\n    //------------------------ Gym Profile Details --------------------\r\n\r\n    GetGymProfileDetails(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymDetails/GetGymProfile', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n\r\n    UpdateGymProfileDetails(_profile): Observable<any> {\r\n\r\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateGymProfile', JSON.stringify(_profile), { 'headers': this.getToken() })\r\n            .pipe(\r\n                map(\r\n                    res => res));\r\n\r\n    }\r\n\r\n    //------------------------ End Gym Profile Details  --------------------\r\n\r\n    GetMembershipGoingtoExxpiredMembers(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetMembershipGoingtoExxpiredMembers', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    GetAllMemberShipPlanUser(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetGymMemberRemainingBalance', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n    GetGymMemberHistoryById(MemberId): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetGymMemberHistoryById?MemberId=' + MemberId + '', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n    GetInvoiceList(MbrId): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetInvoiceList?MbrId=' + MbrId + '', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n    GetInvoice(MbrUserId): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetInvoice?MbrUserId=' + MbrUserId + '', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    GetMemberYearlyReport(_MbrId): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymReport/GetMemberYearlyReport?MbrId=' + _MbrId + '', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    GetMembershipReport(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymReport/GetMembershipReport', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    GetPTReport(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymReport/GetPTReport', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    GetSummaryReport(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/GymReport/GetSummaryReport', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    GetSalaryMstList(): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetSalaryMstList', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    GetSalaryMstListByMbr(MbrId): Observable<any> {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/GetSalaryMstListByMbr?MbrId=' + MbrId + '', { 'headers': this.getToken() }).\r\n            pipe(map(res => res),\r\n                catchError(this.errorHandler));\r\n    }\r\n\r\n    SaveSalaryMst(_Emp): Observable<any> {\r\n\r\n        return this.http.post<Token>(baseUrl + 'api/Member/SaveSalaryMst', JSON.stringify(_Emp), { 'headers': this.getToken() })\r\n            .pipe(\r\n                map(\r\n                    res => res));\r\n\r\n    }\r\n\r\n    UpdateSalaryMst(_Emp): Observable<any> {\r\n        return this.http.post<Token>(baseUrl + 'api/Member/UpdateSalaryMst', JSON.stringify(_Emp), { 'headers': this.getToken() });\r\n    }\r\n\r\n    DeleteMembersSalaryMst(_SalId) {\r\n\r\n        return this.http.get(baseUrl + 'api/Member/DeleteMembersSalaryMst?_SalId=' + _SalId + '', { 'headers': this.getToken() }).\r\n            pipe(\r\n                map(\r\n                    res => res));\r\n    }\r\n}\r\n"," \r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router } from '@angular/router';\r\n  \r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    loginform: FormGroup;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router) { } /*, public nav: NavMenuComponent*/\r\n\r\n    ngOnInit() { \r\n        this.loginform = this.formBuilder.group({\r\n            MobileNo: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    onSubmit() { \r\n        if (this.loginform.controls.MobileNo.value == undefined || this.loginform.controls.MobileNo.value.length != 10) {\r\n            alert(\"Please provide valid 10 digit number\");\r\n            return;\r\n        }\r\n\r\n        if (this.loginform.controls.password.value == undefined || this.loginform.controls.password.value.length != 5) {\r\n            alert(\"Invalid password\");\r\n            return;\r\n        }\r\n\r\n        this.gymServices.login(this.loginform.controls.MobileNo.value, this.loginform.controls.password.value).subscribe(result => {\r\n            if (!isNull(result.access_token)) {  \r\n                localStorage.setItem(\"token\", result.access_token);\r\n                localStorage.setItem(\"isAdmin\", 'false');\r\n\r\n                return this._router.navigate([\"/Home\"]);\r\n            } \r\n        }, error => alert(error.message))\r\n    }\r\n\r\n    numberOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true; \r\n    }\r\n\r\n    get fval() {\r\n        return this.loginform.controls;\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { isNull } from 'util';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\n\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\n\r\n@Component({\r\n    selector: 'app-add-membership-plan',\r\n    templateUrl: './add-membership-plan.component.html',\r\n    styleUrls: ['./add-membership-plan.component.css']\r\n})\r\nexport class AddMembershipPlanComponent implements OnInit {\r\n\r\n    AddPlanForm: FormGroup;\r\n    submitted = false;\r\n\r\n    MbrShipId: string;\r\n    MbrShipName: string;\r\n    MbrShipAmt: string;\r\n    MbrShipDurationInDays: string;\r\n    StartDt: string;\r\n    EndDt: string;\r\n    Description: string;\r\n\r\n    btnVal: any;\r\n    modelheaderval: any;\r\n    IsSessionEnable: any;\r\n\r\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.btnVal = 'Save';\r\n        this.modelheaderval = 'Add Membership Plan';\r\n\r\n\r\n        this.AddPlanForm = this.formBuilder.group({\r\n\r\n            MbrShipId: [''],\r\n            MbrShipName: ['', Validators.required],\r\n            MbrShipAmt: ['', Validators.required],\r\n            MbrShipDurationInDays: ['', Validators.required],\r\n            StartDt: [''],\r\n            EndDt: [''],\r\n            Description: [''],\r\n\r\n        });\r\n\r\n        this.route.queryParams.subscribe((params) => {\r\n            if (params != null && params.MbrShipName != undefined) {\r\n\r\n                this.MbrShipId = params.MbrShipId;\r\n                this.MbrShipName = params.MbrShipName;\r\n                this.MbrShipAmt = params.MbrShipAmt;\r\n                this.MbrShipDurationInDays = params.MbrShipDurationInDays;\r\n                this.StartDt = params.StartDt;\r\n                this.EndDt = params.EndDt;\r\n                this.Description = params.Description;\r\n\r\n                this.btnVal = 'update';\r\n                this.modelheaderval = 'Update Plan';\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        if (!this.AddPlanForm.invalid) {\r\n            if (this.btnVal == \"Save\") {\r\n                this.gymServices.AddPlan(this.AddPlanForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/MbrPlans\"]);\r\n                    }\r\n                    else {\r\n                        alert(\"Incorrect Creiditials\");\r\n                    }\r\n                }, error => alert(error.message))\r\n            }\r\n            else { // Update \r\n                this.gymServices.UpdatePlan(this.AddPlanForm.value).subscribe(result => {\r\n                    if (!isNull(result)) {\r\n                        alert(result);\r\n                        return this._router.navigate([\"/MbrPlans\"]);\r\n                    }\r\n                    else {\r\n                        alert(\"Incorrect Creiditials\");\r\n                    }\r\n                }, error => alert(error.message))\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        return this._router.navigate([\"/MbrPlans\"]);\r\n    }\r\n\r\n    numberOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    get fval() {\r\n        return this.AddPlanForm.controls;\r\n    }\r\n\r\n}\r\n","export default \"<app-nav-menu></app-nav-menu>\\r\\n<div class=\\\"wrapper fadeInDown\\\">\\r\\n    <div>\\r\\n        <button class=\\\"btn-info\\\" (click)=\\\"AddEmployee()\\\">Add New Branch</button>\\r\\n        <ag-grid-angular style=\\\"width: 100%; height: 100%;\\\"\\r\\n                         domLayout='autoHeight'\\r\\n                         class=\\\"ag-theme-alpine\\\"\\r\\n                         [columnDefs]=\\\"columnDefs\\\"\\r\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\r\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\r\\n                         [animateRows]=\\\"true\\\"\\r\\n                         pagination=\\\"true\\\"\\r\\n                         paginationPageSize=\\\"20\\\">\\r\\n        </ag-grid-angular>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1zYWxhcnkvYWRkLXNhbGFyeS5jb21wb25lbnQuY3NzIn0= */\";","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GymService } from '../services/gym.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-support',\r\n    templateUrl: './support.component.html',\r\n    styleUrls: ['./support.component.css']\r\n})\r\nexport class SupportComponent implements OnInit {\r\n\r\n    AppSuportForm: FormGroup;\r\n    submitted = false;\r\n    SupportName: string;\r\n    SupportContact: string;\r\n    SupportSubject: string;\r\n    SupportBody: string; \r\n    IsSessionEnable: any;\r\n\r\n    constructor(public formBuilder: FormBuilder, private _router: Router, private gymServices: GymService) {\r\n         \r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.IsSessionEnable = this.gymServices.CheckToken();\r\n        if (!this.IsSessionEnable)\r\n            return this._router.navigate([\"\"]);\r\n\r\n        this.AppSuportForm = this.formBuilder.group({\r\n\r\n            SupportName: ['', Validators.required],\r\n            SupportContact: ['', Validators.required],\r\n            SupportSubject: ['', Validators.required],\r\n            SupportBody: ['', Validators.required],\r\n \r\n        });\r\n\r\n    }\r\n\r\n    onSubmit() {\r\n        debugger;\r\n        this.submitted = true; \r\n        if (!this.AppSuportForm.invalid) {\r\n            this.gymServices.SendFeedbackEmail().subscribe(result => {\r\n                alert('Feedback Send');\r\n\r\n            }, error => alert(error.message))\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    get fval() {\r\n        return this.AppSuportForm.controls;\r\n    }\r\n}\r\n\r\n ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbGFyeS1tYXN0ZXIvc2FsYXJ5LW1hc3Rlci5jb21wb25lbnQuY3NzIn0= */\";"],"sourceRoot":"webpack:///"}