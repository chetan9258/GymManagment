{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/gym.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nfunction MembershipHistoryComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mbr_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", mbr_r1.MbrId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", mbr_r1.MbrName, \" \");\n  }\n}\nexport let MembershipHistoryComponent = /*#__PURE__*/(() => {\n  class MembershipHistoryComponent {\n    constructor(gymServices, _router, route, formBuilder) {\n      this.gymServices = gymServices;\n      this._router = _router;\n      this.route = route;\n      this.formBuilder = formBuilder;\n      this._Members = [];\n      this.frameworkComponents = {\n        buttonRenderer: BtnCellRendererComponent\n      };\n      this.columnDefs = [{\n        headerName: 'Id',\n        field: 'MbrId',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        hide: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Name',\n        field: 'MbrName',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Batch',\n        field: 'MbrBatch',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Membership Name',\n        field: 'MbrShipName',\n        Filter: true,\n        enableSorting: true,\n        sortable: true,\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Membership Amt',\n        field: 'MbrShipAmt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Paid Amt',\n        field: 'PaidAmt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Paid By',\n        field: 'PaidBy',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Paid Dt',\n        field: 'PaidDt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Start Dt',\n        field: 'MbrshipStartDt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'End Dt',\n        field: 'MbrshipEndDt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Type',\n        field: 'MembershipType',\n        filter: 'agTextColumnFilter'\n      }];\n    }\n    ngOnInit() {\n      this.IsSessionEnable = this.gymServices.CheckToken();\n      if (!this.IsSessionEnable) return this._router.navigate([\"\"]);\n      this.MbrHistoryForm = this.formBuilder.group({\n        PtMemberId: ['', [Validators.required, Validators.min(1)]]\n      });\n      this.GetAllMembers();\n    }\n    onGridReady(params) {\n      this.rowData = '';\n    }\n    GetAllMembers() {\n      debugger;\n      this.gymServices.GetAllMembers().subscribe(result => {\n        if (!isNull(result)) {\n          this._Members = result;\n        }\n      }, error => alert(error.message));\n    }\n    showPersonalTrainingPlans(value) {\n      let MemberId = value;\n      this.gymServices.GetGymMemberHistoryById(MemberId).subscribe(result => {\n        if (!isNull(result)) {\n          this.rowData = result;\n        } else {\n          this.rowData = null;\n        }\n      }, error => alert(error.message));\n    }\n  }\n  MembershipHistoryComponent.ɵfac = function MembershipHistoryComponent_Factory(t) {\n    return new (t || MembershipHistoryComponent)(i0.ɵɵdirectiveInject(i1.GymService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  MembershipHistoryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MembershipHistoryComponent,\n    selectors: [[\"app-membership-history\"]],\n    decls: 15,\n    vars: 7,\n    consts: [[1, \"wrapper\", \"fadeInDown\"], [\"action\", \"#\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-4\"], [\"formControlName\", \"PtMemberId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"disabled\", \"\", \"selected\", \"\", \"value\", \"undefined\", 1, \"dropdown-item\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"domLayout\", \"autoHeight\", \"pagination\", \"true\", \"paginationPageSize\", \"20\", 1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"100%\", 3, \"columnDefs\", \"frameworkComponents\", \"animateRows\", \"rowData\", \"gridReady\"], [3, \"value\"]],\n    template: function MembershipHistoryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"h3\");\n        i0.ɵɵtext(4, \"Members Hisory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function MembershipHistoryComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵtext(9, \"Select Member\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function MembershipHistoryComponent_Template_select_ngModelChange_10_listener($event) {\n          return ctx.PtMemberId = $event;\n        })(\"change\", function MembershipHistoryComponent_Template_select_change_10_listener($event) {\n          return ctx.showPersonalTrainingPlans($event.target.value);\n        });\n        i0.ɵɵelementStart(11, \"option\", 5);\n        i0.ɵɵtext(12, \"-- Select --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, MembershipHistoryComponent_option_13_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ag-grid-angular\", 7);\n        i0.ɵɵlistener(\"gridReady\", function MembershipHistoryComponent_Template_ag_grid_angular_gridReady_14_listener($event) {\n          return ctx.onGridReady($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.MbrHistoryForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.PtMemberId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx._Members);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"columnDefs\", ctx.columnDefs)(\"frameworkComponents\", ctx.frameworkComponents)(\"animateRows\", true)(\"rowData\", ctx.rowData);\n      }\n    },\n    styles: [\"\"]\n  });\n  return MembershipHistoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}