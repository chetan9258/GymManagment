{"ast":null,"code":"import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { baseUrl } from '../..//environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GymService = /*#__PURE__*/(() => {\n  class GymService {\n    constructor(http) {\n      this.http = http;\n    }\n    SendFeedbackEmail() {\n      return this.http.get(baseUrl + 'api/GymDetails/SendFeebackEmail', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    SendPromotionMessage(_membersList) {\n      return this.http.get(baseUrl + 'api/GymDetails/SendPromotionMessage?membersLists=' + _membersList + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    login(username, password) {\n      const headers = {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE'\n      };\n      const userData = \"username=\" + username + \"&password=\" + password + \"&grant_type=password\";\n      /*return this.http.post<Token>(baseUrl + 'Token', userData, { 'headers': headers }).pipe(map(data => data));*/\n      return this.http.post(baseUrl + 'Token', userData, {\n        'headers': headers\n      }).pipe(map(data => data));\n    }\n    ForgotPassword(Email) {\n      return this.http.post(baseUrl + 'api/Common/forgotPassword?Email=' + Email + '', {\n        'headers': this.getToken()\n      });\n    }\n    Logout() {\n      return this.http.post(baseUrl + 'api/Account/Logout', {\n        'headers': this.getToken()\n      });\n    }\n    UpdatePassowrd(model) {\n      return this.http.post(baseUrl + 'api/Account/ChangePassword', JSON.stringify(model), {\n        'headers': this.getToken()\n      });\n    }\n    CheckToken() {\n      if (localStorage.getItem('token') == null) {\n        return false;\n      } else return true;\n    }\n    VerifyOTP(_OTPValue) {\n      return this.http.get(baseUrl + 'api/Common/VerifyOTP?OTPValue=' + _OTPValue + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    getToken() {\n      return {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token') + ''\n      };\n    }\n    /** Error Handling method */\n    errorHandler(error) {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error('Backend returned code ' + error.status + ',' + 'body was: ' + error.error.message + '');\n      }\n      // return an observable with a user-facing error message\n      return throwError('Something bad happened; please try again later.');\n    }\n    //------------------------ Employee --------------------\n    GetAllMembers() {\n      return this.http.get(baseUrl + 'api/Member/GetAllMembers', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetMemberDetailsById(_UserId) {\n      return this.http.get(baseUrl + 'api/Member/GetMemberDetails?UserId=' + _UserId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    AddMembers(_Emp) {\n      return this.http.post(baseUrl + 'api/Member/CreateMember', JSON.stringify(_Emp), {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    UpdateMember(_Emp) {\n      return this.http.post(baseUrl + 'api/Member/UpdateMember', JSON.stringify(_Emp), {\n        'headers': this.getToken()\n      });\n    }\n    DeleteMember(_EmpId) {\n      return this.http.get(baseUrl + 'api/Member/DeleteMember?UserId=' + _EmpId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    //------------------------ End Employee --------------------\n    GetAllMemberShipPlan() {\n      return this.http.get(baseUrl + 'api/GymDetails/GetAllMemberShipPlan', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    AddPlan(_Plan) {\n      return this.http.post(baseUrl + 'api/GymDetails/CreateMemberShipPlan', JSON.stringify(_Plan), {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    UpdatePlan(_Plan) {\n      return this.http.post(baseUrl + 'api/GymDetails/UpdateMemberShipPlan', JSON.stringify(_Plan), {\n        'headers': this.getToken()\n      });\n    }\n    DeletePlan(_PlanId) {\n      return this.http.get(baseUrl + 'api/GymDetails/DeleteMembershipPlan?PlanId=' + _PlanId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    GetPaymentDetails() {\n      return this.http.get(baseUrl + 'api/GymDetails/GetGymPaymentDetails', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    GetDashboardData() {\n      return this.http.get(baseUrl + 'api/GymDetails/GetDashboardData', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    GetUpcomingBirthdays() {\n      return this.http.get(baseUrl + 'api/Member/GetUpcomingBirthdays', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    // ------------------------ Expenses Details -----------------\n    GetAllExpense() {\n      return this.http.get(baseUrl + 'api/GymDetails/GetAllExpense', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    CreateExpense(_Expenses) {\n      return this.http.post(baseUrl + 'api/GymDetails/CreateExpense', JSON.stringify(_Expenses), {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    UpdateExpense(_Expenses) {\n      return this.http.post(baseUrl + 'api/GymDetails/UpdateExpense', JSON.stringify(_Expenses), {\n        'headers': this.getToken()\n      });\n    }\n    DeleteExpense(_expenseId) {\n      return this.http.get(baseUrl + 'api/GymDetails/DeleteExpense?expenseId=' + _expenseId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    //------------------------ Personal Training --------------------\n    GetAllPTMembers() {\n      return this.http.get(baseUrl + 'api/Member/GetAllPtMembers', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    AddPTMembers(_Emp) {\n      return this.http.post(baseUrl + 'api/GymDetails/CreateMemberShipPlanUser', JSON.stringify(_Emp), {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    UpdatePTMembers(_Emp) {\n      return this.http.post(baseUrl + 'api/GymDetails/UpdateMemberShipPlanUser', JSON.stringify(_Emp), {\n        'headers': this.getToken()\n      });\n    }\n    DeletePTMembers(_MbrUserId) {\n      return this.http.get(baseUrl + 'api/GymDetails/DeleteMembershipPlan?MbrUserId=' + _MbrUserId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    //------------------------ End Employee --------------------\n    //------------------------ Gym Profile Details --------------------\n    GetGymProfileDetails() {\n      return this.http.get(baseUrl + 'api/GymDetails/GetGymProfile', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    UpdateGymProfileDetails(_profile) {\n      return this.http.post(baseUrl + 'api/GymDetails/UpdateGymProfile', JSON.stringify(_profile), {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    //------------------------ End Gym Profile Details  --------------------\n    GetMembershipGoingtoExxpiredMembers() {\n      return this.http.get(baseUrl + 'api/Member/GetMembershipGoingtoExxpiredMembers', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetAllMemberShipPlanUser() {\n      return this.http.get(baseUrl + 'api/Member/GetGymMemberRemainingBalance', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetGymMemberHistoryById(MemberId) {\n      return this.http.get(baseUrl + 'api/Member/GetGymMemberHistoryById?MemberId=' + MemberId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetInvoiceList(MbrId) {\n      return this.http.get(baseUrl + 'api/Member/GetInvoiceList?MbrId=' + MbrId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetInvoice(MbrUserId) {\n      return this.http.get(baseUrl + 'api/Member/GetInvoice?MbrUserId=' + MbrUserId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetMemberYearlyReport(_MbrId) {\n      return this.http.get(baseUrl + 'api/GymReport/GetMemberYearlyReport?MbrId=' + _MbrId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetMembershipReport() {\n      return this.http.get(baseUrl + 'api/GymReport/GetMembershipReport', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetPTReport() {\n      return this.http.get(baseUrl + 'api/GymReport/GetPTReport', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetSummaryReport() {\n      return this.http.get(baseUrl + 'api/GymReport/GetSummaryReport', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetSalaryMstList() {\n      return this.http.get(baseUrl + 'api/Member/GetSalaryMstList', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    GetSalaryMstListByMbr(MbrId) {\n      return this.http.get(baseUrl + 'api/Member/GetSalaryMstListByMbr?MbrId=' + MbrId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res), catchError(this.errorHandler));\n    }\n    SaveSalaryMst(_Emp) {\n      return this.http.post(baseUrl + 'api/Member/SaveSalaryMst', JSON.stringify(_Emp), {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n    UpdateSalaryMst(_Emp) {\n      return this.http.post(baseUrl + 'api/Member/UpdateSalaryMst', JSON.stringify(_Emp), {\n        'headers': this.getToken()\n      });\n    }\n    DeleteMembersSalaryMst(_SalId) {\n      return this.http.get(baseUrl + 'api/Member/DeleteMembersSalaryMst?_SalId=' + _SalId + '', {\n        'headers': this.getToken()\n      }).pipe(map(res => res));\n    }\n  }\n  GymService.ɵfac = function GymService_Factory(t) {\n    return new (t || GymService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  GymService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GymService,\n    factory: GymService.ɵfac,\n    providedIn: 'root'\n  });\n  return GymService;\n})();","map":null,"metadata":{},"sourceType":"module"}