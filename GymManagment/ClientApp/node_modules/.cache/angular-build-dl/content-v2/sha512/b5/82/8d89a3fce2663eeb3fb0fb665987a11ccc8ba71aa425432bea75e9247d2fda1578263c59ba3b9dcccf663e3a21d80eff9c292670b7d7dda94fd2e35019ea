{"version":3,"sources":["./src/app/add-employee/add-employee.component.html","./src/app/add-expenses/add-expenses.component.html","./src/app/add-gym-branches/add-gym-branches.component.html","./src/app/add-membership-plan/add-membership-plan.component.html","./src/app/add-ptdetails/add-ptdetails.component.html","./src/app/add-remaining-balance/add-remaining-balance.component.html","./src/app/all-invoices/all-invoices.component.html","./src/app/all-reports/all-reports.component.html","./src/app/app.component.html","./src/app/counter/counter.component.html","./src/app/employee/employee.component.html","./src/app/fetch-data/fetch-data.component.html","./src/app/gym-branches/gym-branches.component.html","./src/app/gym-expenses/gym-expenses.component.html","./src/app/gym-profile/gym-profile.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/membership-history/membership-history.component.html","./src/app/membership-plan/membership-plan.component.html","./src/app/nav-menu/nav-menu.component.html","./src/app/payments/payments.component.html","./src/app/ptdetails/ptdetails.component.html","./src/app/remaining-balance/remaining-balance.component.html","./src/app/renewal-membership/renewal-membership.component.html","./src/app/renewal-payments/renewal-payments.component.html","./src/app/salary-master/salary-master.component.html","./src/app/send-message/send-message.component.html","./src/app/support/support.component.html","./src/app/trainers-history/trainers-history.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/Renders/btn-renderer.component.ts","./src/app/Renders/edit-btn-renderer.component.ts","./src/app/add-employee/add-employee.component.css","./src/app/add-employee/add-employee.component.ts","./src/app/add-expenses/add-expenses.component.css","./src/app/add-expenses/add-expenses.component.ts","./src/app/add-gym-branches/add-gym-branches.component.css","./src/app/add-gym-branches/add-gym-branches.component.ts","./src/app/add-membership-plan/add-membership-plan.component.css","./src/app/add-membership-plan/add-membership-plan.component.ts","./src/app/add-ptdetails/add-ptdetails.component.css","./src/app/add-ptdetails/add-ptdetails.component.ts","./src/app/add-remaining-balance/add-remaining-balance.component.css","./src/app/add-remaining-balance/add-remaining-balance.component.ts","./src/app/all-invoices/all-invoices.component.css","./src/app/all-invoices/all-invoices.component.ts","./src/app/all-reports/all-reports.component.css","./src/app/all-reports/all-reports.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/btn-cell-renderer/btn-cell-renderer.component.ts","./src/app/confirm-equal-validator.directive.ts.directive.ts","./src/app/counter/counter.component.ts","./src/app/employee/employee.component.css","./src/app/employee/employee.component.ts","./src/app/fetch-data/fetch-data.component.ts","./src/app/gym-branches/gym-branches.component.css","./src/app/gym-branches/gym-branches.component.ts","./src/app/gym-expenses/gym-expenses.component.css","./src/app/gym-expenses/gym-expenses.component.ts","./src/app/gym-profile/gym-profile.component.css","./src/app/gym-profile/gym-profile.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/membership-history/membership-history.component.css","./src/app/membership-history/membership-history.component.ts","./src/app/membership-plan/membership-plan.component.css","./src/app/membership-plan/membership-plan.component.ts","./src/app/nav-menu/nav-menu.component.css","./src/app/nav-menu/nav-menu.component.ts","./src/app/payments/payments.component.css","./src/app/payments/payments.component.ts","./src/app/ptdetails/ptdetails.component.css","./src/app/ptdetails/ptdetails.component.ts","./src/app/remaining-balance/remaining-balance.component.css","./src/app/remaining-balance/remaining-balance.component.ts","./src/app/renewal-membership/renewal-membership.component.css","./src/app/renewal-membership/renewal-membership.component.ts","./src/app/renewal-payments/renewal-payments.component.css","./src/app/renewal-payments/renewal-payments.component.ts","./src/app/salary-master/salary-master.component.css","./src/app/salary-master/salary-master.component.ts","./src/app/send-message/send-message.component.css","./src/app/send-message/send-message.component.ts","./src/app/services/gym.service.ts","./src/app/support/support.component.css","./src/app/support/support.component.ts","./src/app/trainers-history/trainers-history.component.css","./src/app/trainers-history/trainers-history.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\n\\n        <form [formGroup]=\\\"AddEmpForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n\\n            <div style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrUserId\\\" formControlName=\\\"MbrUserId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"sal_Id\\\" formControlName=\\\"sal_Id\\\" style=\\\"display:none\\\">\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Members Type</label>\\n                    <select class=\\\"form-control\\\" (change)=\\\"filterForeCasts($event.target.value)\\\" [(ngModel)]=\\\"MbrTypeddl\\\" formControlName=\\\"MbrType\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrType.errors }\\\">\\n                        <option value=\\\"Enquiry\\\">Enquiry</option> \\n                        <option value=\\\"GymMember\\\">Gym Member</option>\\n                        <option value=\\\"Trainer\\\">Trainer</option>\\n                        <option value=\\\"FloorManager\\\">Floor Manager</option>\\n                        <option value=\\\"Receptionist\\\">Receptionist</option>\\n                        <option value=\\\"officeboy\\\">office boy</option>\\n                        <!--<option value=\\\"PT\\\">PT</option>-->\\n                    </select>\\n                    <div *ngIf=\\\"submitted && fval.MbrType.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.MbrType.errors.required\\\">\\n                            Members Type is required.\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"MbrTypeddl != 'PT'\\\">\\n                <hr />\\n                <div class=\\\"form-row \\\">\\n                    <h5 class=\\\"mb-2\\\">Personal Information</h5>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label for=\\\"name\\\"> Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrName\\\" formControlName=\\\"MbrName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrName.errors }\\\">\\n                        <div *ngIf=\\\"submitted && fval.MbrName.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.MbrName.errors.required\\\">\\n                                Full Name is required and must be a valid name\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Gender</label>\\n\\n                        <select formControlName=\\\"MbrGender\\\" [(ngModel)]=\\\"MbrGender\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrGender.errors }\\\">\\n                            <option value=\\\"Male\\\">Male</option>\\n                            <option value=\\\"FeMale\\\">FeMale</option>\\n                        </select>\\n                        <div *ngIf=\\\"submitted && fval.MbrGender.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.MbrGender.errors.required\\\">\\n                                Gender is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> DOB</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrDOB\\\" formControlName=\\\"MbrDOB\\\"  (change)=\\\"onDOBSelect($event)\\\">\\n                    </div> \\n                </div>\\n\\n\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Mobile</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrMob\\\" formControlName=\\\"MbrMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrMob.errors }\\\">\\n                        <div *ngIf=\\\"submitted && fval.MbrMob.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.MbrMob.errors.required || fval.MbrMob.errors.maxlength || fval.MbrMob.errors.minlength\\\">\\n                                Mobile No is required\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Mobile 2</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrMob2\\\" formControlName=\\\"MbrMob2\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\n\\n                    </div>\\n                     \\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Email</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrEmail\\\" formControlName=\\\"MbrEmail\\\">\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-row\\\">\\n                  \\n                     \\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Address</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrAddr\\\" formControlName=\\\"MbrAddr\\\">\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> City</label>\\n                        <select formControlName=\\\"MbrCity\\\" [(ngModel)]=\\\"MbrCityddl\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"Pune\\\">Pune</option>\\n                            <option value=\\\"Mumbai\\\">Mumbai</option>\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> State</label>\\n                        <select formControlName=\\\"MbrState\\\" [(ngModel)]=\\\"MbrStateddl\\\" class=\\\"form-control\\\">\\n\\n                            <option value=\\\"Maharastra\\\">Maharastra</option>\\n                        </select>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\\\"form-row\\\">\\n       \\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Pincode</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPincode\\\" [(ngModel)]=\\\"MbrPincode\\\" (keypress)=\\\"numberOnly($event)\\\">\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Enquiry Date </label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrDOE\\\" formControlName=\\\"MbrDOE\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"GeneralDesc\\\" [(ngModel)]=\\\"GeneralDesc\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <div *ngIf=\\\"MbrTypeddl == 'Trainer' || MbrTypeddl == 'FloorManager'\\\">\\n                            <label> PT Charges </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPTCharges\\\" [(ngModel)]=\\\"MbrPTCharges\\\" (keypress)=\\\"numberOnly($event)\\\">\\n\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n\\n            <div *ngIf=\\\"MbrTypeddl != 'GymMember' && MbrTypeddl != 'PT' && MbrTypeddl != 'Enquiry'\\\">\\n                <hr />\\n                <div class=\\\"form-row \\\">\\n                    <h5 class=\\\"mb-2\\\">Salary Information</h5>\\n                </div>\\n\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Salary</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrSalary\\\" [(ngModel)]=\\\"MbrSalary\\\" (keypress)=\\\"numberOnly($event)\\\"> \\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SalDesc\\\" [(ngModel)]=\\\"SalDesc\\\">\\n                         \\n                    </div>\\n\\n                </div>\\n\\n\\n            </div>\\n\\n            <div *ngIf=\\\"MbrTypeddl == 'Trainer' || MbrTypeddl == 'FloorManager'\\\">\\n\\n                <div class=\\\"form-row\\\">\\n                    <h5 class=\\\"mb-2\\\">Certification Details</h5>\\n                </div>\\n\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Certification Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrCertification\\\" formControlName=\\\"MbrCertification\\\">\\n                         \\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Completion Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrCertificationDt\\\" formControlName=\\\"MbrCertificationDt\\\" name=\\\"MbrshipStartDt\\\">\\n                         \\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n\\n            <div *ngIf=\\\"MbrTypeddl == 'GymMember' ||MbrTypeddl == 'Trainer' || MbrTypeddl == 'FloorManager'\\\">\\n                <hr />\\n                <div class=\\\"form-row \\\">\\n                    <h5 class=\\\"mb-2\\\">MemberShip Plan</h5>\\n                </div>\\n\\n\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Plan Name</label>\\n\\n                        <select formControlName=\\\"MbrPlans\\\" [(ngModel)]=\\\"MbrPlansddl\\\" class=\\\"form-control\\\" (change)=\\\"showMemberShipPlan($event.target.value)\\\">\\n\\n                            <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\n                                {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\n                            </option>\\n                        </select>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipAmt\\\" formControlName=\\\"MbrshipAmt\\\" disabled>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Paid Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrshipPaidAmt\\\" [(ngModel)]=\\\"MbrshipPaidAmt\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Remaining Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"RemBalance\\\" [(ngModel)]=\\\"RemBalance\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>MemberShip Days</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipDays\\\" formControlName=\\\"MbrshipDays\\\" disabled>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Start Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" (change)=\\\"onDateChange($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> End Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Paid By</label>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MbrPaidBy\\\" [(ngModel)]=\\\"MbrPaidByddl\\\">\\n\\n                            <option value=\\\"Cash\\\">Cash</option>\\n                            <option value=\\\"Card\\\">Card</option>\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\n\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrshipDesc\\\" [(ngModel)]=\\\"MbrshipDesc\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Batch</label>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MbrBatch\\\" [(ngModel)]=\\\"MbrBatch\\\">\\n\\n                            <option value=\\\"Morning\\\">Morning</option>\\n                            <option value=\\\"Afternoon\\\">Afternoon</option>\\n                            <option value=\\\"Evening\\\">Evening</option>\\n\\n                        </select>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"MbrTypeddl == 'GymMember' || MbrTypeddl == 'PT'\\\" style=\\\"display:none\\\"> <!--hide for time bin-->\\n                <hr />\\n                <div class=\\\"form-row \\\">\\n                    <h5 class=\\\"mb-2\\\">Personal Training Plan</h5>\\n                </div>\\n                <div *ngIf=\\\"MbrTypeddl == 'PT'\\\">\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <label>Select Member</label>\\n                            <select formControlName=\\\"PtMemberId\\\" [(ngModel)]=\\\"PtMemberId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\">\\n                                <option *ngFor=\\\"let mbr of _PTMembers\\\" value={{mbr.MbrId}}>\\n                                    {{mbr.MbrName}}\\n                                </option>\\n                            </select>\\n                             \\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>PT Traning Plan</label>\\n                        <select formControlName=\\\"MbrPTPlanId\\\" [(ngModel)]=\\\"MbrPTPlanId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\">\\n\\n                            <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\n                                {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\n                            </option>\\n                        </select>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Training Days</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPtDays\\\" formControlName=\\\"MbrPtDays\\\" disabled>\\n\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>PT Trainer Name</label>\\n                        <select formControlName=\\\"MbrPtTrainerId\\\" [(ngModel)]=\\\"MbrPtTrainerId\\\" class=\\\"form-control\\\" (change)=\\\"showPTTrainerCharges($event.target.value)\\\">\\n\\n                            <option *ngFor=\\\"let plan of _PTTrainer\\\" value={{plan.MbrId}}>\\n                                {{plan.MbrName}}\\n                            </option>\\n                        </select>\\n\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>PT Charges</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTChargesofTrainer\\\" formControlName=\\\"MbrPTChargesofTrainer\\\" disabled>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Paid Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPTAmt\\\" [(ngModel)]=\\\"MbrPTAmt\\\">\\n\\n                    </div>\\n\\n                \\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Paid By</label>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"MbrPTAmtPaidBy\\\" [(ngModel)]=\\\"MbrPTAmtPaidBy\\\">\\n\\n                            <option value=\\\"Cash\\\">Cash</option>\\n                            <option value=\\\"Card\\\">Card</option>\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\n\\n                        </select>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Start Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTStartDt\\\" formControlName=\\\"MbrPTStartDt\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> End Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTEndDt\\\" formControlName=\\\"MbrPTEndDt\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"MbrPTDesc\\\" [(ngModel)]=\\\"MbrPTDesc\\\">\\n\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <!--<input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">-->\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\n        </form>\\n    </div>\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\n        <hr />\\n        <form [formGroup]=\\\"AddExpensesForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n\\n            <div style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"ExpensesId\\\" formControlName=\\\"ExpensesId\\\" style=\\\"display:none\\\">\\n            </div>\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Date </label>\\n                    <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ExpenseDate\\\" formControlName=\\\"ExpenseDate\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.ExpenseDate.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.ExpenseDate.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.ExpenseDate.errors.required\\\">\\n                            Date is required.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Expense Type</label>\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"Category\\\" formControlName=\\\"Category\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.Category.errors }\\\">\\n                        <option value=\\\"Travel\\\">Travel</option>\\n                        <option value=\\\"Cleaning\\\">Cleaning</option>\\n                        <option value=\\\"Equipments\\\">Equipments</option>\\n                        <option value=\\\"Others\\\">Others</option>\\n                    </select>\\n                    <div *ngIf=\\\"submitted && fval.Category.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.Category.errors.required\\\">\\n                            Expense Type is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                 \\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Sub Category</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"SubCategory\\\" formControlName=\\\"SubCategory\\\" maxlength=\\\"10\\\">\\n                </div>\\n                 \\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Amount</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Amount\\\" formControlName=\\\"Amount\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.Amount.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.Amount.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.Amount.errors.required\\\">\\n                            Date is required.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Description\\\" formControlName=\\\"Description\\\" maxlength=\\\"10\\\">\\n                </div>\\n\\n            </div>\\n\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\n        </form>\\n    </div>\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"p-2\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Branch</h4>\\n    <hr />\\n\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"name\\\">Branch Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpName\\\" class=\\\"form-control\\\" formControlName=\\\"EmpName\\\" name=\\\"EmpName\\\">\\n        </div>\\n\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label> Contact Person Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpMob\\\" class=\\\"form-control\\\" formControlName=\\\"EmpMob\\\" name=\\\"EmpMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\n        </div>\\n\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label> Contact Number</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpMob\\\" class=\\\"form-control\\\" formControlName=\\\"EmpMob\\\" name=\\\"EmpMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\n        </div>\\n\\n    </div>\\n\\n    <div class=\\\"form-row\\\">\\n\\n\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label> Address </label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpMob\\\" class=\\\"form-control\\\" formControlName=\\\"EmpMob\\\" name=\\\"EmpMob\\\" (keypress)=\\\"numberOnly($event)\\\" maxlength=\\\"10\\\">\\n        </div>\\n\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label> City</label>\\n            <select [(ngModel)]=\\\"EmpCity\\\" formControlName=\\\"EmpCity\\\" name=\\\"EmpCity\\\" class=\\\"form-control\\\" (change)=\\\"filterForeCasts($event.target.value)\\\">\\n                <option value=\\\"Pune\\\" selected>Pune</option>\\n                <option value=\\\"Mumbai\\\">Mumbai</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label> State</label>\\n            <select [(ngModel)]=\\\"EmpState\\\" formControlName=\\\"EmpState\\\" name=\\\"EmpState\\\" class=\\\"form-control\\\" (change)=\\\"filterForeCasts($event.target.value)\\\">\\n\\n                <option value=\\\"Maharastra\\\" selected>Maharastra</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group col-md-4\\\">\\n            <label> Pincode</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"EmpPincode\\\" class=\\\"form-control\\\" formControlName=\\\"EmpPincode\\\" name=\\\"EmpPincode\\\" (keypress)=\\\"numberOnly($event)\\\">\\n        </div>\\n\\n    </div>\\n\\n    <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">\\n    <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Cancel\\\">\\n</div>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\n        <hr />\\n\\n        <form [formGroup]=\\\"AddPlanForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n            <div style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\"> \\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"name\\\">Plan Name</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipName\\\" class=\\\"form-control\\\" formControlName=\\\"MbrShipName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipName.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.MbrShipName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.MbrShipName.errors.required\\\">\\n                            Plan Name is required.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Amount </label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipAmt\\\" class=\\\"form-control\\\" formControlName=\\\"MbrShipAmt\\\" (keypress)=\\\"numberOnly($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipAmt.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.MbrShipAmt.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.MbrShipAmt.errors.required\\\">\\n                            Please enter amount.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Duration (Days) </label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipDurationInDays\\\" class=\\\"form-control\\\" formControlName=\\\"MbrShipDurationInDays\\\" (keypress)=\\\"numberOnly($event)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipDurationInDays.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.MbrShipDurationInDays.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.MbrShipDurationInDays.errors.required\\\">\\n                            Enter Plan Duration.\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"name\\\">Start Date</label>\\n                    <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"StartDt\\\" formControlName=\\\"StartDt\\\">\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> End Date</label>\\n                    <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"EndDt\\\" formControlName=\\\"EndDt\\\">\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Description </label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"Description\\\" class=\\\"form-control\\\" formControlName=\\\"Description\\\" >\\n                </div>\\n            </div>\\n              \\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\n        </form>\\n\\n    </div>\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">{{modelheaderval}}</h4>\\n\\n        <form [formGroup]=\\\"AddPTForm\\\"  action=\\\"#\\\">\\n\\n            <div style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrUserId\\\" formControlName=\\\"MbrUserId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"TrainerId\\\" formControlName=\\\"TrainerId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MembershipType\\\" formControlName=\\\"MembershipType\\\" style=\\\"display:none\\\" value=\\\"PT\\\">\\n                \\n            </div>\\n             \\n            <div>\\n                <hr />\\n                <div class=\\\"form-row \\\">\\n                    <h5 class=\\\"mb-2\\\">Personal Training Plan</h5>\\n                </div>\\n                <div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <label>Select Member</label>\\n                            <select formControlName=\\\"MbrId\\\" [(ngModel)]=\\\"MbrId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrId.errors }\\\">\\n                                <option *ngFor=\\\"let mbr of _PTMembers\\\" value={{mbr.MbrId}}>\\n                                    {{mbr.MbrName}}\\n                                </option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fval.MbrId.errors\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"fval.MbrId.errors.required\\\">\\n                                    Member is required.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>PT Traning Plan</label>\\n                        <select formControlName=\\\"MbrShipId\\\" [(ngModel)]=\\\"MbrShipId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipId.errors }\\\">\\n\\n                            <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\n                                {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\n                            </option>\\n                        </select>\\n                        <div *ngIf=\\\"submitted && fval.MbrShipId.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.MbrShipId.errors.required\\\">\\n                                Membership Plan is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Training Days</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPtDays\\\" formControlName=\\\"MbrPtDays\\\" disabled>\\n\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>PT Trainer Name</label>\\n                        <select formControlName=\\\"TrainerId\\\" [(ngModel)]=\\\"TrainerId\\\" class=\\\"form-control\\\" (change)=\\\"showPTTrainerCharges($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.TrainerId.errors }\\\">\\n\\n                            <option *ngFor=\\\"let plan of _PTTrainer\\\" value={{plan.MbrId}}>\\n                                {{plan.MbrName}}\\n                            </option>\\n                        </select>\\n                        <div *ngIf=\\\"submitted && fval.TrainerId.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.TrainerId.errors.required\\\">\\n                              Trainer Name is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>PT Charges</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrPTChargesofTrainer\\\" formControlName=\\\"MbrPTChargesofTrainer\\\" disabled> \\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Paid Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PaidAmt\\\" [(ngModel)]=\\\"PaidAmt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidAmt.errors }\\\">\\n                        <div *ngIf=\\\"submitted && fval.PaidAmt.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.PaidAmt.errors.required\\\">\\n                                Paid amount is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Paid By</label>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PaidBy\\\" [(ngModel)]=\\\"PaidBy\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidBy.errors }\\\">\\n\\n                            <option value=\\\"Cash\\\">Cash</option>\\n                            <option value=\\\"Card\\\">Card</option>\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\n\\n                        </select>\\n                        <div *ngIf=\\\"submitted && fval.PaidBy.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.PaidBy.errors.required\\\">\\n                               Paid by is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Paid Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidDt\\\" formControlName=\\\"PaidDt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidDt.errors }\\\">\\n                        <div *ngIf=\\\"submitted && fval.PaidDt.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.PaidDt.errors.required\\\">\\n                                Paid Date is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Start Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" (change)=\\\"onDateChange($event)\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> End Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Discription\\\" [(ngModel)]=\\\"Discription\\\">\\n\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n            <!--<input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">-->\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"{{btnVal}}\\\">\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\n        </form>\\n    </div>\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Add Remaining Balance</h4>\\n\\n        <form [formGroup]=\\\"AddRemBalForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n\\n            <div style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrShipId\\\" formControlName=\\\"MbrShipId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MembershipType\\\" formControlName=\\\"MembershipType\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\" style=\\\"display:none\\\">\\n            </div>\\n             \\n            <div>\\n                <hr /> \\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Member Name</label> \\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrName\\\" formControlName=\\\"MbrName\\\" disabled>\\n                            \\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Remaining Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"RemBalance\\\" formControlName=\\\"RemBalance\\\" disabled>\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Paid Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PaidAmt\\\" [(ngModel)]=\\\"PaidAmts\\\">\\n\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Balance Amount</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"BalRemaining\\\" [(ngModel)]=\\\"BalRemaining\\\">\\n                    </div>\\n                      \\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Paid Date</label>\\n                        <input type=\\\"date\\\" (keypress)=\\\"numberOnly($event)\\\" onfocus=\\\"(this.type='date')\\\" onblur=\\\"(this.type='text')\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidDt\\\" formControlName=\\\"PaidDt\\\">\\n\\n                    </div>\\n                     \\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label> Paid By</label>\\n                        <select class=\\\"form-control\\\" formControlName=\\\"PaidBy\\\" [(ngModel)]=\\\"PaidByddl\\\">\\n\\n                            <option value=\\\"Cash\\\">Cash</option>\\n                            <option value=\\\"Card\\\">Card</option>\\n                            <option value=\\\"Gpay\\\">Gpay</option>\\n                            <option value=\\\"PhonePay\\\">PhonePay</option>\\n\\n                        </select>\\n                    </div>\\n\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Description</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Discription\\\" [(ngModel)]=\\\"Discription\\\"> \\n                    </div> \\n                </div>\\n            </div>\\n\\n        \\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Submit\\\">\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\n        </form>\\n    </div>\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n\\n        <form [formGroup]=\\\"AddInvoiceForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Select Year</label>\\n                    <select formControlName=\\\"InvoiceYear\\\" (change)=\\\"ShowMembersByYear($event.target.value)\\\" [(ngModel)]=\\\"InvoiceYear\\\" class=\\\"form-control\\\">\\n                        <option value=\\\"2023\\\">2023</option>\\n                        <option value=\\\"2022\\\">2022</option>\\n                        <option value=\\\"2021\\\">2021</option>\\n                        <option value=\\\"2020\\\">2020</option>\\n                    </select>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Select Member</label>\\n                    <select formControlName=\\\"MbrId\\\" [(ngModel)]=\\\"MbrId\\\" class=\\\"form-control\\\" (change)=\\\"GetInvoiceList($event.target.value)\\\" >\\n                        <option *ngFor=\\\"let mbr of _InvoiceMbrs\\\" value={{mbr.MbrId}}>\\n                            {{mbr.MbrName}}\\n                        </option>\\n                    </select>\\n                     \\n                </div>\\n\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Select Invoice</label>\\n                    <select formControlName=\\\"MbrUserId\\\" [(ngModel)]=\\\"MbrUserId\\\" class=\\\"form-control\\\" (change)=\\\"ShowInvoice($event.target.value)\\\" >\\n                        <option *ngFor=\\\"let mbr of _InvoiceMbrsList\\\" value={{mbr.MbrUserId}}>\\n                            {{mbr.MembershipType}}\\n                        </option>\\n                    </select>\\n                   \\n                </div>\\n            </div>\\n\\n            <div class=\\\"invoice\\\"  *ngIf=\\\"DispayInvoice\\\">\\n                <div class=\\\"header\\\">\\n                    <h1>INVOICE</h1>\\n                    <h2>Number: {{InvoiceNumber}}</h2>\\n                </div>\\n                <div class=\\\"client-details\\\">\\n                    <h3>Client Details:</h3>\\n                    <p>{{GymName}}</p>\\n                    <p>{{GymAddress}}</p>\\n                    <p>{{GymContactNo}}</p>\\n                </div>\\n                <div class=\\\"invoice-details\\\">\\n                    <h3>Invoice Details</h3>\\n                    <p>Date: {{PaidDt}}</p> \\n                </div>\\n                <table class=\\\"invoice-table\\\">\\n                    <tr>\\n                        <th>Service Name</th>\\n                        <th>Price</th>\\n                    </tr>\\n                    <tr>\\n                        <td>{{Serivice1}}</td>\\n                        <td>{{PaidAmt}}</td>\\n                    </tr>\\n                    <!-- Add additional services as needed -->\\n                </table>\\n                <div class=\\\"total\\\">\\n                    <h3>Total: {{PaidAmt}}</h3>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Reports</h4>\\n\\n        <form [formGroup]=\\\"AllReportsForm\\\" action=\\\"#\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <div>\\n                <hr />\\n                <div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <input type=\\\"radio\\\" id=\\\"rdEyr\\\" value=\\\"YearlyReport\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\n                            <label for=\\\"rdEyr\\\">Member Yearly Report</label><br>\\n                        </div>\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <input type=\\\"radio\\\" id=\\\"rdFR\\\" value=\\\"FinantialReport\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\n                            <label for=\\\"rdFR\\\">Finantial Report</label><br>\\n                        </div>\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <input type=\\\"radio\\\" id=\\\"rdSummury\\\" value=\\\"Summury\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\n                            <label for=\\\"rdSummury\\\">Summury</label><br>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <input type=\\\"radio\\\" id=\\\"rdMr\\\" value=\\\"MbrShipReport\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\n                            <label for=\\\"rdMr\\\">Membership Report</label><br>\\n                        </div>\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <input type=\\\"radio\\\" id=\\\"edPt\\\" value=\\\"PersonalTraining\\\" name=\\\"allReports\\\" (change)=\\\"OnReportChanges($event)\\\">\\n                            <label for=\\\"edPt\\\">Personal Training</label><br>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Submit\\\">\\n            </div>\\n            <div>\\n                <div class=\\\"form-row\\\">\\n                    <h3> Report</h3><br>\\n                </div>\\n            </div>\\n            <div>\\n                <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                                 class=\\\"ag-theme-alpine\\\"\\n                                 [columnDefs]=\\\"columnDefs\\\"\\n                                 [animateRows]=\\\"true\\\"\\n                                 (gridReady)=\\\"onGridReady($event)\\\"\\n                                 [rowData]=\\\"rowData\\\"\\n                                 pagination=\\\"true\\\"\\n                                 paginationPageSize=\\\"20\\\">\\n                </ag-grid-angular>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\"","export default \"<body>\\r\\n  <!--<app-nav-menu></app-nav-menu>-->\\r\\n  <div class=\\\"container-fluid p-0\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p aria-live=\\\"polite\\\">Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n        <div style=\\\"margin-bottom:5px;\\\">\\n            <button class=\\\"btn-info\\\" (click)=\\\"AddEmployee()\\\">Add Member</button>\\n        </div>\\n        <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\" \\n                         class=\\\"ag-theme-alpine\\\"\\n                         [columnDefs]=\\\"columnDefs\\\"\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\n                         [animateRows]=\\\"true\\\"\\n                         [rowData]=\\\"rowData\\\"\\n                         pagination=\\\"true\\\"\\n                         paginationPageSize=\\\"20\\\">\\n        </ag-grid-angular>\\n    </div>\\n</div>\\n\"","export default \"<h1 id=\\\"tableLabel\\\">Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' aria-labelledby=\\\"tableLabel\\\" *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.date }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n        <button class=\\\"btn-info\\\" (click)=\\\"AddEmployee()\\\">Add New Branch</button>\\n        <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                         class=\\\"ag-theme-alpine\\\"\\n                         [columnDefs]=\\\"columnDefs\\\"\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\n                         [animateRows]=\\\"true\\\"\\n                         pagination=\\\"true\\\"\\n                         paginationPageSize=\\\"20\\\">\\n        </ag-grid-angular>\\n    </div>\\n</div>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n        <div style=\\\"margin-bottom:5px;\\\">\\n            <button class=\\\"btn-info\\\" (click)=\\\"AddExpense()\\\">Add Expense</button>\\n        </div>\\n        <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                         class=\\\"ag-theme-alpine\\\"\\n                         [columnDefs]=\\\"columnDefs\\\"\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\n                         [animateRows]=\\\"true\\\"\\n                         pagination=\\\"true\\\"\\n                         paginationPageSize=\\\"20\\\">\\n        </ag-grid-angular>\\n    </div>\\n</div>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Profile</h4>\\n        <hr />\\n        <form [formGroup]=\\\"GymProfileForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n            <div style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"GymProfileId\\\" formControlName=\\\"GymProfileId\\\" style=\\\"display:none\\\">\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Gym Name</label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"GymName\\\" formControlName=\\\"GymName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.GymName.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.GymName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.GymName.errors.required\\\">\\n                            Gym Name is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>First Name</label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"FName\\\" formControlName=\\\"FName\\\">\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Last Name </label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"LName\\\" formControlName=\\\"LName\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Mobile No</label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MobileNumber\\\" formControlName=\\\"MobileNumber\\\" maxlength=\\\"10\\\">\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Address</label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Address\\\" formControlName=\\\"Address\\\">\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Email Id</label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"EMailId\\\" formControlName=\\\"EMailId\\\">\\n                </div>\\n\\n            </div>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> MemberShip Plan </label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrShipName\\\" formControlName=\\\"MbrShipName\\\" disabled>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Amount Paid </label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidAmt\\\" formControlName=\\\"PaidAmt\\\" disabled>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Start Date</label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\" disabled>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Expired </label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\" disabled>\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> MemberShip Status </label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"mbrShipStatus\\\" formControlName=\\\"mbrShipStatus\\\" disabled>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> GST No </label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"GSTNo\\\" formControlName=\\\"GSTNo\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Website </label><br />\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Website\\\" formControlName=\\\"Website\\\">\\n                </div>\\n            </div>\\n\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" value=\\\"Update Profile\\\" (click)=\\\"onSubmit('Update Profile')\\\">\\n\\n            <div class=\\\"form-row \\\">\\n                <h5 class=\\\"mb-2\\\">Change Password</h5>\\n            </div>\\n            <hr />\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Old Password</label>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"OldPassword\\\" formControlName=\\\"OldPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.OldPassword.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.OldPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.OldPassword.errors.required\\\">\\n                            Old password is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>New Password</label>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"NewPassword\\\" formControlName=\\\"NewPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.NewPassword.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.NewPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.NewPassword.errors.required\\\">\\n                            New password is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Conform password</label>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"ConfirmPassword\\\" formControlName=\\\"ConfirmPassword\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.ConfirmPassword.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.ConfirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.ConfirmPassword.errors.required\\\">\\n                            Conformed password is required.\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" value=\\\"Update Password\\\" (click)=\\\"onSubmit('Update Password')\\\">\\n\\n        </form>\\n    </div>\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n        <!-- Main content -->\\n        <section class=\\\"content\\\">\\n            <div class=\\\"container-fluid\\\">\\n                <!-- Small boxes (Stat box) -->\\n                <div class=\\\"row text-center\\\" >\\n                    <div class=\\\"col-lg-4 col-6\\\">\\n                        <!-- small box -->\\n                        <div class=\\\"small-box bg-info\\\">\\n                            <div class=\\\"inner topPadding\\\" >\\n                                <h3>Gym Members</h3>\\n                                    \\n                                <p style=\\\"font-size:20px;\\\" >{{GymMember}}</p>\\n                            </div>\\n                            <div class=\\\"icon\\\">\\n                                <i class=\\\"ion ion-bag\\\"></i>\\n                            </div>\\n                            <a href=\\\"#\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <!-- ./col -->\\n                    <div class=\\\"col-lg-4 col-6\\\">\\n                        <!-- small box -->\\n                        <div class=\\\"small-box bg-success\\\">\\n                            <div class=\\\"inner topPadding\\\">\\n                                <h3>Trainer's</h3>\\n                                <p style=\\\"font-size:20px;\\\"> {{Trainer}}</p>\\n                            </div>\\n                            <div class=\\\"icon\\\">\\n                                <i class=\\\"ion ion-stats-bars\\\"></i>\\n                            </div>\\n                            <a href=\\\"#\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <!-- ./col -->\\n                    <div class=\\\"col-lg-4 col-6\\\">\\n                        <!-- small box -->\\n                        <div class=\\\"small-box bg-warning\\\">\\n                            <div class=\\\"inner topPadding\\\">\\n                                <h3>Profetinal Trainers</h3>\\n                                <p style=\\\"font-size:20px;\\\">{{ PT }}</p>\\n                            </div>\\n                            <div class=\\\"icon\\\">\\n                                <i class=\\\"ion ion-person-add\\\"></i>\\n                            </div>\\n                            <a href=\\\"#\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <!-- ./col -->\\n                </div>\\n                <!-- /.row -->\\n                <!-- Small boxes (Stat box) -->\\n                <div class=\\\"row text-center\\\" style=\\\"margin-top:5px\\\">\\n                    <div class=\\\"col-lg-4 col-6\\\">\\n                        <!-- small box -->\\n                        <div class=\\\"small-box bg-danger\\\">\\n                            <div class=\\\"inner topPadding\\\">\\n                                <h3>Month Enqiries</h3>\\n                                <p style=\\\"font-size:20px;\\\">{{Enquiry}}</p>\\n                            </div>\\n                            <div class=\\\"icon\\\">\\n                                <i class=\\\"ion ion-bag\\\"></i>\\n                            </div>\\n                            <a href=\\\"#\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <!-- ./col -->\\n                    <div class=\\\"col-lg-4 col-6\\\">\\n                        <!-- small box -->\\n                        <div class=\\\"small-box bg-primary\\\">\\n                            <div class=\\\"inner topPadding\\\">\\n                                <h3>Membership expiring </h3>\\n                                <p style=\\\"font-size:20px;\\\"> {{ MbrShipExpiring }}</p>\\n                            </div>\\n                            <div class=\\\"icon\\\">\\n                                <i class=\\\"ion ion-stats-bars\\\"></i>\\n                            </div>\\n                            <a href=\\\"#\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <!-- ./col -->\\n                    <div class=\\\"col-lg-4 col-6\\\">\\n                        <!-- small box -->\\n                        <div class=\\\"small-box bg-secondary\\\">\\n                            <div class=\\\"inner topPadding\\\">\\n                                <h3>Event</h3>\\n                                <p style=\\\"font-size:20px;\\\">{{ Events }}</p>\\n                            </div>\\n                            <div class=\\\"icon\\\">\\n                                <i class=\\\"ion ion-person-add\\\"></i>\\n                            </div>\\n                            <a href=\\\"#\\\" class=\\\"small-box-footer text-light\\\">More info <i class=\\\"fas fa-arrow-circle-right\\\"></i></a>\\n                        </div>\\n                    </div>\\n                    <!-- ./col -->\\n                </div>\\n                <!-- /.row -->\\n                <!-- Main row -->\\n                <div class=\\\"row\\\">\\n                    <!-- Left col -->\\n                    <section class=\\\"col-lg-12 connectedSortable\\\">\\n                        <!-- Custom tabs (Charts with tabs)-->\\n                        <div class=\\\"card\\\" style=\\\"max-width:100% !important;margin:10px 0 0 0 !important;padding:0px !important\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <h3 class=\\\"card-title\\\">\\n                                    <i class=\\\"fas fa-chart-pie mr-1\\\"></i>\\n                                    Sales\\n                                </h3>\\n                            </div><!-- /.card-header -->\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"tab-content p-0\\\">\\n                                    <ngx-charts-bar-vertical [view]=\\\"[1000,400]\\\"\\n                                                             [results]=\\\"saleData\\\"\\n                                                             [xAxisLabel]=\\\"'Months'\\\"\\n                                                             [legendTitle]=\\\"'Sale Chart'\\\"\\n                                                             [yAxisLabel]=\\\"'Sales'\\\"\\n                                                             [legend]=\\\"true\\\"\\n                                                             [showXAxisLabel]=\\\"true\\\"\\n                                                             [showYAxisLabel]=\\\"true\\\"\\n                                                             [xAxis]=\\\"true\\\"\\n                                                             [yAxis]=\\\"true\\\"\\n                                                             [gradient]=\\\"true\\\"\\n                                                             >\\n                                    </ngx-charts-bar-vertical>\\n                                </div>\\n                            </div><!-- /.card-body -->\\n                        </div>\\n                        <!-- /.card -->\\n                    </section>\\n                    <!-- /.Left col -->\\n                </div>\\n                <!-- /.row (main row) -->\\n                <div class=\\\"row\\\">\\n                    <section class=\\\"col-lg-12 connectedSortable\\\">\\n                        <div>\\n                            <div style=\\\"margin-bottom:5px;\\\">\\n                            <label>Last Enqiry Members</label>\\n                            </div>\\n                            <ag-grid-angular style=\\\"width: 100%; height: 300px;\\\"\\n                                             class=\\\"ag-theme-alpine\\\"\\n                                             [columnDefs]=\\\"columnDefs\\\"\\n                                             (gridReady)=\\\"onGridReady($event)\\\"\\n                                             [animateRows]=\\\"true\\\"\\n                                             pagination=\\\"true\\\"\\n                                             paginationPageSize=\\\"20\\\">\\n                            </ag-grid-angular>\\n                        </div>\\n                    </section>\\n                </div>\\n            </div><!-- /.container-fluid -->\\n        </section>\\n        <!-- /.content -->\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"loginFormDesign d-flex align-items-center justify-content-center \\\">\\r\\n    <div class=\\\"wrapper fadeInDown m-0\\\">\\r\\n        <div class=\\\"card m-0\\\">\\r\\n            <form [formGroup]=\\\"loginform\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\" class=\\\"d-flex flex-column\\\">\\r\\n                <div class=\\\"h3 text-center text-white\\\">Login</div>\\r\\n                <div class=\\\"d-flex align-items-center input-field my-3 mb-4\\\">\\r\\n                    <span class=\\\"far fa-user p-2\\\"></span>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"MobileNo\\\" placeholder=\\\"Mobile Number\\\" required class=\\\"form-control\\\" maxlength=\\\"10\\\">\\r\\n                </div>\\r\\n                <div class=\\\"d-flex align-items-center input-field mb-4\\\">\\r\\n                    <span class=\\\"fas fa-lock p-2\\\"></span>\\r\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\" required class=\\\"form-control\\\" id=\\\"pwd\\\" maxlength=\\\"5\\\">\\r\\n                </div>\\r\\n                <div class=\\\"d-sm-flex align-items-sm-center justify-content-sm-between\\\">\\r\\n                    <div class=\\\"d-flex align-items-center\\\"> <!--<label class=\\\"option\\\"><input type=\\\"checkbox\\\" checked> <span class=\\\"checkmark\\\"></span> </label>--> </div>\\r\\n                    <div class=\\\"mt-sm-0 mt-3\\\"><a href=\\\"#\\\">Forgot password?</a></div>\\r\\n                </div>\\r\\n                <div> <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary\\\"> </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n\\n        <h3>Members Hisory</h3>\\n        <form [formGroup]=\\\"MbrHistoryForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Select Member</label>\\n                    <select formControlName=\\\"PtMemberId\\\" [(ngModel)]=\\\"PtMemberId\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\">\\n                        <option selected>- Select -</option>\\n                        <option *ngFor=\\\"let mbr of _Members\\\" value={{mbr.MbrId}}>\\n                            {{mbr.MbrName}}\\n                        </option>\\n                    </select>\\n                </div>\\n            </div>\\n\\n            <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                             class=\\\"ag-theme-alpine\\\"\\n                             [columnDefs]=\\\"columnDefs\\\"\\n                             (gridReady)=\\\"onGridReady($event)\\\"\\n                             [frameworkComponents]=\\\"frameworkComponents\\\"\\n                             [animateRows]=\\\"true\\\"\\n                             pagination=\\\"true\\\"\\n                             [rowData]=\\\"rowData\\\"\\n                             paginationPageSize=\\\"20\\\">\\n            </ag-grid-angular>\\n        </form>\\n    </div>\\n</div>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n        <div style=\\\"margin-bottom:5px\\\">\\n            <button class=\\\"btn-info\\\" (click)=\\\"onBtnClick()\\\">Add MemberShip Plan</button>\\n        </div>\\n        <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                         class=\\\"ag-theme-alpine\\\"\\n                         [columnDefs]=\\\"columnDefs\\\"\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\n                         [animateRows]=\\\"true\\\"\\n                         pagination=\\\"true\\\"\\n                         paginationPageSize=\\\"20\\\">\\n        </ag-grid-angular>\\n    </div>\\n</div>\\n\"","export default \"<header>\\r\\n    <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"headerTitle\\\">\\r\\n                <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/Home']\\\">Gym Managment</a>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n                 [ngClass]=\\\"{ show: isExpanded }\\\" style=\\\"width:70%\\\">\\r\\n                <ul class=\\\"navbar-nav mr-auto horizontal\\\">\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link\\\">Gym Details</a>\\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/MbrPlans']\\\">MemberShip Plans</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/MembershipHistory']\\\"> Attendend</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link \\\">Gym Member</a> \\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/Employee']\\\">Members</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/PTDetails']\\\">Personal Training</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/RenewalMembership']\\\">Renewal Memberships</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/RemainingBalance']\\\">Remaining Balance</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/MembershipHistory']\\\"> Members History</a>\\r\\n                                 \\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link\\\">Account</a>\\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/GymExpenses']\\\">Expenses</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/AllInvoices']\\\">All Invoices</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/AllReports']\\\">Reports</a>\\r\\n\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                        <a class=\\\"nav-link\\\">Profile</a>\\r\\n                        <ul class=\\\"navBackColor\\\">\\r\\n                            <li>\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/GymProfile']\\\">Gym Profile</a> \\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/AppSupport']\\\">Support</a>\\r\\n\\r\\n                                <a class=\\\"nav-link text-dark\\\" [routerLink]=\\\"['/SendMessage']\\\">Send Message</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\"\\r\\n                 [ngClass]=\\\"{ show: isExpanded }\\\">\\r\\n                <ul class=\\\"navbar-nav mr-auto horizontal\\\"> \\r\\n                    <li class=\\\"rightli\\\" [routerLinkActive]=\\\"['link-active']\\\" style=\\\"cursor:pointer;\\\" (click)=\\\"logout()\\\">\\r\\n                        <a class=\\\"nav-link \\\">Logout</a> <!--[routerLink]=\\\"['/Employee']\\\"--> \\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n         <label>Members Payment</label>\\n        <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                         class=\\\"ag-theme-alpine\\\"\\n                         [columnDefs]=\\\"columnDefs\\\"\\n                         (gridReady)=\\\"onGridReady($event)\\\" \\n                         [animateRows]=\\\"true\\\"\\n                         pagination=\\\"true\\\"\\n                         paginationPageSize=\\\"20\\\">\\n        </ag-grid-angular>\\n    </div>\\n</div>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n        <div style=\\\"margin-bottom:5px;\\\">\\n            <button class=\\\"btn-info\\\" (click)=\\\"AddPT()\\\">Add Personal Training</button>\\n        </div>\\n        <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                         class=\\\"ag-theme-alpine\\\"\\n                         [columnDefs]=\\\"columnDefs\\\"\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\n                         [animateRows]=\\\"true\\\"\\n                          [rowData]=\\\"rowData\\\"\\n                         pagination=\\\"true\\\"\\n                         paginationPageSize=\\\"20\\\">\\n        </ag-grid-angular>\\n    </div>\\n</div>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div>\\n         \\n        <h3>Remaining Balances</h3>\\n        <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                         class=\\\"ag-theme-alpine\\\"\\n                         [columnDefs]=\\\"columnDefs\\\"\\n                         (gridReady)=\\\"onGridReady($event)\\\"\\n                         [frameworkComponents]=\\\"frameworkComponents\\\"\\n                         [animateRows]=\\\"true\\\"\\n                         pagination=\\\"true\\\"\\n                         paginationPageSize=\\\"20\\\">\\n        </ag-grid-angular>\\n    </div>\\n</div>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n<div class=\\\"wrapper fadeInDown\\\">\\n     <h3>Renewal Membership</h3>\\n    <ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                     class=\\\"ag-theme-alpine\\\"\\n                     [columnDefs]=\\\"columnDefs\\\"\\n                     (gridReady)=\\\"onGridReady($event)\\\"\\n                     [frameworkComponents]=\\\"frameworkComponents\\\"\\n                     [animateRows]=\\\"true\\\"\\n                     pagination=\\\"true\\\"\\n                     (rowClicked)='onRowClicked($event)'\\n                     paginationPageSize=\\\"20\\\">\\n    </ag-grid-angular>\\n</div>\\n \"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Renewal Payment</h4>\\n        <hr />\\n        <form [formGroup]=\\\"RenewalPaymentForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n\\n            <div style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MbrId\\\" formControlName=\\\"MbrId\\\" style=\\\"display:none\\\">\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"MembershipType\\\" formControlName=\\\"MembershipType\\\" style=\\\"display:none\\\">\\n                \\n            </div>\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Member Name </label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrName\\\" formControlName=\\\"MbrName\\\" disabled>\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Batch</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"MbrBatch\\\" [(ngModel)]=\\\"MbrBatch\\\">\\n\\n                        <option value=\\\"Morning\\\">Morning</option>\\n                        <option value=\\\"Afternoon\\\">Afternoon</option>\\n                        <option value=\\\"Evening\\\">Evening</option>\\n\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Plan Name</label>\\n\\n                    <select formControlName=\\\"MbrShipId\\\" [(ngModel)]=\\\"MbrShipId\\\" class=\\\"form-control\\\" (change)=\\\"showMemberShipPlan($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrShipId.errors }\\\">\\n\\n                        <option *ngFor=\\\"let plan of _MbrPlans\\\" value={{plan.MbrShipId}}>\\n                            {{plan.MbrShipName}} -({{plan.MbrShipDurationInDays}})\\n                        </option>\\n                    </select>\\n                    <div *ngIf=\\\"submitted && fval.MbrShipId.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.MbrShipId.errors.required\\\">\\n                            Plan is required.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Charges </label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrShipCharges\\\" formControlName=\\\"MbrShipCharges\\\" disabled>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Days </label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Days\\\" formControlName=\\\"Days\\\" disabled>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Paid Amount </label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidAmt\\\" formControlName=\\\"PaidAmt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidAmt.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.PaidAmt.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.PaidAmt.errors.required\\\">\\n                            Paid Amount is required.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Paid By</label>\\n                    <select class=\\\"form-control\\\" formControlName=\\\"PaidBy\\\" [(ngModel)]=\\\"PaidBy\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidBy.errors }\\\">\\n\\n                        <option value=\\\"Cash\\\">Cash</option>\\n                        <option value=\\\"Card\\\">Card</option>\\n                        <option value=\\\"Gpay\\\">Gpay</option>\\n                        <option value=\\\"PhonePay\\\">PhonePay</option> \\n                    </select>\\n\\n                    <div *ngIf=\\\"submitted && fval.PaidBy.errors\\\" class=\\\"invalid-feedback\\\" >\\n                        <div *ngIf=\\\"fval.PaidBy.errors.required\\\">\\n                            Paid By is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Paid Date </label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"PaidDt\\\" formControlName=\\\"PaidDt\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.PaidDt.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.PaidDt.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.PaidDt.errors.required\\\">\\n                            Paid Date is required.\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Start Date </label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipStartDt\\\" formControlName=\\\"MbrshipStartDt\\\" (change)=\\\"onDateChange($event)\\\" >\\n                </div> \\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                  \\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label> Expire Date</label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"MbrshipEndDt\\\" formControlName=\\\"MbrshipEndDt\\\">\\n                </div>\\n            </div>\\n\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Renewed\\\">\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\n        </form>\\n    </div>\\n</div>\"","export default \"<p>salary-master works!</p>\\n\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Send Message</h4>\\n\\n        <form [formGroup]=\\\"SendMsgForm\\\" action=\\\"#\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n             \\n            <div>\\n                <hr />\\n                <div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <label>Select Member's Type'</label>\\n                            <select formControlName=\\\"MbrType\\\" [(ngModel)]=\\\"MbrType\\\" class=\\\"form-control\\\" (change)=\\\"showPersonalTrainingPlans($event.target.value)\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrType.errors }\\\">\\n                                <option>Gym Members</option>\\n                                <option>PT Members</option>\\n                                <option>Trainers</option>\\n                                <option>Managers</option>\\n                            </select>\\n                            <div *ngIf=\\\"submitted && fval.MbrType.errors\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"fval.MbrType.errors.required\\\">\\n                                    Member Types is required.\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-4\\\">\\n                            <label>Select Member</label>\\n                            <ng-multiselect-dropdown [placeholder]=\\\"'Select Members'\\\"\\n                                                     [settings]=\\\"dropdownSettings\\\"\\n                                                     [data]=\\\"_Members\\\"\\n                                                     [(ngModel)]=\\\"MbrId\\\"\\n                                                     (onSelect)=\\\"onItemSelect($event)\\\"\\n                                                     (onSelectAll)=\\\"onSelectAll($event)\\\">\\n                            </ng-multiselect-dropdown>\\n                        </div>\\n                    </div>\\n                </div>\\n           \\n                <div class=\\\"form-row\\\">\\n                    <div class=\\\"form-group col-md-4\\\">\\n                        <label>Your Message</label>\\n                        <textarea formControlName=\\\"MbrMessage\\\" [(ngModel)]=\\\"MbrMessage\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.MbrMessages.errors }\\\"></textarea>\\n                        <div *ngIf=\\\"submitted && fval.MbrMessage.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"fval.MbrMessage.errors.required\\\">\\n                                Your Message is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n\\n            <!--<input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Add\\\">-->\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\" value=\\\"Submit\\\">\\n            <input type=\\\"button\\\" class=\\\"fadeIn fourth\\\" (click)=\\\"onCancel()\\\" value=\\\"Cancel\\\">\\n        </form>\\n    </div>\\n</div>\"","export default \"<app-nav-menu></app-nav-menu>\\n\\n<div class=\\\"wrapper fadeInDown\\\">\\n    <div class=\\\"p-2\\\">\\n\\n        <form [formGroup]=\\\"AppSuportForm\\\" (ngSubmit)=\\\"onSubmit()\\\" action=\\\"#\\\">\\n            <h3>Contact Form</h3>\\n            <hr />\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                     \\n                </div>\\n                <div class=\\\"form-group col-md-4\\\" style=\\\"text-align:center\\\">\\n                    <h2>Contact Info</h2> <br /><br />\\n                    <label style=\\\"color:gray\\\">Email :- Chetan9258@gmail.com</label> <br />\\n                    <label style=\\\"color:gray\\\">Mobile No:- 9021790408</label> \\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Your Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SupportName\\\" [(ngModel)]=\\\"SupportName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportName.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.SupportName.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.SupportName.errors.required\\\">\\n                            Name is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Your Email/ Contact No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"SupportContact\\\" [(ngModel)]=\\\"SupportContact\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportContact.errors }\\\">\\n                    <div *ngIf=\\\"submitted && fval.SupportContact.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.SupportContact.errors.required\\\">\\n                            Email/ Contact No is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Select Subject</label>\\n                    <select formControlName=\\\"SupportSubject\\\" [(ngModel)]=\\\"SupportSubject\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportSubject.errors }\\\">\\n                        <option value=\\\"2021\\\">Web Loading Issue</option>\\n                        <option value=\\\"2023\\\">Gym Members Issue</option>\\n                        <option value=\\\"2022\\\">Report Issue</option>\\n                        <option value=\\\"2020\\\">Others</option>\\n                    </select>\\n                    <div *ngIf=\\\"submitted && fval.SupportSubject.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.SupportSubject.errors.required\\\">\\n                            Subject is required.\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label>Your Message</label>\\n                    <textarea formControlName=\\\"SupportBody\\\" [(ngModel)]=\\\"SupportBody\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.SupportBody.errors }\\\"></textarea>\\n                    <div *ngIf=\\\"submitted && fval.SupportBody.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"fval.SupportBody.errors.required\\\">\\n                            Your Message is required.\\n                        </div>\\n                    </div>\\n                </div>\\n               \\n            </div>\\n            <input type=\\\"submit\\\" class=\\\"fadeIn fourth\\\">\\n        </form>\\n    </div>\\n</div>\\n\\n\"","export default \"<p>trainers-history works!</p>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular'\r\nimport { Router } from '@angular/router';\r\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n    selector: 'app-btn-renderer',\r\n    template: '<img (click)=\"OnEditClick($event)\" src=\"./assets/Edit_img.png\" alt=\"\" class = \"picture1\" />',\r\n    /*styleUrls: ['./btn-cell-renderer.component.css']*/\r\n})\r\nexport class BtnRendererComponent implements ICellRendererAngularComp {\r\n    params;\r\n    constructor(private gymServices: GymService, private _router: Router) { }\r\n    _MbrPlans: any;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n    }\r\n\r\n    refresh(param?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    OnEditClick($event) {\r\n\r\n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data,\r\n            // ...something\r\n        }\r\n        //return this._router.navigate([\"/AddEmployee\"]);\r\n        this.params.onClick(params);\r\n\r\n    }\r\n\r\n     \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular'\r\nimport { Router } from '@angular/router';\r\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n    selector: 'app-btn-renderer',\r\n    template: '<img (click)=\"OnEditClick($event)\" src=\"./assets/Edit_img.png\" alt=\"\" class = \"picture1\" />',\r\n    /*styleUrls: ['./btn-cell-renderer.component.css']*/\r\n})\r\nexport class EditBtnRendererComponent implements ICellRendererAngularComp {\r\n    params;\r\n    constructor(private gymServices: GymService, private _router: Router) { }\r\n    _MbrPlans: any;\r\n\r\n    agInit(params): void {\r\n        this.params = params;\r\n    }\r\n\r\n    refresh(param?: any): boolean {\r\n        return true;\r\n    }\r\n\r\n    OnEditClick($event) {\r\n\r\n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data,\r\n            // ...something\r\n        }\r\n        //return this._router.navigate([\"/AddEmployee\"]);\r\n        this.params.onClick(params);\r\n\r\n    }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1lbXBsb3llZS9hZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","\r\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\r\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport { DatePipe } from '@angular/common'\r\n\r\n//import { debug } from 'console';\r\n\n@Component({\n    selector: 'app-add-employee',\n    templateUrl: './add-employee.component.html',\n    styleUrls: ['./add-employee.component.css']\n})\nexport class AddEmployeeComponent implements OnInit {\n\n    AddEmpForm: FormGroup;\n    _MbrPlans: MbrShipPlanClass[] = [];\n    _Members: GymMembersClass[] = [];\n    _PTMembers: GymMembersClass[] = [];\n    _PTTrainer: GymMembersClass[] = [];\n    submitted = false;\r\n\n    MbrTypeddl: any;\n    MbrCityddl: any;\n    MbrStateddl: any;\n    MbrPaidByddl: any;\n    MbrGenderddl: any;\n    MbrPlansddl: any;\n\n\n    MbrId: string;\n    sal_Id: string;\n    MbrShipId: string;\n    MbrUserId: string;\n    MbrType: string;\n    MbrshipAmt: string;\n    MbrshipDays: string;\n    MbrName: string;\n    MbrMob: string\n    MbrMob2: string;\n    MbrDOB: string;\n    MbrGender: string; \n    MbrDOE: string;  \n    MbrEmail: string;\n    MbrAddr: string;\n    MbrCity: string;\n    MbrState: string;\n    MbrPincode: string;\n    MbrSalary: string;\n    SalDesc: string;\n    GeneralDesc: string;\n    MbrCertificationDt: string;\n    EmpName: string;\n    RemBalance: string;\n    MbrCertification: string;\n    MbrPlans: string;\n    MbrshipPaidAmt: string;\n    MbrPTCharges: string;\n    MbrBatch: string;\n    MbrshipStartDt: string;\n    MbrshipEndDt: string;\n    MbrshipDesc: string;\n    MbrPaidBy: string;\n    btnVal: any;\n    modelheaderval: any;\n\n    MbrPTPlanId: string;\n    MbrPtDays: string;\n    MbrPtTrainerId: string;\n    MbrPTChargesofTrainer: string;\n    MbrPTAmt: string;\n    MbrPTAmtPaidBy: string;\n    MbrPTStartDt: string;\n    MbrPTEndDt: string;\n    MbrPTDesc: string;\n    PtMemberId: string;\n    IsSessionEnable: boolean;\n\n    date: Date;\r\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute, public datepipe: DatePipe  ) {\n\n    }\n\n    ngOnInit() {\n\n         this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n\n        //debugger; \n        this.btnVal = 'Save';\n        this.modelheaderval = 'Add Member';\n\n\n        this.AddEmpForm = this.formBuilder.group({\n             \n            MbrType: ['', Validators.required],\n            MbrId: [''],\n            sal_Id:[''],\n            MbrName: ['', Validators.required], \n            MbrMob: ['', [Validators.required,  Validators.minLength(10), Validators.maxLength(10)]],\n            MbrMob2: [''],\n            MbrDOB: [''],\n            MbrGender: ['', Validators.required],\n            \n            MbrDOE: [''], \n            MbrEmail: [''],\n            MbrAddr: [''],\n            MbrCity: [''],\n            MbrState: [''],\n            MbrPincode: [''],\n            MbrSalary: [''],\n            SalDesc: [''],\n            GeneralDesc: [''], \n            MbrCertification: [''],\n            MbrCertificationDt: [''],\n            EmpName: [''],\n            RemBalance: [''],\n            MbrPlans: [''],\n            MbrshipAmt: [''],\n            MbrshipPaidAmt: [''],\n            MbrshipDays: [''],\n            MbrshipStartDt: [''],\n            MbrshipEndDt: [''],\n            MbrshipDesc: [''],\n            MbrPaidBy: [''],\n            MbrShipId: [''],\n            MbrUserId: [''],\n            MbrPTCharges: [''],\n\n            MbrBatch: [''],\n\n\n            MbrPTPlanId: [''],\n            MbrPtDays: [''],\n            MbrPtTrainerId: [''],\n            MbrPTChargesofTrainer: [''],\n            MbrPTAmt: [''],\n            MbrPTAmtPaidBy: [''],\n            MbrPTStartDt: [''],\n            MbrPTEndDt: [''],\n            MbrPTDesc: [''],\n            PtMemberId: [''],\n\n        });\n\n        this.route.queryParams.subscribe((params) => {\n            if (params != null && params.MbrName != undefined) {\n                this.MbrId = params.MbrId;\n                this.sal_Id = params.sal_Id;\n                this.MbrShipId = params.MbrShipId;\n                this.MbrUserId = params.MbrUserId;\n                this.MbrName = params.MbrName;\n                this.MbrTypeddl = params.MbrType;\n                this.MbrMob = params.MbrMob;\n                this.MbrMob2 = params.MbrMob2;\n                this.MbrDOB = params.MbrDOB;\n                this.MbrGender = params.MbrGender;\n                this.MbrDOE = params.MbrDOE;  \n                this.MbrEmail = params.MbrEmail;\n                this.MbrAddr = params.MbrAddr;\n                this.MbrCityddl = params.MbrCity;\n                this.MbrStateddl = params.MbrState;\n                this.MbrPincode = params.MbrPincode;\n                this.MbrSalary = params.MbrSalary;\n                this.SalDesc = params.SalDesc;\n                this.GeneralDesc = params.GeneralDesc;\n                this.MbrCertification = params.MbrCertification;\n                this.MbrCertificationDt = params.MbrCertificationDt;\n                this.EmpName = params.EmpName;\n                this.RemBalance = params.RemBalance; \n                this.MbrPlansddl = params.MbrShipId;\n                this.MbrshipAmt = params.MbrShipAmt;\n                this.MbrshipPaidAmt = params.PaidAmt;\n                this.MbrshipDays = params.MbrShipDurationInDays;\n                this.MbrshipStartDt = params.MbrshipStartDt;\n                this.MbrshipEndDt = params.MbrshipEndDt;\n                this.MbrshipDesc = params.Description;\n                this.MbrPaidByddl = params.PaidBy;\n                this.MbrPTCharges = params.MbrPTCharges;\n                this.MbrBatch = params.MbrBatch;\n\n\n                this.MbrPTPlanId = params.MbrPTPlanId;\n                this.MbrPtDays = params.MbrPtDays;\n                this.MbrPtTrainerId = params.MbrPtTrainerId;\n                this.MbrPTChargesofTrainer = params.MbrPTChargesofTrainer;\n                this.MbrPTAmt = params.MbrPTAmt;\n                this.MbrPTAmtPaidBy = params.MbrPTAmtPaidBy;\n                this.MbrPTStartDt = params.MbrPTStartDt;\n                this.MbrPTEndDt = params.MbrPTEndDt;\n                this.MbrPTDesc = params.MbrPTDesc;\n                this.PtMemberId = params.PtMemberId;\n\n\n                this.btnVal = 'update';\n                this.modelheaderval = 'Update Member';\n\n            }\n        })\n\n        this.GetAllMemberShipPlan();\n        this.GetAllMembers();\n    }\n\n    get fval() {\r\n        return this.AddEmpForm.controls;\r\n    }\n\n    onSubmit() {\n        this.submitted = true;\r\n\n        if (!this.AddEmpForm.invalid) {\n            if (this.btnVal == \"Save\") {\n                this.gymServices.AddMembers(this.AddEmpForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/Employee\"]);\n                    }\n\n                }, error => alert(error.message))\n            }\n            else { // Update \n                this.gymServices.UpdateMember(this.AddEmpForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/Employee\"]);\n                    }\n\n                }, error => alert(error.message))\r\n            }\n        }\n    }\n\n    onCancel() {\n        return this._router.navigate([\"/Employee\"]);\r\n    }\n\n    GetAllMemberShipPlan() {\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\n            this._MbrPlans = res;\n            // data contains actual array of users\n        },\n            error => alert(error.message));\r\n    }\n\n    GetAllMembers() {\n        debugger;\n        this.gymServices.GetAllMembers().subscribe(result => {\n            if (!isNull(result)) {\n                this._Members = result;\n                this._PTMembers = result.filter(x => x.MbrType == \"GymMember\");\n                this._PTTrainer = result.filter(x => x.MbrType == \"FloorManager\" || x.MbrType == \"Trainer\");\n\n            }\n        }, error => alert(error.message))\n    }\n\n    filterForeCasts(value) {\n        this.MbrTypeddl = value;\r\n    }\n\n    showMemberShipPlan(value) {\n\n        this.MbrshipAmt = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipAmt.toString();\r\n        this.MbrshipDays = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\r\n\r\n    }\n\n    showPersonalTrainingPlans(value) {\r\n\r\n        this.MbrPtDays = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\r\n\r\n    }\n\n    onDateChange(value) { \r\n        this.date = new Date(value.srcElement.value);\r\n        this.date.setDate(this.date.getDate() + +this.MbrshipDays);\r\n        this.MbrshipEndDt = this.datepipe.transform(this.date, 'yyyy-MM-dd'); \n    }\n\n    onDOBSelect(value) {\r\n        this.date = new Date(value.srcElement.value);\n        let timeDiff = Math.abs(Date.now() - this.date.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        if (age < 18) {\n            alert('Age must be greater than 18');\n            this.MbrDOB = '';\n        }\n    }\n    \n\n    showPTTrainerCharges(value) {\r\n\r\n        this.MbrPTChargesofTrainer = this._PTTrainer.find(x => x.MbrId == value).MbrPTCharges\r\n\r\n    }\n     \n    numberOnly(event): boolean {\r\n        const charCode = (event.which) ? event.which : event.keyCode;\r\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1leHBlbnNlcy9hZGQtZXhwZW5zZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\n\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\n\n@Component({\n    selector: 'app-add-expenses',\n    templateUrl: './add-expenses.component.html',\n    styleUrls: ['./add-expenses.component.css']\n})\nexport class AddExpensesComponent implements OnInit {\n\n    AddExpensesForm: FormGroup;\n    ExpensesId: string;\n    ExpenseDate: string;\n    Category: string;\n    SubCategory: string;\n    Amount: string;\n    Description: string;\n    btnVal: any;\n    modelheaderval: any;\n    submitted = false;\n    IsSessionEnable : boolean;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.btnVal = 'Save';\n        this.modelheaderval = 'Add Expense';\n\n        this.AddExpensesForm = this.formBuilder.group({\n            ExpensesId: [''],\n            ExpenseDate: ['', Validators.required],\n            Category: ['', Validators.required],\n            Amount: ['', Validators.required], \n            Description: [''],\n        });\n\n        this.route.queryParams.subscribe((params) => {\n            debugger;\n            if (params != null && params.ExpensesId != undefined) {\n                this.ExpensesId = params.ExpensesId;\n                this.ExpenseDate = params.ExpenseDate;\n                this.Category = params.Category;\n                this.SubCategory = params.SubCategory;\n                this.Amount = params.Amount;\n                this.Description = params.Description;\n\n                this.btnVal = 'update';\n                this.modelheaderval = 'Update Expenses';\n\n            }\n        })\n\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        if (!this.AddExpensesForm.invalid) {\n            if (this.btnVal == \"Save\") {\n                this.gymServices.CreateExpense(this.AddExpensesForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/GymExpenses\"]);\n                    }\n                    else {\n                        alert(\"Error.\");\n                    }\n                }, error => alert(error.message))\n            }\n            else { // Update \n                this.gymServices.UpdateExpense(this.AddExpensesForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/GymExpenses\"]);\n                    }\n                    else {\n                        alert(\"Error.\");\n                    }\n                }, error => alert(error.message))\n            }\n        }\n    }\n\n    onCancel() {\n        return this._router.navigate([\"/GymExpenses\"]);\n    }\n\n    numberOnly(event): boolean {\n        const charCode = (event.which) ? event.which : event.keyCode;\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\n            return false;\n        }\n        return true;\n\n    }\n\n    get fval() {\n        return this.AddExpensesForm.controls;\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1neW0tYnJhbmNoZXMvYWRkLWd5bS1icmFuY2hlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-gym-branches',\n  templateUrl: './add-gym-branches.component.html',\n  styleUrls: ['./add-gym-branches.component.css']\n})\nexport class AddGymBranchesComponent implements OnInit {\n\n  constructor() { }\n\n    ngOnInit() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1tZW1iZXJzaGlwLXBsYW4vYWRkLW1lbWJlcnNoaXAtcGxhbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\r\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\r\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\r\n\r\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\n\n@Component({\n    selector: 'app-add-membership-plan',\n    templateUrl: './add-membership-plan.component.html',\n    styleUrls: ['./add-membership-plan.component.css']\n})\nexport class AddMembershipPlanComponent implements OnInit {\n\n    AddPlanForm: FormGroup;\n    submitted = false;\n\n    MbrShipId: string;\n    MbrShipName: string;\n    MbrShipAmt: string;\n    MbrShipDurationInDays: string;\n    StartDt: string;\n    EndDt: string;\n    Description: string;\n\n    btnVal: any;\n    modelheaderval: any;\n    IsSessionEnable: any;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) { }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.btnVal = 'Save';\n        this.modelheaderval = 'Add Membership Plan';\n\n\n        this.AddPlanForm = this.formBuilder.group({\n\n            MbrShipId: [''],\n            MbrShipName: ['', Validators.required],\n            MbrShipAmt: ['', Validators.required],\n            MbrShipDurationInDays: ['', Validators.required],\n            StartDt: [''],\n            EndDt: [''],\n            Description: [''],\n\n        });\n\n        this.route.queryParams.subscribe((params) => {\n            if (params != null && params.MbrShipName != undefined) {\n\n                this.MbrShipId = params.MbrShipId;\n                this.MbrShipName = params.MbrShipName;\n                this.MbrShipAmt = params.MbrShipAmt;\n                this.MbrShipDurationInDays = params.MbrShipDurationInDays;\n                this.StartDt = params.StartDt;\n                this.EndDt = params.EndDt;\n                this.Description = params.Description;\n\n                this.btnVal = 'update';\n                this.modelheaderval = 'Update Plan';\n\n            }\n        })\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        if (!this.AddPlanForm.invalid) {\n            if (this.btnVal == \"Save\") {\n                this.gymServices.AddPlan(this.AddPlanForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/MbrPlans\"]);\n                    }\n                    else {\n                        alert(\"Incorrect Creiditials\");\n                    }\n                }, error => alert(error.message))\n            }\n            else { // Update \n                this.gymServices.UpdatePlan(this.AddPlanForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/MbrPlans\"]);\n                    }\n                    else {\n                        alert(\"Incorrect Creiditials\");\n                    }\n                }, error => alert(error.message))\n            }\n        }\n    }\n\n    onCancel() {\n        return this._router.navigate([\"/MbrPlans\"]);\n    }\n\n    numberOnly(event): boolean {\n        const charCode = (event.which) ? event.which : event.keyCode;\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\n            return false;\n        }\n        return true;\n\n    }\n\n    get fval() {\r\n        return this.AddPlanForm.controls;\r\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1wdGRldGFpbHMvYWRkLXB0ZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\nimport { GymMembersClass } from '../Models/GymMembersClass';\nimport { DatePipe } from '@angular/common'\n\n@Component({\n  selector: 'app-add-ptdetails',\n  templateUrl: './add-ptdetails.component.html',\n  styleUrls: ['./add-ptdetails.component.css']\n})\nexport class AddPTDetailsComponent implements OnInit {\n\n    AddPTForm: FormGroup;\n    _PTMembers: GymMembersClass[] = [];\n    _PTTrainer: GymMembersClass[] = [];\n    _MbrPlans: MbrShipPlanClass[] = [];\n    submitted = false;\n\n    MbrId: string;\n    MbrUserId: string;\n    MbrShipId: string;\n    TrainerId: string; \n    MbrPtDays: string;\n    MbrPTChargesofTrainer: string;\n    PaidAmt: string;\n    PaidBy: string;\n    PaidDt: string;\n    MbrshipStartDt: string;\n    MbrshipEndDt: string;\n    Discription: string;\n    MembershipType: string = 'PT';\n    date: Date;\n    btnVal: any;\n    modelheaderval: any;\n    IsSessionEnable: any;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute, public datepipe: DatePipe) {\n\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n\n        this.btnVal = 'Save';\n        this.modelheaderval = 'Add PT Member';\n\n        this.AddPTForm = this.formBuilder.group({\n              \n            MbrId: ['', Validators.required],\n            MbrUserId: [''],\n            MbrShipId: ['', Validators.required],\n            TrainerId: ['', Validators.required],\n            MbrPtDays: [''],  \n            PaidAmt: ['', Validators.required],\n            PaidBy: ['', Validators.required],\n            PaidDt: ['', Validators.required],\n            MbrshipStartDt: [''],\n            MbrshipEndDt: [''],\n            Discription: [''],\n            MbrPTChargesofTrainer: [''],\n            MembershipType: [''],\n            \n        });\n\n        \n\n        this.route.queryParams.subscribe((params) => {\n            if (params != null && params.MbrName != undefined) {\n\n                //this.GetAllMemberShipPlan();\n                //this.GetAllMembers();\n\n                this.MbrId = params.MbrId;\n                this.MbrUserId = params.MbrUserId;\n                this.MbrShipId = params.MbrShipId;\n                this.TrainerId = params.TrainerId; \n                //this.MbrPtDays = params.MbrPtDays;  \n                //this.showPersonalTrainingPlans(params.MbrShipId)\n                this.PaidAmt = params.PaidAmt;\n                this.PaidBy = params.PaidBy;\n                this.PaidDt = params.PaidDt;\n                this.MbrshipStartDt = params.MbrshipStartDt;\n                this.MbrshipEndDt = params.MbrshipEndDt;\n                this.Discription = params.Discription;\n                this.MembershipType = 'PT';\n                \n                //this.MbrPTChargesofTrainer = params.MbrPTChargesofTrainer;\n                //this.showPTTrainerCharges(params.MbrId)\n\n                this.btnVal = 'update';\n                this.modelheaderval = 'Update Member';\n\n\n\n            }\n        })\n        this.GetAllMemberShipPlan();\n        this.GetAllMembers();\n       \n\n    }\n\n    get fval() {\n        return this.AddPTForm.controls;\n    }\n\n    onSubmit() {\n        this.submitted = true;\n\n        if (!this.AddPTForm.invalid) {\n            if (this.btnVal == \"Save\") {\n                 \n                debugger;\n                this.gymServices.AddPTMembers(this.AddPTForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/PTDetails\"]);\n                    }\n\n                }, error => alert(error.message))\n            }\n            else { // Update \n                this.gymServices.UpdatePTMembers(this.AddPTForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(result);\n                        return this._router.navigate([\"/PTDetails\"]);\n                    }\n\n                }, error => alert(error.message))\n            }\n        }\n    }\n\n    onCancel() {\n        return this._router.navigate([\"/PTDetails\"]);\n    }\n  \n    GetAllMemberShipPlan() {\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\n            this._MbrPlans = res;\n            if (this.MbrShipId != undefined) {\n                this.showPersonalTrainingPlans(this.MbrShipId)\r\n            }\n             \n        },\n            error => alert(error.message));\n    }\n\n    onDateChange(value) {\r\n        this.date = new Date(value.srcElement.value);\r\n        this.date.setDate(this.date.getDate() + +this.MbrPtDays);\r\n        this.MbrshipEndDt = this.datepipe.transform(this.date, 'yyyy-MM-dd');\n    }\n\n\n    GetAllMembers() {\n        debugger;\n        this.gymServices.GetAllMembers().subscribe(result => {\n            if (!isNull(result)) {\n                this._PTMembers = result.filter(x => x.MbrType == \"GymMember\");\n                this._PTTrainer = result.filter(x => x.MbrType == \"FloorManager\" || x.MbrType == \"Trainer\");\n\n                if (this.TrainerId != undefined) {\n                    this.showPTTrainerCharges(this.TrainerId)\r\n                }\n\n            }\n        }, error => alert(error.message))\n    }\n\n    showPersonalTrainingPlans(value) {\n\n        this.MbrPtDays = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\n\n    }\n     \n\n    showPTTrainerCharges(value) {\n         \n        this.MbrPTChargesofTrainer = this._PTTrainer.find(x => x.MbrId == value).MbrPTCharges\n\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1yZW1haW5pbmctYmFsYW5jZS9hZGQtcmVtYWluaW5nLWJhbGFuY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\nimport { GymMembersClass } from '../Models/GymMembersClass';\n\n@Component({\n    selector: 'app-add-remaining-balance',\n    templateUrl: './add-remaining-balance.component.html',\n    styleUrls: ['./add-remaining-balance.component.css']\n})\nexport class AddRemainingBalanceComponent implements OnInit {\n\n    AddRemBalForm: FormGroup;\n    _PTMembers: GymMembersClass[] = [];\n    _PTTrainer: GymMembersClass[] = [];\n    _MbrPlans: MbrShipPlanClass[] = [];\n    submitted = false;\n\n    MbrId: string;\n    MbrName: string;\n    MbrShipId: string;\n    RemBalance: string;\n    MembershipType: string;\n    Discription: string;\n    BalRemaining: string;\n    PaidDt: string;\n    PaidBy: string;\n    PaidAmt: string;\n    MbrshipStartDt: string;\n    MbrshipEndDt: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) {\n\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.AddRemBalForm = this.formBuilder.group({\n\n            MbrId: ['', Validators.required],\n            MbrName: ['', Validators.required], \n            MbrShipId: ['', Validators.required],\n            RemBalance: ['', Validators.required],\n            MembershipType: ['', Validators.required], \n            PaidDt: ['', Validators.required],\n            PaidBy: ['', Validators.required],\n            PaidAmt: ['', Validators.required],\n            BalRemaining: [''],\n            Discription: [''],\n            MbrshipStartDt:['', Validators.required],\n            MbrshipEndDt:['', Validators.required],\n        });\n\n\n\n        this.route.queryParams.subscribe((params) => {\n            if (params != null && params.MbrName != undefined) {\n\n                this.MbrId = params.MbrId;\n                this.MbrName = params.MbrName; \n                this.MbrShipId = params.MbrShipId;\n                this.RemBalance = params.RemBalance;\n                this.MembershipType = params.MembershipType;\n                this.MbrshipStartDt = params.MbrshipStartDt;\n                this.MbrshipEndDt = params.MbrshipEndDt;\n            }\n        })\n        this.GetAllMemberShipPlan();\n\n    }\n\n    get fval() {\n        return this.AddRemBalForm.controls;\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        debugger;\n        if (!this.AddRemBalForm.invalid) {\n            // adding new remaining balance to existing \n            this.AddRemBalForm.value.RemBalance = this.BalRemaining;\n            this.gymServices.AddPTMembers(this.AddRemBalForm.value).subscribe(result => {\n                if (!isNull(result)) {\n                    alert(result);\n                    return this._router.navigate([\"/RemainingBalance\"]);\n                }\n\n            }, error => alert(error.message))\n\n        }\n    }\n\n    onCancel() {\n        return this._router.navigate([\"/RemainingBalance\"]);\n    }\n\n    GetAllMemberShipPlan() {\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\n            this._MbrPlans = res;\n\n        },\n            error => alert(error.message));\n    } \n\n}\n","export default \".invoice {\\r\\n    font-family: Arial, sans-serif;\\r\\n    width: 800px;\\r\\n    margin: 0 auto;\\r\\n    text-align: center;\\r\\n    border:2px solid black;\\r\\n}\\r\\n\\r\\n.header {\\r\\n    background-color: lightgray;\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.header h1 {\\r\\n        margin: 0;\\r\\n    }\\r\\n\\r\\n.header h2 {\\r\\n        margin: 0;\\r\\n        font-size: 14px;\\r\\n        color:black;\\r\\n    }\\r\\n\\r\\n.client-details {\\r\\n    margin: 20px 0;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.client-details h3 {\\r\\n        margin: 5px ;\\r\\n    }\\r\\n\\r\\n.client-details p {\\r\\n        margin: 5px;\\r\\n    }\\r\\n\\r\\n.invoice-details {\\r\\n    margin: 20px 0;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.invoice-details h3 {\\r\\n        margin: 5px;\\r\\n\\r\\n    }\\r\\n\\r\\n.invoice-details p {\\r\\n        margin: 5px;\\r\\n    }\\r\\n\\r\\n.invoice-table {\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.invoice-table th,\\r\\n    .invoice-table td {\\r\\n        border: 1px solid black;\\r\\n        padding: 10px;\\r\\n    }\\r\\n\\r\\n.invoice-table th {\\r\\n        background-color: lightgray;\\r\\n        text-align: left;\\r\\n    }\\r\\n\\r\\n.total {\\r\\n    margin: 20px 0;\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.total h3 {\\r\\n        margin: 5;\\r\\n    }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxsLWludm9pY2VzL2FsbC1pbnZvaWNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCO0lBQzlCLFlBQVk7SUFDWixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLDJCQUEyQjtJQUMzQixhQUFhO0lBQ2Isa0JBQWtCO0FBQ3RCOztBQUVJO1FBQ0ksU0FBUztJQUNiOztBQUVBO1FBQ0ksU0FBUztRQUNULGVBQWU7UUFDZixXQUFXO0lBQ2Y7O0FBRUo7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCOztBQUVJO1FBQ0ksWUFBWTtJQUNoQjs7QUFFQTtRQUNJLFdBQVc7SUFDZjs7QUFFSjtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7QUFDckI7O0FBRUk7UUFDSSxXQUFXOztJQUVmOztBQUNBO1FBQ0ksV0FBVztJQUNmOztBQUVKO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtBQUM3Qjs7QUFFSTs7UUFFSSx1QkFBdUI7UUFDdkIsYUFBYTtJQUNqQjs7QUFFQTtRQUNJLDJCQUEyQjtRQUMzQixnQkFBZ0I7SUFDcEI7O0FBRUo7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0FBQ3JCOztBQUVJO1FBQ0ksU0FBUztJQUNiIiwiZmlsZSI6InNyYy9hcHAvYWxsLWludm9pY2VzL2FsbC1pbnZvaWNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmludm9pY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gICAgd2lkdGg6IDgwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIGJsYWNrO1xyXG59XHJcblxyXG4uaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiAgICAuaGVhZGVyIGgxIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLmhlYWRlciBoMiB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBjb2xvcjpibGFjaztcclxuICAgIH1cclxuXHJcbi5jbGllbnQtZGV0YWlscyB7XHJcbiAgICBtYXJnaW46IDIwcHggMDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbiAgICAuY2xpZW50LWRldGFpbHMgaDMge1xyXG4gICAgICAgIG1hcmdpbjogNXB4IDtcclxuICAgIH1cclxuXHJcbiAgICAuY2xpZW50LWRldGFpbHMgcCB7XHJcbiAgICAgICAgbWFyZ2luOiA1cHg7XHJcbiAgICB9XHJcblxyXG4uaW52b2ljZS1kZXRhaWxzIHtcclxuICAgIG1hcmdpbjogMjBweCAwO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn1cclxuXHJcbiAgICAuaW52b2ljZS1kZXRhaWxzIGgzIHtcclxuICAgICAgICBtYXJnaW46IDVweDtcclxuXHJcbiAgICB9XHJcbiAgICAuaW52b2ljZS1kZXRhaWxzIHAge1xyXG4gICAgICAgIG1hcmdpbjogNXB4O1xyXG4gICAgfVxyXG5cclxuLmludm9pY2UtdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG59XHJcblxyXG4gICAgLmludm9pY2UtdGFibGUgdGgsXHJcbiAgICAuaW52b2ljZS10YWJsZSB0ZCB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAuaW52b2ljZS10YWJsZSB0aCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB9XHJcblxyXG4udG90YWwge1xyXG4gICAgbWFyZ2luOiAyMHB4IDA7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuICAgIC50b3RhbCBoMyB7XHJcbiAgICAgICAgbWFyZ2luOiA1O1xyXG4gICAgfVxyXG4iXX0= */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\nimport { GymMembersClass } from '../Models/GymMembersClass';\nimport { DatePipe } from '@angular/common' \n\n@Component({\n    selector: 'app-all-invoices',\n    templateUrl: './all-invoices.component.html',\n    styleUrls: ['./all-invoices.component.css']\n})\nexport class AllInvoicesComponent implements OnInit {\n\n    AddInvoiceForm: FormGroup;\n    _InvoiceMbrs: GymMembersClass[] = [];\n    _InvoiceMbrsList: MbrShipPlanUserClass[] = [];\n     \n    IsSessionEnable: any;\n    InvoiceNumber: any;\n    GymName: any;\n    GymAddress: any;\n    GymContactNo: any;\n    PaidDt: any;\n    Serivice1: any;\n    PaidAmt: any;\n    InvoiceYear: any;\n    MbrId: any;\n    MbrUserId: any;\n    DispayInvoice: any = false;\n     \n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, private datePipe: DatePipe) { }\n\n    ngOnInit() {\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.AddInvoiceForm = this.formBuilder.group({\n\n            InvoiceNumber: [''],\n            MbrUGymNameserId: [''],\n            GymAddress: [''],\n            GymContactNo: [''],\n            PaidDt: [''],\n            Serivice1: [''],\n            PaidAmt: [''],\n            InvoiceYear: [''],\n            MbrId: [''],\n            MbrUserId: [''],\n        });\n\n        this.DispayInvoice = false;\n    }\n\n    ShowMembersByYear(Year) {\n        debugger;\n        this.gymServices.GetAllMembers().subscribe(result => {\n            if (!isNull(result)) {\n                result = result.filter(x => x.MbrType != \"Enquiry\");  \n                this._InvoiceMbrs = result.filter(x => x.addedDate == null ? \"\" : x.addedDate.toString().split(' ')[0].split('-')[2] == Year);\n            }\n        }, error => alert(error.message))\n    }\n\n    GetInvoiceList(MbrId) {\n        this.gymServices.GetInvoiceList(MbrId).subscribe(result => {\n            if (!isNull(result)) {\n\n                this._InvoiceMbrsList = result;\n\n            }\n        }, error => alert(error.message))\n    }\n\n    ShowInvoice(MbrUserId) {\n        this.gymServices.GetInvoice(MbrUserId).subscribe(result => {\n            if (!isNull(result)) {\n                this.InvoiceNumber = result.InvoiceId;\n                this.GymName = result.GymName;\n                this.GymAddress = result.Address;\n                this.GymContactNo = result.MobileNumber;\n                this.Serivice1 = result.MembershipType;\n                this.PaidAmt = result.PaidAmt; \n                this.PaidDt = result.PaidDt;\n                this.DispayInvoice = true;\n            }\n        }, error => alert(error.message))\n    }\n}\n","export default \"label{\\r\\n    margin-left:10px;\\r\\n    font-size:medium;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxsLXJlcG9ydHMvYWxsLXJlcG9ydHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hbGwtcmVwb3J0cy9hbGwtcmVwb3J0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWx7XHJcbiAgICBtYXJnaW4tbGVmdDoxMHB4O1xyXG4gICAgZm9udC1zaXplOm1lZGl1bTtcclxufSJdfQ== */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\nimport { ConfirmEqualValidatorDirective } from '../confirm-equal-validator.directive.ts.directive';\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\nimport { GymMembersClass } from '../Models/GymMembersClass';\nimport { DatePipe } from '@angular/common'\nimport { GridOptions } from 'ag-grid-community';\r\n\n@Component({\n    selector: 'app-all-reports',\n    templateUrl: './all-reports.component.html',\n    styleUrls: ['./all-reports.component.css']\n})\nexport class AllReportsComponent implements OnInit {\n    IsSessionEnable: any;\n    AllReportsForm: FormGroup;\n    rdValue: any;\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    private rowData;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router) {\n        this.columnDefs = [\n\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n            },\n            {\n                headerName: 'Mobile No',\n                field: 'MbrMob',\n\r\n            },\n            {\n                headerName: 'DOB',\n                field: 'MbrDOB',\n            },\n            {\n                headerName: 'Marrial Status',\n                field: 'MbrMarrialStatus',\n\r\n            },\n            {\n                headerName: 'Email',\n                field: 'MbrEmail',\n\r\n            },\n            {\n                headerName: 'Addr',\n                field: 'MbrAddr',\n\r\n            },\n            {\n                headerName: 'City',\n                field: 'MbrCity',\r\n            },\n            {\n                headerName: 'State',\n                field: 'MbrState',\r\n            },\n            {\n                headerName: 'Pincode',\n                field: 'MbrPincode',\r\n            },\n            {\n                headerName: 'PT Charges',\n                field: 'MbrPTCharges',\r\n            },\n            {\n                headerName: 'Batch',\n                field: 'MbrBatch',\r\n            },\n            {\n                headerName: 'Desciption',\n                field: 'GeneralDesc',\r\n            },\n            {\n                headerName: 'Gender',\n                field: 'MbrGender',\r\n            },\n            {\n                headerName: 'Membership Name',\n                field: 'MbrShipName',\r\n            },\n            {\n                headerName: 'MemberShip Start Dt',\n                field: 'MbrshipStartDt',\r\n            },\n            {\n                headerName: 'MemberShip End Dt',\n                field: 'MbrshipEndDt',\r\n            },\n            {\n                headerName: 'Paid Amt',\n                field: 'PaidAmt',\r\n            },\n            {\n                headerName: 'Paid Dt',\n                field: 'PaidDt',\r\n            },\n            {\n                headerName: 'Paid By',\n                field: 'PaidBy',\r\n            },\n            {\n                headerName: 'Membership',\n                field: 'MembershipType',\r\n            },\n            {\n                headerName: 'Remaining Bal',\n                field: 'RemBalance',\r\n            },\n            {\n                headerName: 'Total Members',\n                field: 'TotalMembers',\r\n            },\n            {\n                headerName: 'Total Earn',\n                field: 'TotalEarn',\r\n            },\n            {\n                headerName: 'Total Amount',\n                field: 'TotalAmount',\r\n            }\n\n        ];\n\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n\n        this.AllReportsForm = this.formBuilder.group({\n\n        });\n    }\n\n    OnReportChanges(e) {\n        this.rdValue = e.target.value;\r\n    }\n\n    onGridReady(params) {\n        debugger;\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n\n    }\n\n    onSubmit() {\n\n        debugger;\n        this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrMob', 'MbrDOB', 'MbrMarrialStatus', 'MbrEmail', 'MbrAddr', 'MbrCity', 'MbrState', 'MbrPincode', 'MbrPTCharges', 'MbrBatch', 'GeneralDesc', 'MbrGender', 'MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'PaidAmt', 'PaidDt', 'PaidBy', 'MembershipType', 'RemBalance', 'TotalAmount', 'TotalEarn','TotalMembers'], false);\r\n\n        if (this.rdValue == \"YearlyReport\") {\n\n            this.gymServices.GetMemberYearlyReport('45cbe678-6e4b-48eb-8541-63e20316396a').subscribe(result => {\n                if (!isNull(result)) {\n                    this.rowData = result;\n                    this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrMob', 'MbrDOB', 'MbrMarrialStatus', 'MbrEmail', 'MbrAddr', 'MbrCity', 'MbrState', 'MbrPincode', 'MbrPTCharges', 'MbrBatch', 'GeneralDesc', 'MbrGender', 'MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'PaidAmt', 'PaidDt', 'PaidBy', 'MembershipType', 'RemBalance'], true);\n                }\n                else {\n\n                    this.rowData = \"\";\n\n                }\n\n            }, error => alert(error.message))\n\n\n        }\n        else if (this.rdValue == \"FinantialReport\") {\n              \n            //this.gymServices.().subscribe(result => {\n            //    if (!isNull(result)) {\n            //        alert(result);\n            //        return this._router.navigate([\"/PTDetails\"]);\n            //    }\n\n            //}, error => alert(error.message))\n        }\n        else if (this.rdValue == \"Summury\") {\n            this.gymServices.GetSummaryReport().subscribe(result => {\n                if (!isNull(result)) {\n                    this.rowData = result;\n                    this.gridColumnApi.setColumnsVisible(['MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'TotalMembers', 'TotalEarn'], true);\r\n  \r\n                }\n                else {\n\n                    this.rowData = \"\";\n\n                }\n\n            }, error => alert(error.message))\n        }\n        else if (this.rdValue == \"MbrShipReport\") {\n            this.gymServices.GetMembershipReport().subscribe(result => {\n                if (!isNull(result)) {\n                    this.rowData = result;\n                    \r\n                    this.gridColumnApi.setColumnsVisible(['MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'TotalMembers', 'TotalEarn'], true);\r\n\n\n                }\n                else {\n\n                    this.rowData = \"\";\n\n                }\n\n            }, error => alert(error.message))\n        }\n        else if (this.rdValue == \"PersonalTraining\") {\n            this.gymServices.GetPTReport().subscribe(result => {\n                if (!isNull(result)) {\n                    this.rowData = result;\n                    this.gridColumnApi.setColumnsVisible(['MbrName', 'TotalAmount'], true);\r\n \r\n                }\n                else {\n\n                    this.rowData = \"\";\n\n                }\n\n            }, error => alert(error.message))\n        }\n    }\n\n \n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core'; \r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { SalaryMasterComponent } from './salary-master/salary-master.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { LoginComponent } from './login/login.component';\nimport { BtnCellRendererComponent } from './btn-cell-renderer/btn-cell-renderer.component';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { MembershipPlanComponent } from './membership-plan/membership-plan.component';\nimport { GymBranchesComponent } from './gym-branches/gym-branches.component';\nimport { GymProfileComponent } from './gym-profile/gym-profile.component';\nimport { AddMembershipPlanComponent } from './add-membership-plan/add-membership-plan.component';\nimport { AddGymBranchesComponent } from './add-gym-branches/add-gym-branches.component';\nimport { PaymentsComponent } from './payments/payments.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GymExpensesComponent } from './gym-expenses/gym-expenses.component';\nimport { AddExpensesComponent } from './add-expenses/add-expenses.component';\nimport { RenewalMembershipComponent } from './renewal-membership/renewal-membership.component';\nimport { RemainingBalanceComponent } from './remaining-balance/remaining-balance.component';\nimport { MembershipHistoryComponent } from './membership-history/membership-history.component';\nimport { TrainersHistoryComponent } from './trainers-history/trainers-history.component';\nimport { RenewalPaymentsComponent } from './renewal-payments/renewal-payments.component';\nimport { AddRemainingBalanceComponent } from './add-remaining-balance/add-remaining-balance.component';\nimport { ConfirmEqualValidatorDirective } from './confirm-equal-validator.directive.ts.directive';\r\nimport { DatePipe } from '@angular/common';\nimport { PTDetailsComponent } from './ptdetails/ptdetails.component';\nimport { AddPTDetailsComponent } from './add-ptdetails/add-ptdetails.component'\r\nimport { BtnRendererComponent } from './Renders/btn-renderer.component';\r\nimport { EditBtnRendererComponent } from './Renders/edit-btn-renderer.component';\r\nimport { AllInvoicesComponent } from './all-invoices/all-invoices.component';\nimport { SupportComponent } from './support/support.component';\nimport { SendMessageComponent } from './send-message/send-message.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { AllReportsComponent } from './all-reports/all-reports.component';\r\n\r\n \r\n/*import { NgbModule } from '@ng-bootstrap/ng-bootstrap';*/\r\n \r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        CounterComponent,\r\n        FetchDataComponent,\r\n        SalaryMasterComponent,\r\n        EmployeeComponent,\r\n        LoginComponent,\r\n        BtnCellRendererComponent,\r\n        BtnRendererComponent,\r\n        EditBtnRendererComponent,\r\n        AddEmployeeComponent,\r\n        MembershipPlanComponent,\r\n        GymBranchesComponent,\r\n        GymProfileComponent,\r\n        AddMembershipPlanComponent,\r\n        AddGymBranchesComponent,\r\n        PaymentsComponent,\r\n        GymExpensesComponent,\r\n        AddExpensesComponent,\r\n        RenewalMembershipComponent,\r\n        RemainingBalanceComponent,\r\n        MembershipHistoryComponent,\r\n        TrainersHistoryComponent,\r\n        RenewalPaymentsComponent,\r\n        AddRemainingBalanceComponent,\r\n        ConfirmEqualValidatorDirective,\r\n        PTDetailsComponent,\r\n        AddPTDetailsComponent,\r\n        AllInvoicesComponent,\r\n        SupportComponent,\r\n        SendMessageComponent,\r\n        AllReportsComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        BrowserAnimationsModule,\r\n        NgxChartsModule,\r\n        ReactiveFormsModule, \r\n        //NgbModule,\r\n        AgGridModule.withComponents([BtnCellRendererComponent, BtnRendererComponent, EditBtnRendererComponent]),\r\n        RouterModule.forRoot([\r\n            { path: '', component: LoginComponent },\r\n            { path: 'Home', component: HomeComponent },\r\n            { path: 'Employee', component: EmployeeComponent },\r\n            { path: 'AddEmployee', component: AddEmployeeComponent },\r\n            { path: 'MbrPlans', component: MembershipPlanComponent },\r\n            { path: 'AddMbrPlans', component: AddMembershipPlanComponent },\r\n            { path: 'GymBranches', component: GymBranchesComponent },\r\n            { path: 'AddBranches', component: AddGymBranchesComponent },\r\n            { path: 'GymProfile', component: GymProfileComponent },\r\n            { path: 'Payments', component: PaymentsComponent },\r\n            { path: 'GymExpenses', component: GymExpensesComponent },\r\n            { path: 'AddExpenses', component: AddExpensesComponent },\r\n            { path: 'RenewalMembership', component: RenewalMembershipComponent },\r\n            { path: 'RenewalPayments', component: RenewalPaymentsComponent },\r\n            { path: 'RemainingBalance', component: RemainingBalanceComponent },\r\n            { path: 'AddRemainingBalance', component: AddRemainingBalanceComponent },\r\n            { path: 'MembershipHistory', component: MembershipHistoryComponent },\r\n            { path: 'PTDetails', component: PTDetailsComponent },\r\n            { path: 'AddPTDetails', component: AddPTDetailsComponent },\r\n            { path: 'AllInvoices', component: AllInvoicesComponent },\r\n            { path: 'AppSupport', component: SupportComponent },\r\n            { path: 'SendMessage', component: SendMessageComponent },\r\n            { path: 'AllReports', component: AllReportsComponent },\r\n             \r\n        ]),\r\n        NgMultiSelectDropDownModule.forRoot()\r\n\r\n        \r\n\r\n    ],\r\n    providers: [DatePipe],\r\n    entryComponents: [BtnCellRendererComponent, BtnRendererComponent, EditBtnRendererComponent],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular'\nimport { Router } from '@angular/router';\r\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid';\nimport { GymService } from '../services/gym.service';\n\n@Component({\n  selector: 'app-btn-cell-renderer',\n    template: '<img (click)=\"OnEditClick($event)\" src=\"./assets/Edit_img.png\" alt=\"\" class = \"picture1\" /> <img (click)=\"OnDelete($event)\" src=\"./assets/Delete_img.png\" alt=\"\" class = \"picture1\" />',\n  /*styleUrls: ['./btn-cell-renderer.component.css']*/\n})\nexport class BtnCellRendererComponent implements ICellRendererAngularComp {\n    params;\n    constructor(private gymServices: GymService, private _router: Router) { }\n    _MbrPlans: any;\n\n    agInit(params): void {\n        this.params = params; \n    }\n     \n    refresh(param?: any): boolean {\n        return true;\r\n    }\n\n    OnEditClick($event) {\n         \n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data, \r\n            // ...something\r\n        }\n        //return this._router.navigate([\"/AddEmployee\"]);\r\n        this.params.onClick(params);\r\n        \r\n    }\n\n    OnDelete($event) {\n\n        const params = {\r\n            event: $event,\r\n            rowData: this.params.node.data,\r\n            // ...something\r\n        }\n\n        if (window.confirm(\"Are you sure to delete ? \")) {\r\n            this.params.OnDelete(this.params.node.data);\r\n        }\r\n\r\n    }\n}\n","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\n\n@Directive({\n    selector: '[appConfirmEqualValidator]',\n    providers: [{\n        provide: NG_VALIDATORS,\n        useExisting: ConfirmEqualValidatorDirective,\n        multi: true\n    }]\n})\n\nexport class ConfirmEqualValidatorDirective implements Validator {\n    @Input() appConfirmEqualValidator: string;\n\n    validate(control: AbstractControl): { [key: string]: any } | null {\n        const controlToCompare = control.parent.get(this.appConfirmEqualValidator);\n        if (controlToCompare && controlToCompare.value !== control.value) {\n            return { 'notEqual': true }\n        }\n        return null;\n    }\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    private rowData;\n    frameworkComponents: any;\r\n    closeResult: string;\r\n    IsSessionEnable: boolean;\r\n\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) { /*, private modalService: NgbModal */\n        this.frameworkComponents = {\n            buttonRenderer: BtnCellRendererComponent,\r\n        }\n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'MbrId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\r\n            },\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n                \r\n            },\n            {\n                headerName: 'Designaion',\n                field: 'MbrType',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\r\n            },\n            {\n                headerName: 'Mobile No',\n                field: 'MbrMob',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\r\n            },\n            {\n                headerName: 'DOB',\n                field: 'MbrDOB',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\r\n            }, \n            {\n                headerName: 'Email',\n                field: 'MbrEmail',\n\r\n            },\n            {\n                headerName: 'Address',\n                field: 'MbrAddr',\n\r\n            }, \n            {\n                headerName: 'Member Ship',\n                field: 'MbrShipName',\n\r\n            }, \n            {\n                headerName: 'Action',\n                cellRenderer: 'buttonRenderer', \r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    OnDelete: this.OnDeleteMember.bind(this),\r\n\r\n                }\r\n\r\n            },\n             \n        ];    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n  }\n    AddEmployee() {\n        return this._router.navigate([\"/AddEmployee\"]);\r\n    }\n\n    onBtnClick(e) {\r\n        /*alert(e.rowData);   */\r\n        return this._router.navigate([\"/AddEmployee\"], { queryParams: e.rowData });\r\n    }\n\n    onGridReady(params) {\n        debugger;\n        params.api.sizeColumnsToFit(); \n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n         let dataValue; \n        this.gymServices.GetAllMembers().subscribe(result => {\n            if (!isNull(result)) {\n                dataValue = result;\n                params.api.setRowData(dataValue);\n            }\n            else {\n                 \n                dataValue = \"\";\n                params.api.setRowData(dataValue);\n            }\n        }, error => alert(error.message))      \n    }\n\n    OnDeleteMember(data) {\n        this.gymServices.DeleteMember(data.MbrId).subscribe(result => {\n            if (!isNull(result)) {\n                alert('Member Deleted Successfully !');\n\n                this.gymServices.GetAllMembers().subscribe(result => {\n                    if (!isNull(result)) {\n                        this.rowData = result; \n                    }\n                    else {\n\n                        this.rowData = \"\";\n                        \n                    }\n                }, error => alert(error.message))\n\n                 \r\n            }\n            else {\n                alert(\"Error !\");\n            }\n        }, error => alert(error.message))\r\n    }\n     \n}\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d5bS1icmFuY2hlcy9neW0tYnJhbmNoZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\n\n\n@Component({\n  selector: 'app-gym-branches',\n  templateUrl: './gym-branches.component.html',\n  styleUrls: ['./gym-branches.component.css']\n})\nexport class GymBranchesComponent implements OnInit {\n\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    frameworkComponents: any;\n    closeResult: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, private _router: Router) {\n        this.frameworkComponents = {\n            buttonRenderer: BtnCellRendererComponent,\n        }\n        this.columnDefs = [\n            {\n                headerName: 'Name',\n                field: 'test2',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Address',\n                field: 'test3',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Contact No',\n                field: 'test3',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n             {\n                headerName: 'Action',\n                cellRenderer: 'buttonRenderer',\n                cellRendererParam: {\n\n                }\n\n            },\n\n        ];\n    }\n\n    ngOnInit() {\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n  }\n\n    AddEmployee() {\n        return this._router.navigate([\"/AddBranches\"]);\n    }\n\n    onGridReady(params) {\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n\n        let dataValue;\n        dataValue = [{ \"test2\": \"Branch 1\", \"test3\": \"002\" },\n                    { \"test2\": \"Branch 2\", \"test3\": \"004\" },\n                    { \"test2\": \"Branch 3\", \"test3\": \"006\" },\n                    { \"test2\": \"Branch 4\", \"test3\": \"008\" }]\n\n        //this.gymServices.GetAllEmployee().subscribe(result => {\n        //    if (!isNull(result.data)) {\n        //        dataValue = result.data;\n        //    }\n        //    else {\n        //        alert(\"Incorrect Creiditials\");\n        //    }\n        //}, error => alert(error.message))\n\n        params.api.setRowData(dataValue);\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d5bS1leHBlbnNlcy9neW0tZXhwZW5zZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-gym-expenses',\n  templateUrl: './gym-expenses.component.html',\n  styleUrls: ['./gym-expenses.component.css']\n})\nexport class GymExpensesComponent implements OnInit {\n\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    frameworkComponents: any;\n    closeResult: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\n        this.frameworkComponents = {\n            buttonRenderer: BtnCellRendererComponent,\n        }\n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'ExpensesId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'Date',\n                field: 'ExpenseDate',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Category',\n                field: 'Category',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Amount',\n                field: 'Amount',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Description',\n                field: 'Description',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            }, \n            {\n                headerName: 'Action',\n                cellRenderer: 'buttonRenderer',\n                cellRendererParams: {\n                    onClick: this.onBtnClick.bind(this),\n                    OnDelete: this.OnDeleteMember.bind(this),\n\n                }\n\n            },\n\n        ];\n\n    }\n\n    ngOnInit() {\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n  }\n\n    AddExpense() {\n        return this._router.navigate([\"/AddExpenses\"]);\n    }\n\n    onBtnClick(e) {\n        \n        return this._router.navigate([\"/AddExpenses\"], { queryParams: e.rowData });\n    }\n\n    onGridReady(params) {\n        params.api.sizeColumnsToFit();\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        let dataValue;\n        this.gymServices.GetAllExpense().subscribe(result => {\n            if (!isNull(result)) {\n                dataValue = result;\n                params.api.setRowData(dataValue);\n            }\n            else {\n                alert(\"Incorrect Creiditials\");\n            }\n        }, error => alert(error.message))\n    }\n\n    OnDeleteMember(params) {\n        alert(params.ExpensesId);\n        this.gymServices.DeleteExpense(params.ExpensesId).subscribe(result => {\n            if (!isNull(result)) {\n                alert('Deleted Successfully !');\n                return this._router.navigate([\"/GymExpenses\"]);\n            }\n            else {\n                alert(\"Error !\");\n            }\n        }, error => alert(error.message))\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d5bS1wcm9maWxlL2d5bS1wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\n\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\nimport { GymMembersClass } from '../Models/GymMembersClass';\n//import { debug } from 'console';\n\n@Component({\n    selector: 'app-gym-profile',\n    templateUrl: './gym-profile.component.html',\n    styleUrls: ['./gym-profile.component.css']\n})\nexport class GymProfileComponent implements OnInit {\n\n    GymProfileForm: FormGroup;\n    submitted = false;\n\n    GymProfileId: string;\n    FName: string;\n    LName: string;\n    GymName: string;\n    Address: string;\n    EMailId: string;\n    MbrShipName: string;\n    MbrshipStartDt: string;\n    MbrshipEndDt: string;\n    PaidAmt: string;\n    mbrShipStatus: string;\n    MobileNumber: string;\n    Website: string;\n    GSTNo: string;\n    AddedBy: string;\n    OldPassword: string;\n    NewPassword: string;\n    ConfirmPassword: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute) { }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.GymProfileForm = this.formBuilder.group({\n\n            GymProfileId: [''],\n            FName: [''],\n            LName: [''],\n            GymName: ['', Validators.required],\n            Address: [''],\n            EMailId: [''],\n            MbrShipName: [''],\n            PaidAmt: [''],\n            mbrShipStatus: [''],\n            MbrshipStartDt: [''],\n            MbrshipEndDt: [''],\n            GSTNo: [''],\n            Password: [''],\n            MobileNumber: [''],\n            Website: [''],\n            AddedBy: [''],\n            OldPassword: ['', Validators.required],\n            NewPassword: ['', Validators.required],\n            ConfirmPassword: ['', Validators.required],\n\n        });\n\n\n        this.GetGymProfile();\n\n    }\n\n    onSubmit(param) {\n        debugger;\n        this.submitted = true;\n\n        if (param == \"Update Profile\") {\n            this.GymProfileForm.controls['OldPassword'].disable();\r\n            this.GymProfileForm.controls['NewPassword'].disable();\r\n            this.GymProfileForm.controls['ConfirmPassword'].disable();\r\n\n            if (!this.GymProfileForm.invalid) {\n                this.gymServices.UpdateGymProfileDetails(this.GymProfileForm.value).subscribe(result => {\n                    if (!isNull(result)) {\n                        alert(\"Data Updated.\");\n                        this.GymProfileForm.controls['OldPassword'].enable();\n                        this.GymProfileForm.controls['NewPassword'].enable();\n                        this.GymProfileForm.controls['ConfirmPassword'].enable();\n                        return this._router.navigate([\"/GymProfile\"]);\n                    }\n                    else {\n\n                        this.GymProfileForm.controls['OldPassword'].enable();\n                        alert(\"Error !\");\n                    }\n                }, error => alert(error.message))\n            }\n        }\n        else { // Update \n            if (!this.GymProfileForm.invalid) { \n                this.gymServices.UpdatePassowrd(this.GymProfileForm.value).subscribe(result => {\n                    if (isNull(result)) {\n                        alert(\"Password Updated.\");\n                        return this._router.navigate([\"/GymProfile\"]);\n                    }\n                    else {\n                        alert(\"Incorrect Creiditials\");\n                    }\n                }, error => alert(error.message))\n\n\n            }\n        }\n\n    }\n\n    GetGymProfile() {\n        debugger;\n        this.gymServices.GetGymProfileDetails().subscribe(result => {\n            if (!isNull(result)) {\n                this.GymProfileId = result.GymProfileId;\n                this.FName = result.FName;\n                this.LName = result.LName;\n                this.GymName = result.GymName;\n                this.Address = result.Address;\n                this.EMailId = result.EMailId;\n                this.MbrShipName = result.MbrShipName;\n                this.PaidAmt = result.PaidAmt;\n                this.mbrShipStatus = result.mbrShipStatus;\n                this.MbrshipStartDt = result.MbrshipStartDt;\n                this.MbrshipEndDt = result.MbrshipEndDt;\n                this.GSTNo = result.GSTNo;\n                this.MobileNumber = result.MobileNumber;\n                this.Website = result.Website;\n\n\n            }\n            else {\n                alert(\"Errors !\");\n            }\n        }, error => alert(error.message))\n    }\n\n    get fval() {\n        return this.GymProfileForm.controls;\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    closeResult: string;\n    IsSessionEnable: boolean;\n    GymMember: any;\n    Trainer: any;\n    PT: any;\n    Enquiry: any;\n    MbrShipExpiring: any;\n    Events: any;\n    /* saleData: any[];*/\n\n\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'MbrId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Enquiry for',\n                field: 'EnquiryFor',\n\n            },\n            {\n                headerName: 'Expected date to join ',\n                field: 'ExpectedDtToJoin',\n\n            },\n            {\n                headerName: 'Enquiry Date',\n                field: 'enquiryDate',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Last follow up',\n                field: 'enquiryDate',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n        ];\n \r\n\n\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n    }\n\n    onGridReady(params) {\n        params.api.sizeColumnsToFit();\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        let dataValue;\n        this.gymServices.GetDashboardData().subscribe(result => {\n            if (!isNull(result)) {\n                debugger;\n                if (result.countModel != null)\n                {\n                    this.GymMember = result.countModel[2].count;\r\n                    this.Trainer = result.countModel[5].count;\r\n                    this.PT = result.countModel[6].count;\r\n                    this.Enquiry = result.countModel[0].count;\r\n                    this.MbrShipExpiring = result.countModel[7].count;\r\n                    this.Events = '0';\r\n\r\n                }\n                dataValue = result.enquiryModel ;\n                params.api.setRowData(dataValue);\n\n                if (result.salesModel) {\n                    for (let n = 0; n < result.salesModel.length; ++n) {\r\n                        this.saleData.push({ \"name\": result.salesModel[n].Months, \"value\": Number(result.salesModel[n].Amt) });\r\n                    }\r\n                }\n                  // ngs chart does not detect the data change sp we add below line\n                this.saleData = [...this.saleData];\n            }\n            else {\n\n                dataValue = \"\";\n                params.api.setRowData(dataValue);\n            }\n        }, error => alert(error.message))\n    }\n\n\n    saleData = [];\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\""," \r\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router } from '@angular/router';\n/*import { NavMenuComponent } from '../nav-menu/nav-menu.component';*/\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginform: FormGroup;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router) { } /*, public nav: NavMenuComponent*/\n\n    ngOnInit() {\n        /*this.nav.hide();*/\n\n        this.loginform = this.formBuilder.group({\n            MobileNo: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    onSubmit() {\n        //return this._router.navigate([\"/Employee\"]);\n         \n        this.gymServices.login(this.loginform.controls.MobileNo.value, this.loginform.controls.password.value).subscribe(result => {\n            if (!isNull(result.access_token)) {  \n                localStorage.setItem(\"token\", result.access_token);\n                return this._router.navigate([\"/Home\"]);\n            }\n            \n        }, error => alert(error.message))\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnNoaXAtaGlzdG9yeS9tZW1iZXJzaGlwLWhpc3RvcnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { GymMembersClass } from '../Models/GymMembersClass';\n\n\n@Component({\n    selector: 'app-membership-history',\n    templateUrl: './membership-history.component.html',\n    styleUrls: ['./membership-history.component.css']\n})\nexport class MembershipHistoryComponent implements OnInit {\n\n    MbrHistoryForm: FormGroup;\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    frameworkComponents: any;\n    closeResult: string;\n    private rowData;\n    PtMemberId: string;\n    _Members: GymMembersClass[] = [];\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute, public formBuilder: FormBuilder) {\n        this.frameworkComponents = {\n            buttonRenderer: BtnCellRendererComponent,\n        }\n\n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'MbrId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Batch',\n                field: 'MbrBatch',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Membership Name',\n                field: 'MbrShipName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Membership Amt',\n                field: 'MbrShipAmt',\n\n            },\n            {\n                headerName: 'Paid Amt',\n                field: 'PaidAmt', \n            },\n            {\n                headerName: 'Paid By',\n                field: 'PaidBy',\n            },\n            {\n                headerName: 'Paid Dt',\n                field: 'PaidDt',\n            },\n            {\n                headerName: 'Start Dt',\n                field: 'MbrshipStartDt',\n            },\n            {\n                headerName: 'End Dt',\n                field: 'MbrshipEndDt',\n            },\n            {\n                headerName: 'Type',\n                field: 'MembershipType',\n            },\n\n        ];\n\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.MbrHistoryForm = this.formBuilder.group({\n\n            PtMemberId: ['', [Validators.required, Validators.min(1)]],\n             \n        });\n\n        this.GetAllMembers();\n\n    }\n\n    onGridReady(params) {\n        this.rowData = '';\n    }\n\n    GetAllMembers() {\n        debugger;\n        this.gymServices.GetAllMembers().subscribe(result => {\n            if (!isNull(result)) {\n                this._Members = result;\n            }\n\n        }, error => alert(error.message))\n    }\n\n    showPersonalTrainingPlans(value) {\n        \n        let MemberId = value;\n        this.gymServices.GetGymMemberHistoryById(MemberId).subscribe(result => {\n            if (!isNull(result)) { \n                this.rowData = result;\n            }\n            else {\n                 \n                this.rowData = '';\n            }\n        }, error => alert(error.message))\n\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnNoaXAtcGxhbi9tZW1iZXJzaGlwLXBsYW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\n\n@Component({\n    selector: 'app-membership-plan',\n    templateUrl: './membership-plan.component.html',\n    styleUrls: ['./membership-plan.component.css']\n})\nexport class MembershipPlanComponent implements OnInit {\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    frameworkComponents: any;\n    closeResult: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, private _router: Router) {\n        this.frameworkComponents = {\n            buttonRenderer: BtnCellRendererComponent,\n        }\n        this.columnDefs = [\n            {\n                headerName: 'Name',\n                field: 'MbrShipName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                filter: 'agTextColumnFilter'\n\n            },\n            {\n                headerName: 'Amount',\n                field: 'MbrShipAmt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Days',\n                field: 'MbrShipDurationInDays',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Start Date',\n                field: 'StartDt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'End Date',\n                field: 'EndDt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Description',\n                field: 'Description',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Active/In-Active',\n                field: 'Active',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                valueGetter: function (params) { \n                    if (params.data.Active == true) {\n                        return \"Active\"\n                    } else {\n                        return \"In-Active\"\n                    }\n\n                }\n            },\n            {\n                headerName: 'Action',\n                cellRenderer: 'buttonRenderer',\n                cellRendererParams: {\n                    onClick: this.onBtnClick.bind(this),\n                    OnDelete: this.OnDeletePlan.bind(this),\n\n                }\n\n            },\n\n        ];\n    }\n\n    ngOnInit() {\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n    }\n\n    onBtnClick(e) {\n        if (e == undefined)\n            return this._router.navigate([\"/AddMbrPlans\"]);\n        else\n            return this._router.navigate([\"/AddMbrPlans\"], { queryParams: e.rowData });\n    }\n\n    onGridReady(params) {\n        params.api.sizeColumnsToFit();\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        let dataValue;\n        this.gymServices.GetAllMemberShipPlan().subscribe(result => {\n            if (!isNull(result)) {\n                dataValue = result;\n                params.api.setRowData(dataValue);\n            }\n            else {\n                dataValue = \"No Data Available\";\n                params.api.setRowData(dataValue);\n            }\n        }, error => alert(error.message))\n    }\n\n    OnDeletePlan(mbrId) {\n        this.gymServices.DeletePlan(mbrId).subscribe(result => {\n            if (!isNull(result)) {\n                alert('Member Deleted Successfully !');\n                return this._router.navigate([\"/Employee\"]);\n            }\n            else {\n                alert(\"Error !\");\n            }\n        }, error => alert(error.message))\n    }\n}\n","export default \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\\r\\n.container{\\r\\n    margin-left:20px !important;\\r\\n    max-width:100% !important;\\r\\n\\r\\n}\\r\\n\\r\\n.headerTitle\\r\\n{\\r\\n    margin-right:110px;\\r\\n    margin-left:20px;\\r\\n    font-weight:bold;\\r\\n    width:15%;\\r\\n}\\r\\n\\r\\nul li ul li a:hover {\\r\\n    background-color: #87AFC7 !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFDQTtFQUNFO0lBQ0UsZUFBZTtFQUNqQjtBQUNGOztBQUVBO0VBQ0UsOENBQThDO0FBQ2hEOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLHlCQUF5Qjs7QUFFN0I7O0FBQ0E7O0lBRUksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsU0FBUztBQUNiOztBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDIiwiZmlsZSI6InNyYy9hcHAvbmF2LW1lbnUvbmF2LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEubmF2YmFyLWJyYW5kIHtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XHJcbn1cclxuXHJcbmh0bWwge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICBodG1sIHtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbn1cclxuXHJcbi5ib3gtc2hhZG93IHtcclxuICBib3gtc2hhZG93OiAwIC4yNXJlbSAuNzVyZW0gcmdiYSgwLCAwLCAwLCAuMDUpO1xyXG59XHJcblxyXG4uY29udGFpbmVye1xyXG4gICAgbWFyZ2luLWxlZnQ6MjBweCAhaW1wb3J0YW50O1xyXG4gICAgbWF4LXdpZHRoOjEwMCUgIWltcG9ydGFudDtcclxuXHJcbn1cclxuLmhlYWRlclRpdGxlXHJcbntcclxuICAgIG1hcmdpbi1yaWdodDoxMTBweDtcclxuICAgIG1hcmdpbi1sZWZ0OjIwcHg7XHJcbiAgICBmb250LXdlaWdodDpib2xkO1xyXG4gICAgd2lkdGg6MTUlO1xyXG59XHJcbnVsIGxpIHVsIGxpIGE6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzg3QUZDNyAhaW1wb3J0YW50O1xyXG59Il19 */\"","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GymService } from '../services/gym.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n\r\n    constructor(private _router: Router, private gymServices: GymService) {\r\n\r\n    }\r\n    visible = false;\r\n\r\n  collapse() {\r\n      this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n      this.visible = !this.visible;\r\n    }\r\n\r\n    hide() { this.visible = false; }\r\n\r\n    show() { this.visible = true; }\r\n\r\n    logout() {\r\n        //return this._router.navigate([\"/GymExpenses\"]); \r\n        debugger;\r\n        localStorage.clear();\r\n        return this._router.navigate([\"\"]);\r\n\r\n        //this.gymServices.Logout().subscribe(result => {\r\n          \r\n              \r\n        //}, error => alert(error.message))\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnRzL3BheW1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\r\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.css']\n})\nexport class PaymentsComponent implements OnInit {\n\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs; \n    closeResult: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) { /*, private modalService: NgbModal */\n         \n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'MbrId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Designaion',\n                field: 'MbrType',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Plan',\n                field: 'MbrShipName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Amount',\n                field: 'MbrShipAmt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Paid Amt',\n                field: 'PaidAmt',\n\n            },\n            {\n                headerName: 'Paid Dt',\n                field: 'PaidDt',\n\n            },\n            {\n                headerName: 'Member Ship',\n                field: 'MembershipType',\n\n            }, \n\n        ];\r\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n    }\n    \n\n    onGridReady(params) {\n        params.api.sizeColumnsToFit();\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        let dataValue;\n        this.gymServices.GetPaymentDetails().subscribe(result => {\n            if (!isNull(result)) {\n                dataValue = result;\n                params.api.setRowData(dataValue);\n            }\n            else {\n                \n                dataValue = \"\";\n                params.api.setRowData(dataValue);\n            }\n        }, error => alert(error.message))\n    }\n \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3B0ZGV0YWlscy9wdGRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\n//import { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-ptdetails',\n  templateUrl: './ptdetails.component.html',\n  styleUrls: ['./ptdetails.component.css']\n})\nexport class PTDetailsComponent implements OnInit {\n\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    frameworkComponents: any;\n    closeResult: string;\n    IsSessionEnable: boolean;\n\n    private rowData;\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\n        this.frameworkComponents = {\n            buttonRenderer: BtnCellRendererComponent,\n        }\n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'MbrId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'MbrUserId',\n                field: 'MbrUserId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'MbrShipId',\n                field: 'MbrShipId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'TrainerId',\n                field: 'TrainerId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            }, \n            {\n                headerName: 'Mobile No',\n                field: 'MbrMob',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },  \n            {\n                headerName: 'Member Ship',\n                field: 'MbrType',\n\n            },\n            {\n                headerName: 'Paid Amount',\n                field: 'PaidAmt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Paid By',\n                field: 'PaidBy',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            }, \n            {\n                headerName: 'Paid Dt',\n                field: 'PaidDt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Start Dt',\n                field: 'MbrshipStartDt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'End sDt',\n                field: 'MbrshipEndDt',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Action',\n                cellRenderer: 'buttonRenderer',\n                cellRendererParams: {\n                    onClick: this.onBtnClick.bind(this),\n                    OnDelete: this.OnDeleteMember.bind(this),\n\n                }\n\n            },\n\n        ];     }\n\n    ngOnInit() {\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n  }\n\n    AddPT() {\n        return this._router.navigate([\"/AddPTDetails\"]);\n    }\n\n    onBtnClick(e) {\n        /*alert(e.rowData);   */\n        return this._router.navigate([\"/AddPTDetails\"], { queryParams: e.rowData });\n    }\n\n    onGridReady(params) {\n        debugger;\n        params.api.sizeColumnsToFit();\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        let dataValue;\n        this.gymServices.GetAllPTMembers().subscribe(result => {\n            if (!isNull(result)) {\n                dataValue = result;\n                params.api.setRowData(dataValue);\n            }\n            else {\n\n                dataValue = \"\";\n                params.api.setRowData(dataValue);\n            }\n        }, error => alert(error.message))\n    }\n\n    OnDeleteMember(data) {\n        this.gymServices.DeletePTMembers(data.MbrUserId).subscribe(result => {\n            if (!isNull(result)) {\n                alert('Member Deleted Successfully !');\n                this.gymServices.GetAllPTMembers().subscribe(result => {\n                    if (!isNull(result)) {\n                        this.rowData = result;\n                    }\n                    else {\n\n                        this.rowData = \"\";\n\n                    }\n                }, error => alert(error.message)) \n            }\n            else {\n                alert(\"Error !\");\n            }\n        }, error => alert(error.message))\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbWFpbmluZy1iYWxhbmNlL3JlbWFpbmluZy1iYWxhbmNlLmNvbXBvbmVudC5jc3MifQ== */\""," \r\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EditBtnRendererComponent } from '../Renders/edit-btn-renderer.component';\n\n\n\n@Component({\n  selector: 'app-remaining-balance',\n  templateUrl: './remaining-balance.component.html',\n  styleUrls: ['./remaining-balance.component.css']\n})\nexport class RemainingBalanceComponent implements OnInit {\n\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    frameworkComponents: any;\n    closeResult: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\n\n        this.frameworkComponents = {\n            buttonRenderer: EditBtnRendererComponent,\n        }\n\n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'MbrId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Mobile',\n                field: 'MbrMob',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Membership Plan',\n                field: 'MbrShipName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            }, \n            {\n                headerName: 'Batch',\n                field: 'MbrBatch',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Last Paid Amount',\n                field: 'lastPaidAmt',\n            },\n            {\n                headerName: 'Last Payment Date',\n                field: 'PaidDt',\n            },\n            {\n                headerName: 'Last Paid By',\n                field: 'LastPaidBy',\n            },\n            {\n                headerName: 'Remaining Balance',\n                field: 'RemBalance',\n\n            },\n            {\n                headerName: 'Membership StartDt',\n                field: 'MbrshipStartDt',\n\n            },\n            {\n                headerName: 'Membership EndDt',\n                field: 'MbrshipEndDt',\n\n            },\n            {\n                headerName: 'Payment of',\n                field: 'MembershipType',\n\n            },\n            {\n                headerName: 'Action',\n                cellRenderer: 'buttonRenderer',\n                cellRendererParams: {\n                    onClick: this.onBtnClick.bind(this),\n\n                } \n            },\n\n        ];\n    }\n\n    ngOnInit() {\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n  }\n\n    onBtnClick(e) {\n        /*alert(e.rowData);   */\n        return this._router.navigate([\"/AddRemainingBalance\"], { queryParams: e.rowData });\n    }\n\n    onGridReady(params) {\n        params.api.sizeColumnsToFit();\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        let dataValue; \n        this.gymServices.GetAllMemberShipPlanUser().subscribe(result => {\n            if (!isNull(result)) {\n                \n                dataValue = result;\n                params.api.setRowData(dataValue);\n            }\n            else {\n                \n                dataValue = \"\";\n                params.api.setRowData(dataValue);\n            }\n        }, error => alert(error.message))\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbmV3YWwtbWVtYmVyc2hpcC9yZW5ld2FsLW1lbWJlcnNoaXAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnRendererComponent } from '../Renders/btn-renderer.component';\r\n\n\n@Component({\n  selector: 'app-renewal-membership',\n  templateUrl: './renewal-membership.component.html',\n  styleUrls: ['./renewal-membership.component.css']\n})\nexport class RenewalMembershipComponent implements OnInit {\n    private gridApi;\n    private gridColumnApi;\n    private columnDefs;\n    frameworkComponents: any;\n    closeResult: string;\n    IsSessionEnable: boolean;\n\n    constructor(private gymServices: GymService, private _router: Router, public route: ActivatedRoute) {\n        this.frameworkComponents = {\n            buttonRenderer: BtnRendererComponent,\n        }\n\n        this.columnDefs = [\n            {\n                headerName: 'Id',\n                field: 'MbrId',\n                Filter: true,\n                enableSorting: true,\n                sortable: true,\n                hide: true,\n\n            },\n            {\n                headerName: 'Name',\n                field: 'MbrName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n\n            },\n            {\n                headerName: 'Mobile No',\n                field: 'MbrMob',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Membership Plan',\n                field: 'MbrShipName',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Batch',\n                field: 'MbrBatch',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Membership Type',\n                field: 'MembershipType',\n                Filter: true,\n                enableSorting: true,\n                sortable: true\n            },\n            {\n                headerName: 'Last Payment',\n                field: 'PaidAmt',\n\n            },\n            {\n                headerName: 'Last Payment Date',\n                field: 'PaidDt',\n\n            },\n            {\n                headerName: 'Expire Date',\n                field: 'MbrshipEndDt',\n\n            },\n            {\n                headerName: 'Action',\n                cellRenderer: 'buttonRenderer',\r\n                cellRendererParams: {\r\n                    onClick: this.onBtnClick.bind(this),\r\n                    label: 'Click'\r\n                } \r\n            }, \n        ];\r\n     }\n\n    ngOnInit() {\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n  }\n     \n    \n    onBtnClick(e) { \r\n        return this._router.navigate([\"/RenewalPayments\"], { queryParams: e.rowData }); \n    }\n\n    onGridReady(params) {\n        params.api.sizeColumnsToFit();\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        let dataValue;\n        this.gymServices.GetMembershipGoingtoExxpiredMembers().subscribe(result => {\n            if (!isNull(result)) {\n                dataValue = result;\n                params.api.setRowData(dataValue);\n            }\n            else {\n                \n                dataValue = \"\";\n                params.api.setRowData(dataValue);\n            }\n        }, error => alert(error.message))\n    }\n     \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbmV3YWwtcGF5bWVudHMvcmVuZXdhbC1wYXltZW50cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { first } from 'rxjs/operators';\nimport { isNull } from 'util';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BtnCellRendererComponent } from '../btn-cell-renderer/btn-cell-renderer.component';\nimport { SP_GetAllMembersDetailsClass } from '../Models/SP_GetAllMembersDetailsClass';\nimport { salaryMasterClass } from '../Models/salaryMasterClass';\nimport { MbrShipPlanUserClass } from '../Models/MbrShipPlanUserClass';\n\nimport { MbrShipPlanClass } from '../Models/mbr-ship-plan-class.model';\nimport { GymMembersClass } from '../Models/GymMembersClass';\nimport { DatePipe } from '@angular/common'\n\n\n@Component({\n    selector: 'app-renewal-payments',\n    templateUrl: './renewal-payments.component.html',\n    styleUrls: ['./renewal-payments.component.css']\n})\nexport class RenewalPaymentsComponent implements OnInit {\n\n    RenewalPaymentForm: FormGroup;\n    _MbrPlans: MbrShipPlanClass[] = [];\n\n    MbrId: string;\n    MbrName: string;\n    MbrBatch: string;\n    MbrShipId: string;\n    MbrShipCharges: string;\n    Days: string;\n    PaidAmt: string;\n    PaidBy: string\n    PaidDt: string;\n    MbrshipStartDt: string;\n    MbrshipEndDt: string;\n    MembershipType: string;\n    submitted = false;\n    date: Date;\n    IsSessionEnable : boolean;\n\n    constructor(private gymServices: GymService, public formBuilder: FormBuilder, private _router: Router, public route: ActivatedRoute, public datepipe: DatePipe) { }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.GetAllMemberShipPlan();\n\n        this.RenewalPaymentForm = this.formBuilder.group({\n\n            MbrId: ['', Validators.required],\n            MbrName: ['', Validators.required],\n            MbrBatch: ['', Validators.required],\n            MbrShipId: ['', Validators.required],\n            MbrShipCharges: ['', Validators.required],\n            Days: ['', Validators.required],\n            PaidAmt: ['', Validators.required],\n            PaidBy: ['', Validators.required],\n            PaidDt: ['', Validators.required],\n            MbrshipStartDt: ['', Validators.required],\n            MbrshipEndDt: ['', Validators.required],\n            MembershipType: [''],\n\n\n\n        });\n\n        this.route.queryParams.subscribe((params) => {\n            debugger;\n            if (params != null && params.MbrName != undefined) { \n                this.MbrId = params.MbrId;\n                this.MbrName = params.MbrName;\n                this.MbrBatch = params.MbrBatch;\n                this.MbrName = params.MbrName;\n                 \n            }\n        })\n    }\n\n    onDateChange(value) {\n        this.date = new Date(value.srcElement.value);\n        this.date.setDate(this.date.getDate() + +this.Days);\n        this.MbrshipEndDt = this.datepipe.transform(this.date, 'yyyy-MM-dd');\n    }\n\n\n    onSubmit() {\n        this.submitted = true;\n        if (!this.RenewalPaymentForm.invalid) {\n            this.RenewalPaymentForm.value[\"MembershipType\"] = \"GymMembership\";\n            this.gymServices.AddPTMembers(this.RenewalPaymentForm.value).subscribe(result => {\n                if (!isNull(result)) {\n                    alert(result);\n                    return this._router.navigate([\"/RenewalMembership\"]);\n                }\n                else {\n                    alert(\"Incorrect Creiditials\");\n                }\n            }, error => alert(error.message))\n        }\n    }\n    onCancel() {\n        return this._router.navigate([\"/RenewalMembership\"]);\n    }\n\n    get fval() {\n        return this.RenewalPaymentForm.controls;\n    }\n\n    GetAllMemberShipPlan() {\n        this.gymServices.GetAllMemberShipPlan().subscribe(res => {\n            this._MbrPlans = res;\n            // data contains actual array of users\n        },\n            error => alert(error.message));\n    }\n\n    showMemberShipPlan(value) {\n\n        this.MbrShipCharges = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipAmt.toString();\n        this.Days = this._MbrPlans.find(x => x.MbrShipId == value).MbrShipDurationInDays.toString()\n\n    }\n\n    numberOnly(event): boolean {\n        const charCode = (event.which) ? event.which : event.keyCode;\n        if (charCode > 31 && (charCode < 46 || charCode > 57)) {\n            return false;\n        }\n        return true;\n\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbGFyeS1tYXN0ZXIvc2FsYXJ5LW1hc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-salary-master',\n  templateUrl: './salary-master.component.html',\n  styleUrls: ['./salary-master.component.css']\n})\nexport class SalaryMasterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlbmQtbWVzc2FnZS9zZW5kLW1lc3NhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'; \nimport { GymService } from '../services/gym.service';\nimport { Router, ActivatedRoute } from '@angular/router'; \nimport { isNull } from 'util';\nimport { GymMembersClass } from '../Models/GymMembersClass';\r\nimport {  IDropdownSettings } from 'ng-multiselect-dropdown';\r\n\r\n@Component({\n    selector: 'app-send-message',\n    templateUrl: './send-message.component.html',\n    styleUrls: ['./send-message.component.css']\n})\nexport class SendMessageComponent implements OnInit {\n\n    //dropdownList = [];\r\n    selectedItems = []; \n    dropdownSettings: IDropdownSettings;\r\n\n    SendMsgForm: FormGroup;\n    submitted = false;\n    _Members: GymMembersClass[] = [];\n    IsSessionEnable: any;\n   \n    MbrType: any;\n    MbrMessage: any;\n    constructor(public formBuilder: FormBuilder, private _router: Router, private gymServices: GymService) {\n\n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.SendMsgForm = this.formBuilder.group({\n\n           \n            MbrType: ['', Validators.required],\n            MbrMessage: ['', Validators.required],\n           \n        });\n\n        this.GetAllMembers();\n         \r\n        this.dropdownSettings = {\r\n            singleSelection: false,\r\n            idField: 'MbrId',\r\n            textField: 'MbrName',\r\n            selectAllText: 'Select All',\r\n            unSelectAllText: 'UnSelect All',\r\n            itemsShowLimit: 3,\r\n            allowSearchFilter: true\r\n        }; \n    }\n     \n    onSubmit() {\n        debugger;\n        this.submitted = true;\n        if (!this.SendMsgForm.invalid) {\n            this.gymServices.SendPromotionMessage(this.selectedItems).subscribe(result => {\n                alert('Message Send');\n\n            }, error => alert(error.message))\n        }\n    }\n\n    onItemSelect(item: any) {\r\n        this.selectedItems.push(item.MbrId);\r\n    }\r\n    onSelectAll(items: any) {\r\n         this.selectedItems.push(items.map(x => x.MbrId));\r\n    }\n\n    GetAllMembers() {\n        this.gymServices.GetAllMembers().subscribe(result => {\n            if (!isNull(result)) {\n                this._Members = result.filter(x => x.MbrType == \"GymMember\");\n                  \n            }\n        }, error => alert(error.message))\n    }\n\n    get fval() {\n        return this.SendMsgForm.controls;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { getLocaleDateFormat } from '@angular/common';\nimport { Observable, throwError } from 'rxjs';\nimport { Token } from '../Models/token.model';\nimport { Component, Inject } from '@angular/core';\nimport { baseUrl } from '../..//environments/environment';\n \n\r\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GymService {\n\n    constructor(private http: HttpClient) {\n         \n    }\n\n    SendFeedbackEmail(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymDetails/SendFeebackEmail', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n    SendPromotionMessage(_membersList): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymDetails/SendPromotionMessage?membersLists=' + _membersList + '', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n     \n\n    login(username, password): Observable<any> {\n        const headers = { 'Content-Type': 'application/json' };\n        const userData = \"username=\" + username + \"&password=\" + password + \"&grant_type=password\";\n\n        /*return this.http.post<Token>(baseUrl + 'Token', userData, { 'headers': headers }).pipe(map(data => data));*/\n        return this.http.post<Token>(baseUrl + 'Token', userData, { 'headers': headers }).pipe(map(data => data));\n\n    }\n\n    Logout(): Observable<any> {\n        return this.http.post<Token>(baseUrl + 'api/Account/Logout', { 'headers': this.getToken() });\n    }\n\n\n    UpdatePassowrd(model): Observable<any> {\n        return this.http.post<Token>(baseUrl + 'api/Account/ChangePassword', JSON.stringify(model), { 'headers': this.getToken() });\n    }\n\n    CheckToken() {\n        if (localStorage.getItem('token') == null) {\n            return false;\r\n        }\n        else\n            return true;\n    }\n\n    getToken() {\n        return {\n            'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('token') + ''\n        };\n    }\n\n    /** Error Handling method */\n\n    errorHandler(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('An error occurred:', error.error.message);\n        } else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(\n                'Backend returned code ' + error.status + ',' +\n                'body was: ' + error.error.message + '');\n        }\n        // return an observable with a user-facing error message\n        return throwError(\n            'Something bad happened; please try again later.');\n    }\n\n    //------------------------ Employee --------------------\n\n    GetAllMembers(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetAllMembers', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n\n    GetMemberDetailsById(_UserId): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetMemberDetails?UserId=' + _UserId + '', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    AddMembers(_Emp): Observable<any> {\n\n        return this.http.post<Token>(baseUrl + 'api/Member/CreateMember', JSON.stringify(_Emp), { 'headers': this.getToken() })\n            .pipe(\n                map(\n                    res => res));\n\n    }\n\n    UpdateMember(_Emp): Observable<any> {\n        return this.http.post<Token>(baseUrl + 'api/Member/UpdateMember', JSON.stringify(_Emp), { 'headers': this.getToken() });\n    }\n\n    DeleteMember(_EmpId) {\n\n        return this.http.get(baseUrl + 'api/Member/DeleteMember?UserId=' + _EmpId + '', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    //------------------------ End Employee --------------------\n\n    GetAllMemberShipPlan(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymDetails/GetAllMemberShipPlan', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    AddPlan(_Plan): Observable<any> {\n\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/CreateMemberShipPlan', JSON.stringify(_Plan), { 'headers': this.getToken() })\n            .pipe(\n                map(\n                    res => res));\n\n    }\n\n    UpdatePlan(_Plan): Observable<any> {\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateMemberShipPlan', JSON.stringify(_Plan), { 'headers': this.getToken() });\n    }\n\n    DeletePlan(_PlanId) {\n\n        return this.http.get(baseUrl + 'api/GymDetails/DeleteMembershipPlan?PlanId=' + _PlanId + '', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    GetPaymentDetails(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymDetails/GetGymPaymentDetails', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    GetDashboardData(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymDetails/GetDashboardData', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    // ------------------------ Expenses Details -----------------\n\n    GetAllExpense(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymDetails/GetAllExpense', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    CreateExpense(_Expenses): Observable<any> {\n\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/CreateExpense', JSON.stringify(_Expenses), { 'headers': this.getToken() })\n            .pipe(\n                map(\n                    res => res));\n\n    }\n\n    UpdateExpense(_Expenses): Observable<any> {\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateExpense', JSON.stringify(_Expenses), { 'headers': this.getToken() });\n    }\n\n    DeleteExpense(_expenseId) {\n\n        return this.http.get(baseUrl + 'api/GymDetails/DeleteExpense?expenseId=' + _expenseId + '', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n\n    //------------------------ Personal Training --------------------\n\n    GetAllPTMembers(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetAllPtMembers', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n\n    AddPTMembers(_Emp): Observable<any> {\n\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/CreateMemberShipPlanUser', JSON.stringify(_Emp), { 'headers': this.getToken() })\n            .pipe(\n                map(\n                    res => res));\n\n    }\n\n    UpdatePTMembers(_Emp): Observable<any> {\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateMemberShipPlanUser', JSON.stringify(_Emp), { 'headers': this.getToken() });\n    }\n\n    DeletePTMembers(_MbrUserId) {\n\n        return this.http.get(baseUrl + 'api/GymDetails/DeleteMembershipPlan?MbrUserId=' + _MbrUserId + '', { 'headers': this.getToken() }).\n            pipe(\n                map(\n                    res => res));\n    }\n\n    //------------------------ End Employee --------------------\n\n    //------------------------ Gym Profile Details --------------------\n\n    GetGymProfileDetails(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymDetails/GetGymProfile', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n\n    UpdateGymProfileDetails(_profile): Observable<any> {\n\n        return this.http.post<Token>(baseUrl + 'api/GymDetails/UpdateGymProfile', JSON.stringify(_profile), { 'headers': this.getToken() })\n            .pipe(\n                map(\n                    res => res));\n\n    }\n\n    //------------------------ End Gym Profile Details  --------------------\n\n    GetMembershipGoingtoExxpiredMembers(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetMembershipGoingtoExxpiredMembers', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n    GetAllMemberShipPlanUser(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetGymMemberRemainingBalance', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n    GetGymMemberHistoryById(MemberId): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetGymMemberHistoryById?MemberId=' + MemberId + '', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n    GetInvoiceList(MbrId): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetInvoiceList?MbrId=' + MbrId + '', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n    GetInvoice(MbrUserId): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/Member/GetInvoice?MbrUserId=' + MbrUserId + '', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n    GetMemberYearlyReport(_MbrId): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymReport/GetMemberYearlyReport?MbrId=' + _MbrId + '', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n    GetMembershipReport(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymReport/GetMembershipReport', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n    GetPTReport(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymReport/GetPTReport', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n\n    GetSummaryReport(): Observable<any> {\n\n        return this.http.get(baseUrl + 'api/GymReport/GetSummaryReport', { 'headers': this.getToken() }).\n            pipe(map(res => res),\n                catchError(this.errorHandler));\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBvcnQvc3VwcG9ydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n    selector: 'app-support',\n    templateUrl: './support.component.html',\n    styleUrls: ['./support.component.css']\n})\nexport class SupportComponent implements OnInit {\n\n    AppSuportForm: FormGroup;\n    submitted = false;\n    SupportName: string;\n    SupportContact: string;\n    SupportSubject: string;\n    SupportBody: string; \n    IsSessionEnable: any;\n\n    constructor(public formBuilder: FormBuilder, private _router: Router, private gymServices: GymService) {\n         \n    }\n\n    ngOnInit() {\n\n        this.IsSessionEnable = this.gymServices.CheckToken();\n        if (!this.IsSessionEnable)\n            return this._router.navigate([\"\"]);\n\n        this.AppSuportForm = this.formBuilder.group({\n\n            SupportName: ['', Validators.required],\n            SupportContact: ['', Validators.required],\n            SupportSubject: ['', Validators.required],\n            SupportBody: ['', Validators.required],\n \n        });\n\n    }\n\n    onSubmit() {\n        debugger;\n        this.submitted = true; \n        if (!this.AppSuportForm.invalid) {\n            this.gymServices.SendFeedbackEmail().subscribe(result => {\n                alert('Feedback Send');\n\n            }, error => alert(error.message))\n        }\n\n        \n    }\n\n    get fval() {\n        return this.AppSuportForm.controls;\n    }\n}\n\n ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWluZXJzLWhpc3RvcnkvdHJhaW5lcnMtaGlzdG9yeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trainers-history',\n  templateUrl: './trainers-history.component.html',\n  styleUrls: ['./trainers-history.component.css']\n})\nexport class TrainersHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\nexport const baseUrl = \"https://localhost:44314/\";\r\n//export const sgMailAPIKey = \"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\";\r\n//export const baseUrl = \"http://192.168.0.159:81/\";\r\n \r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///"}