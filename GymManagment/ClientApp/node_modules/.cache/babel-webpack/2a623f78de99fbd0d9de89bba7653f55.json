{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { GymService } from '../services/gym.service';\nimport { isNull } from 'util';\nimport { Router } from '@angular/router';\nimport * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/gym.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../nav-menu/nav-menu.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"ag-grid-angular\";\nfunction AllReportsComponent_div_31_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mbr_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", mbr_r2.MbrId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", mbr_r2.MbrName, \" \");\n  }\n}\nfunction AllReportsComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3, \"Select Member\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AllReportsComponent_div_31_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.MemberId = $event;\n    });\n    i0.ɵɵelementStart(5, \"option\", 19);\n    i0.ɵɵtext(6, \"-- Select --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, AllReportsComponent_div_31_option_7_Template, 2, 2, \"option\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.MemberId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0._Members);\n  }\n}\nexport let AllReportsComponent = /*#__PURE__*/(() => {\n  class AllReportsComponent {\n    constructor(gymServices, formBuilder, _router) {\n      this.gymServices = gymServices;\n      this.formBuilder = formBuilder;\n      this._router = _router;\n      this.optionValue = false;\n      this._Members = [];\n      this.columnDefs = [{\n        headerName: 'Name',\n        field: 'MbrName',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Mobile No',\n        field: 'MbrMob',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'DOB',\n        field: 'MbrDOB',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Marrial Status',\n        field: 'MbrMarrialStatus',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Email',\n        field: 'MbrEmail',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Addr',\n        field: 'MbrAddr',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'City',\n        field: 'MbrCity',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'State',\n        field: 'MbrState',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Pincode',\n        field: 'MbrPincode',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'PT Charges',\n        field: 'MbrPTCharges',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Batch',\n        field: 'MbrBatch',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Desciption',\n        field: 'GeneralDesc',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Gender',\n        field: 'MbrGender',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Membership Name',\n        field: 'MbrShipName',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'MemberShip Start Dt',\n        field: 'MbrshipStartDt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'MemberShip End Dt',\n        field: 'MbrshipEndDt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Paid Amt',\n        field: 'PaidAmt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Paid Dt',\n        field: 'PaidDt',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Paid By',\n        field: 'PaidBy',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Membership',\n        field: 'MembershipType',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Remaining Bal',\n        field: 'RemBalance',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Total Members',\n        field: 'TotalMembers',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Total Earn',\n        field: 'TotalEarn',\n        filter: 'agTextColumnFilter'\n      }, {\n        headerName: 'Total Amount',\n        field: 'TotalAmount',\n        filter: 'agTextColumnFilter'\n      }];\n    }\n    ngOnInit() {\n      this.IsSessionEnable = this.gymServices.CheckToken();\n      if (!this.IsSessionEnable) return this._router.navigate([\"\"]);\n      this.AllReportsForm = this.formBuilder.group({\n        MemberId: ['', [Validators.required, Validators.min(1)]]\n      });\n      this.GetAllMembers();\n    }\n    GetAllMembers() {\n      debugger;\n      this.gymServices.GetAllMembers().subscribe(result => {\n        if (!isNull(result)) {\n          this._Members = result;\n        }\n      }, error => alert(error.message));\n    }\n    OnReportChanges(e) {\n      this.rdValue = e.target.value;\n      if (e.target.value == 'YearlyReport') {\n        this.optionValue = true;\n      } else this.optionValue = false;\n    }\n    onGridReady(params) {\n      debugger;\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n    }\n    onSubmit() {\n      debugger;\n      this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrMob', 'MbrDOB', 'MbrMarrialStatus', 'MbrEmail', 'MbrAddr', 'MbrCity', 'MbrState', 'MbrPincode', 'MbrPTCharges', 'MbrBatch', 'GeneralDesc', 'MbrGender', 'MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'PaidAmt', 'PaidDt', 'PaidBy', 'MembershipType', 'RemBalance', 'TotalAmount', 'TotalEarn', 'TotalMembers'], false);\n      if (this.rdValue == \"YearlyReport\") {\n        if (this.MemberId != null) {\n          this.gymServices.GetMemberYearlyReport(this.MemberId).subscribe(result => {\n            if (!isNull(result)) {\n              this.rowData = result;\n              this.gridColumnApi.setColumnsVisible(['MbrName', 'MbrMob', 'MbrDOB', 'MbrMarrialStatus', 'MbrEmail', 'MbrAddr', 'MbrCity', 'MbrState', 'MbrPincode', 'MbrPTCharges', 'MbrBatch', 'GeneralDesc', 'MbrGender', 'MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'PaidAmt', 'PaidDt', 'PaidBy', 'MembershipType', 'RemBalance'], true);\n            } else {\n              this.rowData = \"\";\n            }\n          }, error => alert(error.message));\n        } else {\n          alert(\"Please select Members\");\n        }\n      } else if (this.rdValue == \"FinantialReport\") {\n        //this.gymServices.().subscribe(result => {\n        //    if (!isNull(result)) {\n        //        alert(result);\n        //        return this._router.navigate([\"/PTDetails\"]);\n        //    }\n        //}, error => alert(error.message))\n      } else if (this.rdValue == \"Summury\") {\n        this.gymServices.GetSummaryReport().subscribe(result => {\n          if (!isNull(result)) {\n            this.rowData = result;\n            this.gridColumnApi.setColumnsVisible(['MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'TotalMembers', 'TotalEarn'], true);\n          } else {\n            this.rowData = \"\";\n          }\n        }, error => alert(error.message));\n      } else if (this.rdValue == \"MbrShipReport\") {\n        this.gymServices.GetMembershipReport().subscribe(result => {\n          if (!isNull(result)) {\n            this.rowData = result;\n            this.gridColumnApi.setColumnsVisible(['MbrShipName', 'MbrshipStartDt', 'MbrshipEndDt', 'TotalMembers', 'TotalEarn'], true);\n          } else {\n            this.rowData = \"\";\n          }\n        }, error => alert(error.message));\n      } else if (this.rdValue == \"PersonalTraining\") {\n        this.gymServices.GetPTReport().subscribe(result => {\n          if (!isNull(result)) {\n            this.rowData = result;\n            this.gridColumnApi.setColumnsVisible(['MbrName', 'TotalAmount'], true);\n          } else {\n            this.rowData = \"\";\n          }\n        }, error => alert(error.message));\n      }\n    }\n    exportToExcel() {\n      // Get the grid data\n      const rowData = this.rowData;\n      // Create a new workbook\n      const workbook = XLSX.utils.book_new();\n      // Create a new worksheet\n      const worksheet = XLSX.utils.json_to_sheet(rowData);\n      // Add the worksheet to the workbook\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Data');\n      // Generate the Excel file\n      XLSX.writeFile(workbook, 'data.xlsx');\n    }\n  }\n  AllReportsComponent.ɵfac = function AllReportsComponent_Factory(t) {\n    return new (t || AllReportsComponent)(i0.ɵɵdirectiveInject(i1.GymService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  AllReportsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllReportsComponent,\n    selectors: [[\"app-all-reports\"]],\n    decls: 41,\n    vars: 4,\n    consts: [[1, \"wrapper\", \"fadeInDown\"], [1, \"p-2\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"action\", \"#\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-4\"], [\"type\", \"radio\", \"id\", \"rdEyr\", \"value\", \"YearlyReport\", \"name\", \"allReports\", 3, \"change\"], [\"for\", \"rdEyr\"], [\"type\", \"radio\", \"id\", \"rdSummury\", \"value\", \"Summury\", \"name\", \"allReports\", 3, \"change\"], [\"for\", \"rdSummury\"], [\"type\", \"radio\", \"id\", \"rdMr\", \"value\", \"MbrShipReport\", \"name\", \"allReports\", 3, \"change\"], [\"for\", \"rdMr\"], [\"type\", \"radio\", \"id\", \"edPt\", \"value\", \"PersonalTraining\", \"name\", \"allReports\", 3, \"change\"], [\"for\", \"edPt\"], [\"class\", \"form-row\", 4, \"ngIf\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"fadeIn\", \"fourth\"], [\"src\", \"./assets/excel-48.png\", 1, \"rptPicture\", 3, \"click\"], [\"domLayout\", \"autoHeight\", \"pagination\", \"true\", \"paginationPageSize\", \"20\", 1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"100%\", 3, \"animateRows\", \"rowData\", \"gridReady\"], [\"formControlName\", \"MemberId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"disabled\", \"\", \"selected\", \"\", \"value\", \"undefined\", 1, \"dropdown-item\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function AllReportsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"h4\", 2);\n        i0.ɵɵtext(4, \"Reports\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AllReportsComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\");\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"change\", function AllReportsComponent_Template_input_change_11_listener($event) {\n          return ctx.OnReportChanges($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Member Yearly Report\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵelementStart(16, \"input\", 8);\n        i0.ɵɵlistener(\"change\", function AllReportsComponent_Template_input_change_16_listener($event) {\n          return ctx.OnReportChanges($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Summury\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"div\", 5);\n        i0.ɵɵelementStart(22, \"input\", 10);\n        i0.ɵɵlistener(\"change\", function AllReportsComponent_Template_input_change_22_listener($event) {\n          return ctx.OnReportChanges($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"label\", 11);\n        i0.ɵɵtext(24, \"Membership Report\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 5);\n        i0.ɵɵelementStart(27, \"input\", 12);\n        i0.ɵɵlistener(\"change\", function AllReportsComponent_Template_input_change_27_listener($event) {\n          return ctx.OnReportChanges($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"label\", 13);\n        i0.ɵɵtext(29, \"Personal Training\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, AllReportsComponent_div_31_Template, 8, 2, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\");\n        i0.ɵɵelementStart(34, \"div\", 4);\n        i0.ɵɵelementStart(35, \"h3\");\n        i0.ɵɵtext(36, \" Report\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelementStart(38, \"img\", 16);\n        i0.ɵɵlistener(\"click\", function AllReportsComponent_Template_img_click_38_listener() {\n          return ctx.exportToExcel();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\");\n        i0.ɵɵelementStart(40, \"ag-grid-angular\", 17);\n        i0.ɵɵlistener(\"gridReady\", function AllReportsComponent_Template_ag_grid_angular_gridReady_40_listener($event) {\n          return ctx.onGridReady($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.AllReportsForm);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"ngIf\", ctx.optionValue);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"animateRows\", true)(\"rowData\", ctx.rowData);\n      }\n    },\n    directives: [i4.NavMenuComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i5.NgIf, i6.AgGridAngular, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i5.NgForOf],\n    styles: [\"label[_ngcontent-%COMP%]{margin-left:10px;font-size:medium}\"]\n  });\n  return AllReportsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}